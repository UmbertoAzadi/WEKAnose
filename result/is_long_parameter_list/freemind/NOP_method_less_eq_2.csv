3, CompoundActionHandler(freemind.modes.mindmapmode.MindMapController), 1.0, 2, 
4, act(Object[], freemind.controller.actions.generated.instance.XmlAction, java.lang.Object, freemind.modes.mindmapmode.actions.xml.ActorXml, freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.XmlAction, int), 1.0, 2, 
5, getDoActionClass(), 0.0, 2, 
6, actionPerformed(java.awt.event.ActionEvent), 1.0, 2, 
8, DeleteChildAction(freemind.modes.mindmapmode.MindMapController), 1.0, 7, 
9, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, freemind.modes.MindMapNode, int), 1.0, 7, 
10, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.DeleteNodeAction, freemind.modes.MindMapNode), 1.0, 7, 
11, deleteWithoutUndo(freemind.modes.MindMapNode, long, freemind.modes.MindMapNode, long, freemind.extensions.PermanentNodeHook), 1.0, 7, 
12, getDoActionClass(), 0.0, 7, 
13, deleteNode(freemind.controller.actions.generated.instance.PasteNodeAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.DeleteNodeAction, java.lang.String, freemind.modes.MindMapNode, freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate, java.awt.datatransfer.Transferable), 1.0, 7, 
14, getDeleteNodeAction(java.lang.String, freemind.controller.actions.generated.instance.DeleteNodeAction), 1.0, 7, 
16, CopyAction(freemind.modes.mindmapmode.MindMapController), 1.0, 15, 
17, actionPerformed(java.awt.event.ActionEvent, java.awt.datatransfer.Transferable), 1.0, 15, 
19, EdgeColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 18, 
20, actionPerformed(java.awt.event.ActionEvent, java.awt.Color, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 18, 
21, setEdgeColor(freemind.controller.actions.generated.instance.EdgeColorFormatAction, freemind.controller.actions.generated.instance.EdgeColorFormatAction, java.awt.Color, freemind.modes.MindMapNode), 2.0, 18, 
22, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.EdgeColorFormatAction, freemind.modes.MindMapNode, java.awt.Color, java.awt.Color), 1.0, 18, 
23, createEdgeColorFormatAction(freemind.modes.MindMapNode, java.awt.Color, freemind.controller.actions.generated.instance.EdgeColorFormatAction), 2.0, 18, 
24, getDoActionClass(), 0.0, 18, 
26, SetLinkByTextFieldAction(freemind.modes.mindmapmode.MindMapController), 1.0, 25, 
27, actionPerformed(java.lang.String, java.awt.event.ActionEvent), 1.0, 25, 
28, setLink(freemind.modes.MindMapNode, java.lang.String), 2.0, 25, 
29, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.AddLinkXmlAction, freemind.modes.NodeAdapter), 1.0, 25, 
30, getDoActionClass(), 0.0, 25, 
31, getActionPair(freemind.modes.MindMapNode, java.lang.String), 2.0, 25, 
32, createAddLinkXmlAction(freemind.modes.MindMapNode, java.lang.String, freemind.controller.actions.generated.instance.AddLinkXmlAction), 2.0, 25, 
34, UsePlainTextAction(freemind.modes.mindmapmode.MindMapController), 1.0, 33, 
36, NodeUpAction(freemind.modes.mindmapmode.MindMapController), 1.0, 35, 
37, actionPerformed(java.awt.event.ActionEvent), 1.0, 35, 
41, getSortedSiblings(freemind.modes.MindMapNode, java.util.Vector, java.util.Iterator), 1.0, 35, 
42, act(freemind.controller.actions.generated.instance.XmlAction, java.util.Vector, freemind.controller.actions.generated.instance.MoveNodesAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.NodeListMember, java.util.Iterator), 1.0, 35, 
43, getDoActionClass(), 0.0, 35, 
46, apply(freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapMapModel, java.lang.String), 2.0, 45, 
49, compare(java.lang.Object, java.lang.Object, int, int), 2.0, 48, 
52, compare(java.lang.Object, java.lang.Object, freemind.modes.MindMapNode, int, freemind.modes.MindMapNode, int), 2.0, 51, 
55, apply(freemind.modes.MindMapNode, freemind.modes.MindMap), 2.0, 54, 
57, NewPreviousSiblingAction(freemind.modes.mindmapmode.MindMapController), 1.0, 56, 
58, actionPerformed(java.awt.event.ActionEvent), 1.0, 56, 
61, actionPerformed(java.awt.event.ActionEvent), 1.0, 59, 
64, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapLink, freemind.controller.actions.generated.instance.ArrowLinkArrowXmlAction), 1.0, 59, 
65, getDoActionClass(), 0.0, 59, 
68, getLinkRegistry(), 0.0, 59, 
70, MindMapControllerHookAction(java.lang.String, freemind.modes.mindmapmode.MindMapController), 2.0, 69, 
71, actionPerformed(java.awt.event.ActionEvent, freemind.extensions.HookFactory, freemind.extensions.ModeControllerHook), 1.0, 69, 
72, getHookName(), 0.0, 69, 
74, EdgeWidthAction(int, freemind.modes.mindmapmode.MindMapController), 2.0, 73, 
75, apply(freemind.modes.MindMap, freemind.modes.MindMapNode), 2.0, 73, 
76, getDoActionClass(), 0.0, 73, 
77, setEdgeWidth(freemind.modes.MindMapNode, int), 2.0, 73, 
78, getActionPair(freemind.controller.actions.generated.instance.EdgeWidthFormatAction, freemind.controller.actions.generated.instance.EdgeWidthFormatAction, int, freemind.modes.MindMapNode), 2.0, 73, 
79, createEdgeWidthFormatAction(freemind.modes.MindMapNode, int, freemind.controller.actions.generated.instance.EdgeWidthFormatAction), 2.0, 73, 
80, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.EdgeAdapter, int, freemind.controller.actions.generated.instance.EdgeWidthFormatAction, freemind.modes.MindMapNode), 1.0, 73, 
81, getWidthTitle(java.lang.String, int, freemind.modes.mindmapmode.MindMapController), 2.0, 73, 
83, SelectAllAction(freemind.modes.mindmapmode.MindMapController), 1.0, 82, 
85, apply(freemind.modes.mindmapmode.MindMapMapModel, freemind.modes.mindmapmode.MindMapNodeModel), 2.0, 84, 
88, ChangeArrowLinkEndPoints(freemind.modes.mindmapmode.MindMapController), 1.0, 87, 
91, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapArrowLink, freemind.controller.actions.generated.instance.ArrowLinkPointXmlAction), 1.0, 87, 
92, getDoActionClass(), 0.0, 87, 
93, actionPerformed(java.awt.event.ActionEvent), 1.0, 87, 
95, getLinkRegistry(), 0.0, 87, 
97, JoinNodesAction(freemind.modes.mindmapmode.MindMapController), 1.0, 96, 
98, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMapNode, java.util.ArrayList), 1.0, 96, 
99, joinNodes(boolean, java.lang.String, freemind.modes.MindMapNode, java.util.List, freemind.modes.MindMapNode, boolean, freemind.view.mindmapview.MapView, java.util.Iterator, java.lang.String), 2.0, 96, 
102, RedoAction(freemind.modes.mindmapmode.MindMapController), 1.0, 101, 
103, informUndoPartner(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 101, 
105, ModeControllerActionHandler(freemind.modes.mindmapmode.actions.xml.ActionFactory), 1.0, 104, 
106, executeAction(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 104, 
107, startTransaction(java.lang.String), 1.0, 104, 
108, endTransaction(java.lang.String), 1.0, 104, 
111, setName(java.lang.String), 1.0, 109, 
114, addActor(freemind.modes.mindmapmode.actions.NodeActorXml), 1.0, 109, 
115, setSingleNodeOperation(freemind.modes.mindmapmode.actions.SingleNodeOperation), 1.0, 109, 
116, xmlActionPerformed(freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.CompoundAction, java.awt.event.ActionEvent, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 109, 
117, execute(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 109, 
118, act(freemind.controller.actions.generated.instance.XmlAction), 1.0, 109, 
119, getNodeFromID(java.lang.String), 1.0, 109, 
120, getNodeID(freemind.modes.MindMapNode), 1.0, 109, 
122, UndoAction(freemind.modes.mindmapmode.MindMapController), 1.0, 121, 
124, isUndoAction(), 0.0, 121, 
125, xmlActionPerformed(java.awt.event.ActionEvent, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 121, 
126, informUndoPartner(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 121, 
127, undoDoAction(freemind.controller.actions.generated.instance.UndoXmlAction, freemind.controller.actions.generated.instance.UndoXmlAction, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.String, java.lang.String), 1.0, 121, 
128, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UndoXmlAction), 1.0, 121, 
129, getDoActionClass(), 0.0, 121, 
130, setEnabled(boolean), 1.0, 121, 
131, add(long, freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.controller.actions.generated.instance.CompoundAction, int, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.NumberFormatException), 1.0, 121, 
132, startActionFrame(), 0.0, 121, 
133, clear(), 0.0, 121, 
134, print(int, freemind.modes.mindmapmode.actions.xml.ActionPair, java.util.Iterator), 0.0, 121, 
136, ApplyPatternAction(freemind.controller.actions.generated.instance.Pattern, freemind.modes.mindmapmode.MindMapController), 2.0, 135, 
137, apply(freemind.modes.mindmapmode.MindMapMapModel, freemind.modes.mindmapmode.MindMapNodeModel), 2.0, 135, 
138, applyPattern(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.Pattern, ApplyPatternAction[], freemind.modes.MindIcon, freemind.modes.NodeAdapter, java.util.Iterator, freemind.modes.mindmapmode.actions.ApplyPatternAction.ExternalPatternAction, freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin, java.lang.String, freemind.controller.actions.generated.instance.PatternEdgeWidth, java.lang.String, java.util.List, java.lang.String, boolean, int, java.util.ListIterator, java.lang.String), 2.0, 135, 
139, edgeWidthStringToInt(java.lang.String), 1.0, 135, 
140, edgeWidthIntToString(int), 1.0, 135, 
141, getPattern(), 0.0, 135, 
143, nodeChanged(freemind.modes.MindMapNode), 1.0, 142, 
144, nodeRefresh(freemind.modes.MindMapNode), 1.0, 142, 
145, nodeStructureChanged(freemind.modes.MindMapNode), 1.0, 142, 
147, setNodeText(freemind.modes.MindMapNode, java.lang.String), 2.0, 142, 
148, setNoteText(freemind.modes.MindMapNode, java.lang.String), 2.0, 142, 
151, deleteNode(freemind.modes.MindMapNode), 1.0, 142, 
152, cut(), 0.0, 142, 
153, cut(java.util.List), 1.0, 142, 
155, setFolded(boolean, freemind.modes.MindMapNode), 2.0, 142, 
156, toggleFolded(), 0.0, 142, 
157, setBold(freemind.modes.MindMapNode, boolean), 2.0, 142, 
158, setItalic(freemind.modes.MindMapNode, boolean), 2.0, 142, 
159, setNodeColor(freemind.modes.MindMapNode, java.awt.Color), 2.0, 142, 
160, setNodeBackgroundColor(freemind.modes.MindMapNode, java.awt.Color), 2.0, 142, 
161, blendNodeColor(freemind.modes.MindMapNode), 1.0, 142, 
162, setFontFamily(freemind.modes.MindMapNode, java.lang.String), 2.0, 142, 
163, setFontSize(freemind.modes.MindMapNode, java.lang.String), 2.0, 142, 
164, addIcon(freemind.modes.MindMapNode, freemind.modes.MindIcon), 2.0, 142, 
165, removeLastIcon(freemind.modes.MindMapNode), 1.0, 142, 
166, removeAllIcons(freemind.modes.MindMapNode), 1.0, 142, 
167, applyPattern(freemind.modes.MindMapNode, java.lang.String), 2.0, 142, 
168, applyPattern(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.Pattern), 2.0, 142, 
169, setNodeStyle(freemind.modes.MindMapNode, java.lang.String), 2.0, 142, 
170, setEdgeColor(java.awt.Color, freemind.modes.MindMapNode), 2.0, 142, 
171, setEdgeWidth(freemind.modes.MindMapNode, int), 2.0, 142, 
172, setEdgeStyle(freemind.modes.MindMapNode, java.lang.String), 2.0, 142, 
173, setCloud(boolean, freemind.modes.MindMapNode), 2.0, 142, 
174, setCloudColor(java.awt.Color, freemind.modes.MindMapNode), 2.0, 142, 
175, addLink(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 142, 
176, removeReference(freemind.modes.MindMapLink), 1.0, 142, 
178, setArrowLinkColor(freemind.modes.MindMapLink, java.awt.Color), 2.0, 142, 
180, setLink(freemind.modes.MindMapNode, java.lang.String), 2.0, 142, 
181, increaseFontSize(freemind.modes.MindMapNode, int), 2.0, 142, 
183, joinNodes(freemind.modes.MindMapNode, java.util.List), 2.0, 142, 
184, paste(java.awt.datatransfer.Transferable, freemind.modes.MindMapNode), 2.0, 142, 
186, paste(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 142, 
189, invokeHook(freemind.extensions.ModeControllerHook), 1.0, 142, 
190, invokeHooksRecursively(freemind.modes.MindMap, freemind.modes.NodeAdapter), 2.0, 142, 
191, getActionFactory(), 0.0, 142, 
192, marshall(freemind.controller.actions.generated.instance.XmlAction), 1.0, 142, 
193, unMarshall(java.lang.String), 1.0, 142, 
194, isUndoAction(), 0.0, 142, 
195, getRootNode(), 0.0, 142, 
198, load(java.lang.String), 1.0, 142, 
199, registerMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 142, 
200, deRegisterMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 142, 
202, addAttribute(freemind.modes.MindMapNode, freemind.modes.attributes.Attribute), 2.0, 142, 
203, removeAttribute(int, freemind.modes.MindMapNode), 2.0, 142, 
205, clearNodeContents(freemind.modes.MindMapNode), 1.0, 142, 
207, act(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.Pattern), 2.0, 206, 
209, run(), 0.0, 208, 
212, handleMouseWheelEvent(java.awt.event.MouseWheelEvent), 1.0, 211, 
214, CopySingleAction(freemind.modes.mindmapmode.MindMapController), 1.0, 213, 
215, actionPerformed(java.awt.event.ActionEvent, java.awt.datatransfer.Transferable), 1.0, 213, 
217, NewChildAction(freemind.modes.mindmapmode.MindMapController), 1.0, 216, 
218, actionPerformed(java.awt.event.ActionEvent), 1.0, 216, 
219, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.NewNodeAction, java.lang.String, java.util.Iterator, freemind.extensions.PermanentNodeHook, int, java.lang.String, freemind.modes.NodeAdapter), 1.0, 216, 
220, getDoActionClass(), 0.0, 216, 
222, addNewNode(freemind.modes.MindMapNode, int), 2.0, 216, 
226, RemoveArrowLinkAction(freemind.modes.mindmapmode.MindMapController, freemind.modes.mindmapmode.MindMapArrowLinkModel), 2.0, 225, 
227, actionPerformed(java.awt.event.ActionEvent), 1.0, 225, 
228, removeReference(freemind.modes.MindMapLink), 1.0, 225, 
229, getActionPair(freemind.modes.MindMapLink), 1.0, 225, 
230, getArrowLink(), 0.0, 225, 
231, setArrowLink(freemind.modes.mindmapmode.MindMapArrowLinkModel), 1.0, 225, 
232, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapLink, freemind.controller.actions.generated.instance.RemoveArrowLinkXmlAction), 1.0, 225, 
233, getDoActionClass(), 0.0, 225, 
234, getLinkRegistry(), 0.0, 225, 
235, createRemoveArrowLinkXmlAction(java.lang.String, freemind.controller.actions.generated.instance.RemoveArrowLinkXmlAction), 1.0, 225, 
236, createAddArrowLinkXmlAction(freemind.modes.MindMapLink, freemind.modes.MindMapArrowLink, freemind.controller.actions.generated.instance.AddArrowLinkXmlAction), 1.0, 225, 
238, ImportFolderStructureAction(freemind.modes.mindmapmode.MindMapController), 1.0, 237, 
239, actionPerformed(java.awt.event.ActionEvent, freemind.main.FreeMindMain, javax.swing.JFileChooser, int, java.io.File, java.lang.Exception), 1.0, 237, 
240, getFrame(), 0.0, 237, 
244, NodeBackgroundColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 243, 
245, actionPerformed(java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, java.awt.Color, java.util.ListIterator), 1.0, 243, 
246, setNodeBackgroundColor(freemind.controller.actions.generated.instance.NodeBackgroundColorFormatAction, freemind.controller.actions.generated.instance.NodeBackgroundColorFormatAction, freemind.modes.MindMapNode, java.awt.Color), 2.0, 243, 
247, createNodeBackgroundColorFormatAction(freemind.modes.MindMapNode, java.awt.Color, freemind.controller.actions.generated.instance.NodeBackgroundColorFormatAction), 2.0, 243, 
248, act(freemind.controller.actions.generated.instance.XmlAction, java.awt.Color, freemind.controller.actions.generated.instance.NodeBackgroundColorFormatAction, freemind.modes.MindMapNode, java.awt.Color), 1.0, 243, 
249, getDoActionClass(), 0.0, 243, 
251, RemoveNodeBackgroundColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 250, 
253, apply(freemind.modes.mindmapmode.MindMapMapModel, freemind.modes.mindmapmode.MindMapNodeModel), 2.0, 252, 
256, PasteAction(freemind.modes.mindmapmode.MindMapController), 1.0, 255, 
257, actionPerformed(java.awt.event.ActionEvent), 1.0, 255, 
258, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.PasteNodeAction), 1.0, 255, 
259, getDoActionClass(), 0.0, 255, 
260, getPasteNodeAction(java.awt.datatransfer.Transferable, freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate, freemind.controller.actions.generated.instance.PasteNodeAction), 2.0, 255, 
261, paste(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 255, 
263, addMindMapNodesFlavor(freemind.modes.NodeAdapter, java.util.ListIterator, freemind.controller.actions.generated.instance.TransferableContent, java.util.List, freemind.controller.actions.generated.instance.CutNodeAction, java.lang.String, java.awt.datatransfer.UnsupportedFlavorException), 0.0, 255, 
265, getFlavorHandlers(DataFlavorHandler[]), 0.0, 255, 
270, insertNodeInto(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 255, 
271, getTransferableContent(java.lang.String, java.awt.datatransfer.Transferable, java.util.List, freemind.controller.actions.generated.instance.TransferableContent, java.io.File, java.util.Iterator, freemind.controller.actions.generated.instance.TransferableFile, java.awt.datatransfer.UnsupportedFlavorException), 1.0, 255, 
272, getTransferable(java.util.Vector, freemind.controller.actions.generated.instance.TransferableContent, freemind.controller.actions.generated.instance.TransferableFile, java.util.Iterator, java.awt.datatransfer.Transferable), 1.0, 255, 
273, addUndoAction(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CutNodeAction), 1.0, 255, 
276, getNode(freemind.modes.MindMapNode), 0.0, 274, 
277, NodeCoordinate(boolean, freemind.modes.MindMapNode, freemind.modes.MindMapNode, int), 2.0, 274, 
280, getDataFlavor(), 0.0, 278, 
283, getDataFlavor(), 0.0, 281, 
287, getDataFlavor(), 0.0, 285, 
291, getDataFlavor(), 0.0, 289, 
295, getDataFlavor(), 0.0, 293, 
297, UnderlinedAction(freemind.modes.mindmapmode.MindMapController), 1.0, 296, 
298, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.UnderlinedNodeAction), 1.0, 296, 
299, getDoActionClass(), 0.0, 296, 
300, apply(freemind.modes.MindMapNode, freemind.modes.MindMap, boolean), 2.0, 296, 
301, getActionPair(freemind.controller.actions.generated.instance.UnderlinedNodeAction, freemind.controller.actions.generated.instance.UnderlinedNodeAction, freemind.modes.MindMapNode, boolean), 2.0, 296, 
302, toggleUnderlined(boolean, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.UnderlinedNodeAction), 2.0, 296, 
303, setUnderlined(freemind.modes.MindMapNode, boolean), 2.0, 296, 
304, isSelected(javax.swing.Action, javax.swing.JMenuItem), 2.0, 296, 
307, getDataFlavor(), 0.0, 305, 
310, FontFamilyAction(freemind.modes.mindmapmode.MindMapController), 1.0, 309, 
311, actionPerformed(java.lang.String), 1.0, 309, 
312, apply(freemind.modes.MindMap, freemind.modes.MindMapNode), 2.0, 309, 
313, getDoActionClass(), 0.0, 309, 
314, setFontFamily(freemind.modes.MindMapNode, java.lang.String), 2.0, 309, 
315, getActionPair(freemind.controller.actions.generated.instance.FontNodeAction, freemind.controller.actions.generated.instance.FontNodeAction, freemind.modes.MindMapNode, java.lang.String), 2.0, 309, 
316, createFontNodeAction(freemind.modes.MindMapNode, java.lang.String, freemind.controller.actions.generated.instance.FontNodeAction), 2.0, 309, 
317, act(java.lang.String, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.FontNodeAction, freemind.modes.MindMapNode), 1.0, 309, 
319, getHookName(), 0.0, 318, 
321, getController(), 0.0, 320, 
322, NodeHookAction(java.lang.String, freemind.modes.mindmapmode.MindMapController), 2.0, 320, 
323, actionPerformed(java.awt.event.ActionEvent), 1.0, 320, 
326, invoke(freemind.modes.MindMapNode, java.util.List), 2.0, 320, 
329, getInstanciationMethod(java.lang.String, freemind.extensions.HookInstanciationMethod, freemind.extensions.HookFactory), 1.0, 320, 
330, getHookFactory(freemind.extensions.HookFactory), 0.0, 320, 
331, isEnabled(javax.swing.Action, javax.swing.JMenuItem, java.lang.Object, freemind.controller.MenuItemEnabledListener, freemind.extensions.HookFactory), 2.0, 320, 
333, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.HookNodeAction, freemind.controller.actions.generated.instance.NodeListMember, freemind.modes.MindMapNode, java.util.Vector, java.util.Iterator), 1.0, 320, 
334, getDoActionClass(), 0.0, 320, 
335, getHookName(), 0.0, 320, 
336, isSelected(javax.swing.JMenuItem, javax.swing.Action, freemind.extensions.HookFactory, freemind.extensions.HookInstanciationMethod, java.lang.Object, freemind.modes.MindMapNode, java.util.List, freemind.controller.MenuItemSelectedListener, java.util.Collection, freemind.modes.MindMapNode), 2.0, 320, 
338, UseRichFormattingAction(freemind.modes.mindmapmode.MindMapController), 1.0, 337, 
340, apply(freemind.modes.mindmapmode.MindMapMapModel, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String), 2.0, 339, 
343, EdgeStyleAction(java.lang.String, freemind.modes.mindmapmode.MindMapController), 2.0, 342, 
344, apply(freemind.modes.MindMap, freemind.modes.MindMapNode), 2.0, 342, 
345, getDoActionClass(), 0.0, 342, 
346, setEdgeStyle(java.lang.String, freemind.modes.MindMapNode), 2.0, 342, 
347, getActionPair(java.lang.String, freemind.controller.actions.generated.instance.EdgeStyleFormatAction, freemind.controller.actions.generated.instance.EdgeStyleFormatAction, freemind.modes.MindMapNode, java.lang.String), 2.0, 342, 
348, createNodeStyleFormatAction(java.lang.String, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.EdgeStyleFormatAction), 2.0, 342, 
349, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.EdgeStyleFormatAction, java.lang.String, freemind.modes.MindMapEdge), 1.0, 342, 
351, RemoveIconAction(freemind.modes.mindmapmode.MindMapController), 1.0, 350, 
352, apply(freemind.controller.actions.generated.instance.AddIconAction, freemind.modes.MindMap, freemind.modes.MindMapNode, java.util.List), 2.0, 350, 
353, getDoActionClass(), 0.0, 350, 
354, createRemoveIconXmlAction(freemind.modes.MindMapNode, int, freemind.controller.actions.generated.instance.RemoveIconXmlAction), 2.0, 350, 
355, removeLastIcon(freemind.modes.MindMapNode), 1.0, 350, 
356, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RemoveIconXmlAction, int, freemind.modes.MindMapNode), 1.0, 350, 
357, setIconAction(freemind.modes.mindmapmode.actions.IconAction), 1.0, 350, 
358, getDescription(), 0.0, 350, 
359, getIcon(), 0.0, 350, 
360, getKeyStroke(), 0.0, 350, 
361, getKeystrokeResourceName(), 0.0, 350, 
363, CloudAction(freemind.modes.mindmapmode.MindMapController), 1.0, 362, 
364, getDoActionClass(), 0.0, 362, 
365, apply(freemind.modes.MindMap, freemind.modes.MindMapNode, freemind.modes.mindmapmode.actions.xml.ActionPair), 2.0, 362, 
366, setCloud(freemind.modes.MindMapNode, boolean), 2.0, 362, 
367, getActionPair(freemind.controller.actions.generated.instance.AddCloudXmlAction, freemind.controller.actions.generated.instance.AddCloudXmlAction, boolean, freemind.modes.MindMapNode), 2.0, 362, 
369, act(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.AddCloudXmlAction, java.awt.Color), 1.0, 362, 
370, isSelected(javax.swing.JMenuItem, javax.swing.Action), 2.0, 362, 
373, actionPerformed(java.awt.event.ActionEvent), 1.0, 371, 
374, addLastIcon(java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 371, 
375, removeIcon(boolean, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 371, 
376, toggleIcon(java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 371, 
377, removeAllIcons(java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 371, 
378, addIcon(freemind.modes.MindMapNode, freemind.modes.MindIcon), 2.0, 371, 
379, toggleIcon(freemind.modes.MindIcon, freemind.modes.MindMapNode), 2.0, 371, 
381, getAddLastIconActionPair(freemind.modes.MindIcon, freemind.modes.MindMapNode, int), 2.0, 371, 
383, getToggleIconActionPair(freemind.modes.MindMapNode, freemind.modes.MindIcon, int), 2.0, 371, 
386, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, int, java.lang.String, freemind.modes.MindIcon, freemind.controller.actions.generated.instance.AddIconAction), 1.0, 371, 
387, getDoActionClass(), 0.0, 371, 
389, getMindIcon(), 0.0, 371, 
390, getKeyStroke(java.lang.String, java.lang.String), 0.0, 371, 
391, getDescription(), 0.0, 371, 
392, getIcon(), 0.0, 371, 
393, getKeystrokeResourceName(), 0.0, 371, 
395, ToggleChildrenFoldedAction(freemind.modes.mindmapmode.MindMapController), 1.0, 394, 
396, actionPerformed(java.awt.event.ActionEvent, freemind.view.mindmapview.MapView, freemind.modes.MindMapNode), 1.0, 394, 
398, ExportBranchAction(freemind.modes.mindmapmode.MindMapController), 1.0, 397, 
399, actionPerformed(java.io.File, javax.swing.JFileChooser, java.net.URL, freemind.modes.ModeController, freemind.modes.mindmapmode.MindMapNodeModel, java.awt.event.ActionEvent, java.lang.String, java.lang.String, java.lang.String, int, int, freemind.modes.mindmapmode.MindMapMapModel, int, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.MindMapNode, java.net.MalformedURLException), 1.0, 397, 
401, CutAction(freemind.modes.mindmapmode.MindMapController), 1.0, 400, 
402, actionPerformed(java.awt.event.ActionEvent, java.awt.datatransfer.Transferable, int), 1.0, 400, 
403, getCutNodeAction(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CutNodeAction), 1.0, 400, 
404, cut(freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CompoundAction, java.util.List, freemind.controller.actions.generated.instance.CutNodeAction, java.awt.datatransfer.Transferable, freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate, java.util.Iterator, freemind.controller.actions.generated.instance.XmlAction, java.awt.datatransfer.Transferable), 1.0, 400, 
405, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CutNodeAction), 1.0, 400, 
406, getDoActionClass(), 0.0, 400, 
408, NodeColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 407, 
409, actionPerformed(java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, java.awt.Color, java.util.ListIterator), 1.0, 407, 
410, setNodeColor(freemind.controller.actions.generated.instance.NodeColorFormatAction, freemind.controller.actions.generated.instance.NodeColorFormatAction, freemind.modes.MindMapNode, java.awt.Color), 2.0, 407, 
411, createNodeColorFormatAction(freemind.modes.MindMapNode, java.awt.Color, freemind.controller.actions.generated.instance.NodeColorFormatAction), 2.0, 407, 
412, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.NodeColorFormatAction, java.awt.Color, freemind.modes.MindMapNode, java.awt.Color), 1.0, 407, 
413, getDoActionClass(), 0.0, 407, 
415, RemoveAllIconsAction(freemind.modes.mindmapmode.actions.IconAction, freemind.modes.mindmapmode.MindMapController), 2.0, 414, 
416, apply(freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.MindMapNode, freemind.modes.MindMap, java.util.Iterator, freemind.modes.MindIcon), 2.0, 414, 
417, createRemoveAllIconsXmlAction(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.RemoveAllIconsXmlAction), 1.0, 414, 
418, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RemoveAllIconsXmlAction, freemind.modes.MindMapNode), 1.0, 414, 
419, removeAllIcons(freemind.modes.MindMapNode), 1.0, 414, 
420, getDoActionClass(), 0.0, 414, 
421, getDescription(), 0.0, 414, 
422, getIcon(), 0.0, 414, 
423, getKeyStroke(), 0.0, 414, 
424, getKeystrokeResourceName(), 0.0, 414, 
426, NewSiblingAction(freemind.modes.mindmapmode.MindMapController), 1.0, 425, 
427, actionPerformed(java.awt.event.ActionEvent), 1.0, 425, 
429, ItalicAction(freemind.modes.mindmapmode.MindMapController), 1.0, 428, 
430, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.ItalicNodeAction), 1.0, 428, 
431, getDoActionClass(), 0.0, 428, 
432, apply(freemind.modes.MindMapNode, freemind.modes.MindMap, boolean), 2.0, 428, 
433, getActionPair(freemind.controller.actions.generated.instance.ItalicNodeAction, freemind.controller.actions.generated.instance.ItalicNodeAction, freemind.modes.MindMapNode, boolean), 2.0, 428, 
434, toggleItalic(freemind.modes.MindMapNode, boolean, freemind.controller.actions.generated.instance.ItalicNodeAction), 2.0, 428, 
435, setItalic(boolean, freemind.modes.MindMapNode), 2.0, 428, 
436, isSelected(javax.swing.Action, javax.swing.JMenuItem), 2.0, 428, 
438, ToggleFoldedAction(freemind.modes.mindmapmode.MindMapController), 1.0, 437, 
439, actionPerformed(java.awt.event.ActionEvent), 1.0, 437, 
440, toggleFolded(), 0.0, 437, 
441, toggleFolded(freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.CompoundAction, java.util.ListIterator, boolean), 1.0, 437, 
444, act(freemind.controller.actions.generated.instance.XmlAction, boolean, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.FoldAction), 1.0, 437, 
445, getDoActionClass(), 0.0, 437, 
446, setFolded(freemind.controller.actions.generated.instance.FoldAction, freemind.controller.actions.generated.instance.FoldAction, freemind.modes.MindMapNode, boolean), 2.0, 437, 
448, FontSizeAction(freemind.modes.mindmapmode.MindMapController), 1.0, 447, 
449, actionPerformed(java.lang.String), 1.0, 447, 
450, apply(freemind.modes.MindMap, freemind.modes.MindMapNode), 2.0, 447, 
451, getDoActionClass(), 0.0, 447, 
452, setFontSize(freemind.modes.MindMapNode, java.lang.String), 2.0, 447, 
453, getActionPair(freemind.controller.actions.generated.instance.FontSizeNodeAction, freemind.controller.actions.generated.instance.FontSizeNodeAction, freemind.modes.MindMapNode, java.lang.String), 2.0, 447, 
454, createFontSizeNodeAction(java.lang.String, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.FontSizeNodeAction), 2.0, 447, 
455, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.FontSizeNodeAction, int, freemind.modes.MindMapNode, java.lang.NumberFormatException), 1.0, 447, 
457, RevertAction(freemind.modes.mindmapmode.MindMapController), 1.0, 456, 
458, actionPerformed(freemind.controller.actions.generated.instance.RevertXmlAction, freemind.controller.actions.generated.instance.RevertXmlAction, java.awt.event.ActionEvent, java.io.File, java.io.IOException), 1.0, 456, 
459, openXmlInsteadOfMap(freemind.controller.actions.generated.instance.RevertXmlAction, freemind.controller.actions.generated.instance.RevertXmlAction, java.lang.String, java.io.IOException), 1.0, 456, 
460, createRevertXmlAction(int, java.io.File, java.io.FileReader, java.lang.String, java.lang.StringBuffer), 1.0, 456, 
463, act(java.lang.String, java.io.File, freemind.controller.actions.generated.instance.XmlAction, java.io.FileWriter, freemind.controller.actions.generated.instance.RevertXmlAction, java.lang.Exception), 1.0, 456, 
464, getDoActionClass(), 0.0, 456, 
466, NodeStyleAction(java.lang.String, freemind.modes.mindmapmode.MindMapController), 2.0, 465, 
467, apply(java.lang.String, freemind.modes.MindMap, freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 465, 
468, getDoActionClass(), 0.0, 465, 
469, setStyle(freemind.modes.MindMapNode, java.lang.String), 2.0, 465, 
470, getActionPair(freemind.controller.actions.generated.instance.NodeStyleFormatAction, freemind.controller.actions.generated.instance.NodeStyleFormatAction, freemind.modes.MindMapNode, java.lang.String), 2.0, 465, 
471, createNodeStyleFormatAction(java.lang.String, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.NodeStyleFormatAction), 2.0, 465, 
472, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.NodeStyleFormatAction, java.lang.String, freemind.modes.MindMapNode), 1.0, 465, 
473, isSelected(javax.swing.Action, javax.swing.JMenuItem, freemind.modes.MindMapNode), 2.0, 465, 
475, SelectBranchAction(freemind.modes.mindmapmode.MindMapController), 1.0, 474, 
476, actionPerformed(java.awt.event.ActionEvent), 1.0, 474, 
478, ColorArrowLinkAction(freemind.modes.mindmapmode.MindMapController, freemind.modes.mindmapmode.MindMapArrowLinkModel), 2.0, 477, 
479, actionPerformed(java.awt.event.ActionEvent, java.awt.Color, java.awt.Color), 1.0, 477, 
480, setArrowLinkColor(java.awt.Color, freemind.modes.MindMapLink), 2.0, 477, 
481, getActionPair(java.awt.Color, freemind.modes.MindMapLink), 2.0, 477, 
482, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapLink, freemind.controller.actions.generated.instance.ArrowLinkColorXmlAction), 1.0, 477, 
483, getDoActionClass(), 0.0, 477, 
484, createArrowLinkColorXmlAction(freemind.modes.MindMapLink, java.awt.Color, freemind.controller.actions.generated.instance.ArrowLinkColorXmlAction), 2.0, 477, 
485, getLinkRegistry(), 0.0, 477, 
489, addActor(freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 486, 
490, getMindMapController(), 0.0, 486, 
492, CloudColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 491, 
493, actionPerformed(java.awt.Color, java.awt.event.ActionEvent, java.awt.Color, freemind.modes.mindmapmode.MindMapNodeModel, java.util.ListIterator), 1.0, 491, 
494, setCloudColor(freemind.controller.actions.generated.instance.CloudColorXmlAction, freemind.controller.actions.generated.instance.CloudColorXmlAction, freemind.modes.MindMapNode, java.awt.Color), 2.0, 491, 
495, createCloudColorXmlAction(freemind.modes.MindMapNode, java.awt.Color, freemind.controller.actions.generated.instance.CloudColorXmlAction), 2.0, 491, 
496, act(java.awt.Color, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CloudColorXmlAction, java.awt.Color, freemind.modes.MindMapNode), 1.0, 491, 
497, getDoActionClass(), 0.0, 491, 
498, isEnabled(javax.swing.Action, javax.swing.JMenuItem), 2.0, 491, 
500, setRemoveAction(freemind.modes.mindmapmode.actions.RemoveArrowLinkAction), 1.0, 499, 
501, AddArrowLinkAction(freemind.modes.mindmapmode.MindMapController), 1.0, 499, 
502, actionPerformed(java.awt.event.ActionEvent, int, java.util.List), 1.0, 499, 
503, act(freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.AddArrowLinkXmlAction, java.lang.String, freemind.modes.mindmapmode.MindMapArrowLinkModel), 1.0, 499, 
504, getDoActionClass(), 0.0, 499, 
505, getActionPair(freemind.controller.actions.generated.instance.RemoveArrowLinkXmlAction, freemind.controller.actions.generated.instance.AddArrowLinkXmlAction, freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 499, 
507, addLink(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 499, 
508, getLinkRegistry(), 0.0, 499, 
510, NodeColorBlendAction(freemind.modes.mindmapmode.MindMapController), 1.0, 509, 
512, apply(freemind.modes.mindmapmode.MindMapMapModel, freemind.modes.mindmapmode.MindMapNodeModel), 2.0, 511, 
515, apply(freemind.modes.mindmapmode.MindMapMapModel, freemind.modes.mindmapmode.MindMapNodeModel), 2.0, 514, 
517, MoveNodeAction(freemind.modes.mindmapmode.MindMapController), 1.0, 516, 
518, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.MoveNodeXmlAction, freemind.modes.NodeAdapter), 1.0, 516, 
519, getDoActionClass(), 0.0, 516, 
520, apply(freemind.modes.MindMapNode, freemind.modes.MindMap), 2.0, 516, 
525, AddLocalLinkAction(freemind.modes.mindmapmode.MindMapController), 1.0, 524, 
526, actionPerformed(freemind.modes.MindMapNode, java.awt.event.ActionEvent, java.util.List, int, java.lang.String, freemind.modes.MindMapNode), 1.0, 524, 
528, EditAction(freemind.modes.mindmapmode.MindMapController), 1.0, 527, 
529, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMapNode), 1.0, 527, 
530, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.EditNodeAction, freemind.modes.NodeAdapter), 1.0, 527, 
531, getDoActionClass(), 0.0, 527, 
534, setNodeText(freemind.controller.actions.generated.instance.EditNodeAction, freemind.controller.actions.generated.instance.EditNodeAction, java.lang.String, freemind.modes.MindMapNode, java.lang.String), 2.0, 527, 
535, getMindMapController(), 0.0, 527, 
536, setHtmlText(freemind.view.mindmapview.NodeView, java.lang.String, java.lang.String), 2.0, 527, 
537, stopEditing(), 0.0, 527, 
539, ImportExplorerFavoritesAction(freemind.modes.mindmapmode.MindMapController), 1.0, 538, 
540, actionPerformed(java.awt.event.ActionEvent, java.io.File, javax.swing.JFileChooser, int), 1.0, 538, 
542, addNode(freemind.modes.MindMapNode, java.lang.String, freemind.modes.MindMapNode), 2.0, 538, 
544, cancel(), 0.0, 543, 
545, ok(java.lang.String), 1.0, 543, 
546, split(java.lang.String, int), 2.0, 543, 
549, cancel(), 0.0, 548, 
550, ok(java.lang.String), 1.0, 548, 
551, split(java.lang.String, int), 2.0, 548, 
554, cancel(), 0.0, 553, 
555, ok(java.lang.String), 1.0, 553, 
556, split(java.lang.String, int), 2.0, 553, 
559, BoldAction(freemind.modes.mindmapmode.MindMapController), 1.0, 558, 
560, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.BoldNodeAction), 1.0, 558, 
561, getDoActionClass(), 0.0, 558, 
562, apply(freemind.modes.MindMapNode, freemind.modes.MindMap, boolean), 2.0, 558, 
563, getActionPair(freemind.controller.actions.generated.instance.BoldNodeAction, freemind.controller.actions.generated.instance.BoldNodeAction, boolean, freemind.modes.MindMapNode), 2.0, 558, 
564, toggleBold(boolean, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.BoldNodeAction), 2.0, 558, 
565, setBold(boolean, freemind.modes.MindMapNode), 2.0, 558, 
566, isSelected(javax.swing.JMenuItem, javax.swing.Action), 2.0, 558, 
568, cancel(java.util.Vector), 0.0, 567, 
569, ok(java.lang.String), 1.0, 567, 
570, endEdit(), 0.0, 567, 
571, split(java.lang.String, int), 2.0, 567, 
575, getStartInclination(), 0.0, 574, 
576, getEndInclination(), 0.0, 574, 
577, setStartInclination(java.awt.Point), 1.0, 574, 
578, setEndInclination(java.awt.Point), 1.0, 574, 
579, getStartArrow(), 0.0, 574, 
580, getEndArrow(), 0.0, 574, 
582, showControlPoints(boolean), 1.0, 574, 
583, getShowControlPointsFlag(), 0.0, 574, 
584, save(), 0.0, 574, 
586, getRootNode(), 0.0, 585, 
587, getModeController(), 0.0, 585, 
588, nodeChanged(javax.swing.tree.TreeNode), 1.0, 585, 
589, nodeRefresh(javax.swing.tree.TreeNode), 1.0, 585, 
590, getAsPlainText(java.util.List), 1.0, 585, 
591, getAsRTF(java.util.List), 1.0, 585, 
592, getAsHTML(java.util.List), 1.0, 585, 
593, getFile(), 0.0, 585, 
594, getURL(), 0.0, 585, 
595, getXml(java.io.Writer), 1.0, 585, 
596, getFilteredXml(java.io.Writer), 1.0, 585, 
597, getRestoreable(), 0.0, 585, 
598, getPathToRoot(javax.swing.tree.TreeNode), 1.0, 585, 
599, getLinkRegistry(), 0.0, 585, 
600, destroy(), 0.0, 585, 
601, isReadOnly(), 0.0, 585, 
602, isSaved(), 0.0, 585, 
603, getRegistry(), 0.0, 585, 
604, getFilter(), 0.0, 585, 
605, setFilter(freemind.controller.filter.Filter), 1.0, 585, 
606, nodeStructureChanged(javax.swing.tree.TreeNode), 1.0, 585, 
607, setSaved(boolean), 1.0, 585, 
609, StylePattern(), 0.0, 608, 
610, StylePattern(freemind.main.XMLElement, java.util.List), 2.0, 608, 
611, StylePattern(freemind.modes.MindMapNode), 1.0, 608, 
612, toString(), 0.0, 608, 
613, getAppliesToEdge(), 0.0, 608, 
614, getAppliesToNode(), 0.0, 608, 
615, getAppliesToNodeFont(), 0.0, 608, 
616, getAppliesToNodeIcon(), 0.0, 608, 
617, getAppliesToChildren(), 0.0, 608, 
618, getName(), 0.0, 608, 
619, setName(java.lang.String), 1.0, 608, 
620, getRecursive(), 0.0, 608, 
621, setRecursive(boolean), 1.0, 608, 
622, getText(), 0.0, 608, 
623, setText(java.lang.String), 1.0, 608, 
624, getNodeColor(), 0.0, 608, 
625, setNodeColor(java.awt.Color), 1.0, 608, 
626, getNodeBackgroundColor(), 0.0, 608, 
627, setNodeBackgroundColor(java.awt.Color), 1.0, 608, 
628, getNodeStyle(), 0.0, 608, 
629, setNodeStyle(java.lang.String), 1.0, 608, 
630, getNodeFontFamily(), 0.0, 608, 
631, setNodeFontFamily(java.lang.String), 1.0, 608, 
632, getNodeFontSize(), 0.0, 608, 
633, setNodeFontSize(java.lang.Integer), 1.0, 608, 
634, getNodeIcon(), 0.0, 608, 
635, setNodeIcon(freemind.modes.MindIcon), 1.0, 608, 
636, getEdgeColor(), 0.0, 608, 
637, setEdgeColor(java.awt.Color), 1.0, 608, 
638, getEdgeStyle(), 0.0, 608, 
639, setEdgeStyle(java.lang.String), 1.0, 608, 
640, getEdgeWidth(), 0.0, 608, 
641, setEdgeWidth(java.lang.Integer), 1.0, 608, 
642, getChildrenStylePattern(), 0.0, 608, 
643, setChildrenStylePattern(freemind.modes.StylePattern), 1.0, 608, 
644, loadPatterns(java.io.File), 1.0, 608, 
645, loadPatterns(java.util.List, java.io.Reader, freemind.main.XMLElement, java.util.Enumeration), 1.0, 608, 
646, loadPattern(boolean, java.util.List, freemind.main.XMLElement, java.util.Iterator, java.util.ListIterator, java.util.Iterator, freemind.main.XMLElement, java.lang.String, freemind.main.XMLElement, freemind.modes.StylePattern), 2.0, 608, 
647, getNodeFontBold(), 0.0, 608, 
648, setNodeFontBold(java.lang.Boolean), 1.0, 608, 
649, getNodeFontItalic(), 0.0, 608, 
650, setNodeFontItalic(java.lang.Boolean), 1.0, 608, 
652, save(), 0.0, 651, 
653, hasStyle(), 0.0, 651, 
655, CloudAdapter(freemind.modes.MindMapNode, freemind.main.FreeMindMain), 2.0, 654, 
656, calcIterativeLevel(freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.MindMapCloud), 1.0, 654, 
657, setTarget(freemind.modes.MindMapNode), 1.0, 654, 
658, getExteriorColor(), 0.0, 654, 
659, getIterativeLevel(), 0.0, 654, 
660, changeIterativeLevel(int), 1.0, 654, 
661, save(freemind.main.XMLElement), 0.0, 654, 
662, getStandardColor(), 0.0, 654, 
663, setStandardColor(java.awt.Color), 1.0, 654, 
664, getStandardStyle(), 0.0, 654, 
665, setStandardStyle(java.lang.String), 1.0, 654, 
666, getStandardColorPropertyString(), 0.0, 654, 
667, getStandardStylePropertyString(), 0.0, 654, 
669, MapAdapter(freemind.main.FreeMindMain, freemind.modes.ModeController), 2.0, 668, 
670, getModeController(), 0.0, 668, 
671, save(java.io.File), 1.0, 668, 
672, load(java.net.URL), 1.0, 668, 
673, load(java.io.File, java.net.URISyntaxException), 1.0, 668, 
674, tryToLock(java.io.File), 1.0, 668, 
675, destroy(), 0.0, 668, 
676, removeNodes(freemind.modes.MindMapNode, java.util.Iterator, freemind.extensions.PermanentNodeHook, freemind.modes.MindMapNode), 1.0, 668, 
677, getFrame(), 0.0, 668, 
678, isSaved(), 0.0, 668, 
679, isReadOnly(), 0.0, 668, 
680, setSaved(boolean, boolean), 1.0, 668, 
681, getNumberOfChangesSinceLastSave(), 0.0, 668, 
682, getRootNode(), 0.0, 668, 
683, setRoot(freemind.modes.MindMapNode), 1.0, 668, 
684, getFile(), 0.0, 668, 
685, getURL(), 0.0, 668, 
686, setFile(java.io.File), 1.0, 668, 
687, getText(java.lang.String), 1.0, 668, 
688, getAsPlainText(java.util.List), 1.0, 668, 
689, getAsRTF(java.util.List), 1.0, 668, 
690, getAsHTML(java.util.List), 1.0, 668, 
691, getRestoreable(), 0.0, 668, 
692, getLinkRegistry(), 0.0, 668, 
693, nodeChanged(javax.swing.tree.TreeNode), 1.0, 668, 
694, nodeRefresh(javax.swing.tree.TreeNode), 1.0, 668, 
695, nodeChangedInternal(javax.swing.tree.TreeNode), 1.0, 668, 
704, getRegistry(), 0.0, 668, 
705, getFilter(), 0.0, 668, 
706, setFilter(freemind.controller.filter.Filter), 1.0, 668, 
711, MapRegistry(freemind.modes.MindMap, freemind.modes.ModeController), 2.0, 710, 
712, addIcon(freemind.modes.MindIcon), 1.0, 710, 
713, getIcons(), 0.0, 710, 
714, getAttributes(), 0.0, 710, 
715, registrySubtree(boolean, freemind.modes.MindMapNode, java.util.ListIterator, freemind.modes.MindMapNode), 2.0, 710, 
716, registryAttributes(freemind.modes.MindMapNode, int, freemind.modes.attributes.NodeAttributeTableModel), 1.0, 710, 
717, registryNodeIcons(freemind.modes.MindMapNode, java.util.Iterator, java.util.List, freemind.modes.MindIcon), 1.0, 710, 
718, getMap(), 0.0, 710, 
719, getModeController(), 0.0, 710, 
720, save(java.io.Writer), 1.0, 710, 
722, HistoryInformation(long), 0.0, 721, 
723, HistoryInformation(java.util.Date, java.util.Date), 2.0, 721, 
724, getCreatedAt(), 0.0, 721, 
725, getLastModifiedAt(), 0.0, 721, 
726, setCreatedAt(java.util.Date), 1.0, 721, 
727, setLastModifiedAt(java.util.Date), 1.0, 721, 
729, getExteriorColor(), 0.0, 728, 
730, getIterativeLevel(), 0.0, 728, 
731, changeIterativeLevel(int), 1.0, 728, 
732, save(), 0.0, 728, 
734, LinkRegistryAdapter(), 0.0, 733, 
735, generateUniqueID(java.lang.String), 1.0, 733, 
736, generateUniqueLinkID(java.lang.String), 1.0, 733, 
738, registerLinkTarget(freemind.modes.MindMapNode), 1.0, 733, 
739, registerLinkTarget(java.lang.String, freemind.modes.MindMapNode), 2.0, 733, 
740, _registerLinkTarget(freemind.modes.MindMapNode), 1.0, 733, 
741, _registerLinkTarget(java.lang.String, freemind.modes.MindMapNode, java.lang.String, freemind.modes.LinkRegistryAdapter.ID_BasicState), 2.0, 733, 
742, getState(freemind.modes.MindMapNode), 1.0, 733, 
743, getTargetForID(java.lang.String, java.lang.Object), 1.0, 733, 
744, getAssignedLinksVector(java.util.Vector, freemind.modes.LinkRegistryAdapter.ID_Registered, java.lang.String), 1.0, 733, 
745, deregisterLinkTarget(freemind.modes.MindMapNode, freemind.modes.LinkRegistryAdapter.ID_BasicState, java.util.Vector, int), 1.0, 733, 
746, registerLink(java.lang.String, freemind.modes.MindMapLink, freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.LinkRegistryAdapter.ID_Registered, int, java.util.Vector), 1.0, 733, 
747, deregisterLink(freemind.modes.MindMapLink, java.util.Vector, int, freemind.modes.LinkRegistryAdapter.ID_Registered, freemind.modes.MindMapNode, freemind.modes.MindMapNode), 1.0, 733, 
748, getLinkForID(java.lang.String), 1.0, 733, 
749, getAllSources(freemind.modes.MindMapNode, java.util.Vector, freemind.modes.LinkRegistryAdapter.ID_BasicState, java.util.Vector, int), 1.0, 733, 
750, getAllLinks(freemind.modes.MindMapNode, java.util.Vector), 1.0, 733, 
751, getAllLinksIntoMe(freemind.modes.MindMapNode, freemind.modes.LinkRegistryAdapter.ID_BasicState, java.util.Vector, java.util.Vector), 1.0, 733, 
752, getAllLinksFromMe(freemind.modes.MindMapNode, java.util.Collection, int, java.util.Vector, freemind.modes.MindMapLink, java.util.Vector, java.util.Iterator), 1.0, 733, 
753, getLabel(freemind.modes.MindMapNode, freemind.modes.LinkRegistryAdapter.ID_BasicState), 1.0, 733, 
754, cutNode(java.util.Vector, freemind.modes.MindMapNode, freemind.modes.MindMapLink, freemind.modes.LinkRegistryAdapter.ID_BasicState, java.util.Vector, int, freemind.modes.MindMapNode, java.util.ListIterator, java.lang.String), 1.0, 733, 
755, clearCuttedNodeBuffer(), 0.0, 733, 
756, getCuttedLinks(java.util.Vector, java.lang.String), 1.0, 733, 
757, registerLocalHyperlinkId(java.lang.String), 1.0, 733, 
758, isTargetOfLocalHyperlinks(java.lang.String), 1.0, 733, 
760, getID(), 0.0, 759, 
761, toString(), 0.0, 759, 
764, getTarget(), 0.0, 763, 
767, getID(), 0.0, 766, 
768, toString(), 0.0, 766, 
772, getTarget(), 0.0, 771, 
773, ID_UsedStateAdapter(java.lang.String, freemind.modes.MindMapNode), 2.0, 771, 
774, ID_UsedStateAdapter(), 0.0, 771, 
775, clone(freemind.modes.LinkRegistryAdapter.ID_UsedStateAdapter), 1.0, 771, 
777, ID_RegisteredAdapter(java.lang.String, freemind.modes.MindMapNode), 2.0, 776, 
779, getDescription(), 0.0, 778, 
780, getIcon(), 0.0, 778, 
781, getKeystrokeResourceName(), 0.0, 778, 
782, getKeyStroke(), 0.0, 778, 
784, MindIcon(java.lang.String), 1.0, 783, 
785, MindIcon(javax.swing.ImageIcon, java.lang.String), 2.0, 783, 
786, toString(), 0.0, 783, 
787, getName(), 0.0, 783, 
788, setName(java.lang.String), 1.0, 783, 
789, getDescription(java.lang.String), 0.0, 783, 
790, getIconFileName(), 0.0, 783, 
791, getIconBaseFileName(), 0.0, 783, 
792, getIconsPath(), 0.0, 783, 
793, getIcon(java.net.URL, java.io.File, javax.swing.ImageIcon, java.lang.Exception), 0.0, 783, 
794, setIcon(javax.swing.ImageIcon), 1.0, 783, 
795, getAllIconNames(java.lang.String, java.util.Vector, java.util.StringTokenizer), 0.0, 783, 
796, factory(java.lang.String, freemind.modes.MindIcon), 1.0, 783, 
797, factory(javax.swing.ImageIcon, java.lang.String, freemind.modes.MindIcon), 2.0, 783, 
798, compareTo(java.lang.Object, int, freemind.modes.MindIcon, int), 1.0, 783, 
799, getNumber(), 0.0, 783, 
800, getRendererComponent(), 0.0, 783, 
801, getKeystrokeResourceName(), 0.0, 783, 
802, getKeyStroke(), 0.0, 783, 
804, getText(), 0.0, 803, 
805, setText(java.lang.String), 1.0, 803, 
806, getXmlText(), 0.0, 803, 
807, setXmlText(java.lang.String), 1.0, 803, 
808, getXmlNoteText(), 0.0, 803, 
809, setXmlNoteText(java.lang.String), 1.0, 803, 
810, getNoteText(), 0.0, 803, 
811, setNoteText(java.lang.String), 1.0, 803, 
812, getObjectId(freemind.modes.ModeController), 1.0, 803, 
813, childrenFolded(), 0.0, 803, 
814, childrenUnfolded(), 0.0, 803, 
815, getChildren(), 0.0, 803, 
816, hasChildren(), 0.0, 803, 
817, getFilterInfo(), 0.0, 803, 
818, getChildPosition(freemind.modes.MindMapNode), 1.0, 803, 
819, getNodeLevel(), 0.0, 803, 
820, getLink(), 0.0, 803, 
821, getShortText(freemind.modes.ModeController), 1.0, 803, 
822, getEdge(), 0.0, 803, 
823, getColor(), 0.0, 803, 
824, getStyle(), 0.0, 803, 
825, setStyle(java.lang.String), 1.0, 803, 
826, hasStyle(), 0.0, 803, 
827, getParentNode(), 0.0, 803, 
828, isBold(), 0.0, 803, 
829, isItalic(), 0.0, 803, 
830, isUnderlined(), 0.0, 803, 
831, getFont(), 0.0, 803, 
832, getFontSize(), 0.0, 803, 
833, getFontFamilyName(), 0.0, 803, 
834, getViewers(), 0.0, 803, 
835, addViewer(freemind.view.mindmapview.NodeView), 1.0, 803, 
836, removeViewer(freemind.view.mindmapview.NodeView), 1.0, 803, 
837, toString(), 0.0, 803, 
838, getPlainTextContent(), 0.0, 803, 
839, getPath(), 0.0, 803, 
840, isDescendantOf(freemind.modes.MindMapNode), 1.0, 803, 
841, isRoot(), 0.0, 803, 
842, isFolded(), 0.0, 803, 
843, isLeft(), 0.0, 803, 
844, setLeft(boolean), 1.0, 803, 
845, setFolded(boolean), 1.0, 803, 
846, setFont(java.awt.Font), 1.0, 803, 
847, setShiftY(int), 1.0, 803, 
848, getShiftY(), 0.0, 803, 
849, calcShiftY(), 0.0, 803, 
850, setVGap(int), 1.0, 803, 
851, getVGap(), 0.0, 803, 
852, setHGap(int), 1.0, 803, 
853, getHGap(), 0.0, 803, 
854, setLink(java.lang.String), 1.0, 803, 
855, setFontSize(int), 1.0, 803, 
856, setColor(java.awt.Color), 1.0, 803, 
857, getIcons(), 0.0, 803, 
858, addIcon(freemind.modes.MindIcon, int), 2.0, 803, 
859, removeIcon(int), 1.0, 803, 
860, getCloud(), 0.0, 803, 
861, setCloud(freemind.modes.MindMapCloud), 1.0, 803, 
862, getBackgroundColor(), 0.0, 803, 
863, setBackgroundColor(java.awt.Color), 1.0, 803, 
864, getHooks(), 0.0, 803, 
865, getActivatedHooks(), 0.0, 803, 
866, addHook(freemind.extensions.PermanentNodeHook), 1.0, 803, 
867, invokeHook(freemind.extensions.NodeHook), 1.0, 803, 
868, removeHook(freemind.extensions.PermanentNodeHook), 1.0, 803, 
869, setToolTip(java.lang.String, java.lang.String), 2.0, 803, 
870, getToolTip(), 0.0, 803, 
871, setAdditionalInfo(java.lang.String), 1.0, 803, 
872, getAdditionalInfo(), 0.0, 803, 
873, shallowCopy(), 0.0, 803, 
875, getStateIcons(), 0.0, 803, 
876, setStateIcon(javax.swing.ImageIcon, java.lang.String), 2.0, 803, 
877, getHistoryInformation(), 0.0, 803, 
878, setHistoryInformation(freemind.modes.HistoryInformation), 1.0, 803, 
879, isVisible(), 0.0, 803, 
880, hasOneVisibleChild(), 0.0, 803, 
881, getMap(), 0.0, 803, 
882, getAttributes(), 0.0, 803, 
883, createAttributeTableModel(), 0.0, 803, 
884, getAttributeKeyList(), 0.0, 803, 
885, getAttributeTableLength(), 0.0, 803, 
886, getAttribute(int), 1.0, 803, 
887, getAttribute(java.lang.String), 1.0, 803, 
888, getAttributePosition(java.lang.String), 1.0, 803, 
889, setAttribute(freemind.modes.attributes.Attribute, int), 2.0, 803, 
890, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 803, 
891, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 803, 
892, acceptViewVisitor(freemind.view.mindmapview.NodeViewVisitor), 1.0, 803, 
893, getListeners(), 0.0, 803, 
894, isNewChildLeft(), 0.0, 803, 
895, isWriteable(), 0.0, 803, 
897, load(java.net.URL), 1.0, 896, 
898, load(java.io.File), 1.0, 896, 
899, loadURL(java.lang.String), 1.0, 896, 
900, save(java.io.File), 1.0, 896, 
901, newMap(), 0.0, 896, 
902, save(), 0.0, 896, 
903, saveAs(), 0.0, 896, 
904, open(), 0.0, 896, 
905, close(freemind.controller.MapModuleManager, boolean), 2.0, 896, 
906, createNodeTreeFromXml(java.util.HashMap, java.io.Reader), 2.0, 896, 
907, startupController(), 0.0, 896, 
908, shutdownController(), 0.0, 896, 
909, doubleClick(java.awt.event.MouseEvent), 1.0, 896, 
910, plainClick(java.awt.event.MouseEvent), 1.0, 896, 
911, setVisible(boolean), 1.0, 896, 
912, isBlocked(), 0.0, 896, 
913, getNodeFromID(java.lang.String), 1.0, 896, 
914, getNodeID(freemind.modes.MindMapNode), 1.0, 896, 
915, select(freemind.view.mindmapview.NodeView), 1.0, 896, 
916, getSelected(), 0.0, 896, 
917, getSelectedView(), 0.0, 896, 
918, getSelecteds(), 0.0, 896, 
919, getSelectedsByDepth(), 0.0, 896, 
920, sortNodesByDepth(java.util.List), 1.0, 896, 
921, extendSelection(java.awt.event.MouseEvent), 1.0, 896, 
922, nodeChanged(freemind.modes.MindMapNode), 1.0, 896, 
923, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 896, 
924, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 896, 
925, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 896, 
926, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 896, 
927, registerNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 896, 
928, deregisterNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 896, 
929, firePreSaveEvent(freemind.modes.MindMapNode), 1.0, 896, 
930, registerNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 896, 
931, deregisterNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 896, 
932, fireNodePreDeleteEvent(freemind.modes.MindMapNode), 1.0, 896, 
933, setFolded(boolean, freemind.modes.MindMapNode), 2.0, 896, 
934, displayNode(freemind.modes.MindMapNode), 1.0, 896, 
935, centerNode(freemind.modes.MindMapNode), 1.0, 896, 
936, getLinkShortText(freemind.modes.MindMapNode), 1.0, 896, 
937, getModeToolBar(), 0.0, 896, 
938, getLeftToolBar(), 0.0, 896, 
939, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 896, 
940, updatePopupMenu(freemind.controller.StructuredMenuHolder), 1.0, 896, 
941, getPopupMenu(), 0.0, 896, 
942, showPopupMenu(java.awt.event.MouseEvent), 1.0, 896, 
943, getPopupForModel(java.lang.Object), 1.0, 896, 
944, getFrame(), 0.0, 896, 
945, getView(), 0.0, 896, 
946, getMap(), 0.0, 896, 
947, setModel(freemind.modes.MapAdapter), 1.0, 896, 
948, getMode(), 0.0, 896, 
949, getController(), 0.0, 896, 
950, getHookFactory(), 0.0, 896, 
951, getSelectionColor(), 0.0, 896, 
952, getText(java.lang.String), 1.0, 896, 
953, getResource(java.lang.String), 1.0, 896, 
954, getLastCurrentDir(), 0.0, 896, 
955, setLastCurrentDir(java.io.File), 1.0, 896, 
956, getAttributeController(), 0.0, 896, 
957, nodeRefresh(freemind.modes.MindMapNode), 1.0, 896, 
958, getNodeView(freemind.modes.MindMapNode), 1.0, 896, 
959, refreshMap(), 0.0, 896, 
960, copy(freemind.modes.MindMapNode, boolean), 2.0, 896, 
961, copy(), 0.0, 896, 
962, copySingle(), 0.0, 896, 
963, copy(boolean, java.util.List), 2.0, 896, 
964, getFileChooser(javax.swing.filechooser.FileFilter), 1.0, 896, 
966, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 965, 
967, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 965, 
968, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 965, 
969, onSaveNode(freemind.modes.MindMapNode), 1.0, 965, 
971, onCreateNodeHook(freemind.modes.MindMapNode), 1.0, 970, 
972, onPreDeleteNode(freemind.modes.MindMapNode), 1.0, 970, 
973, onPostDeleteNode(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 970, 
975, LineAdapter(freemind.modes.MindMapNode, freemind.main.FreeMindMain), 2.0, 974, 
976, updateStandards(java.lang.String, java.lang.String), 0.0, 974, 
977, getFrame(), 0.0, 974, 
978, getColor(), 0.0, 974, 
979, setColor(java.awt.Color), 1.0, 974, 
980, getWidth(), 0.0, 974, 
981, getRealWidth(), 0.0, 974, 
982, setWidth(int), 1.0, 974, 
983, getStyle(), 0.0, 974, 
984, setStyle(java.lang.String), 1.0, 974, 
985, toString(), 0.0, 974, 
986, setTarget(freemind.modes.MindMapNode), 1.0, 974, 
987, getTarget(), 0.0, 974, 
988, clone(freemind.modes.LineAdapter, java.lang.CloneNotSupportedException), 0.0, 974, 
989, setStandardColor(java.awt.Color), 1.0, 974, 
990, getStandardColor(), 0.0, 974, 
991, setStandardStyle(java.lang.String), 1.0, 974, 
992, getStandardStyle(), 0.0, 974, 
993, getStandardStylePropertyString(), 0.0, 974, 
994, getStandardColorPropertyString(), 0.0, 974, 
996, nodeViewCreated(freemind.modes.NodeViewEvent), 1.0, 995, 
997, nodeViewRemoved(freemind.modes.NodeViewEvent), 1.0, 995, 
1000, getStartInclination(), 0.0, 998, 
1001, getEndInclination(), 0.0, 998, 
1002, getStartArrow(), 0.0, 998, 
1003, getEndArrow(), 0.0, 998, 
1004, setStartInclination(java.awt.Point), 1.0, 998, 
1005, setEndInclination(java.awt.Point), 1.0, 998, 
1006, setStartArrow(java.lang.String), 1.0, 998, 
1007, setEndArrow(java.lang.String), 1.0, 998, 
1008, clone(freemind.modes.ArrowLinkAdapter), 0.0, 998, 
1009, showControlPoints(boolean), 1.0, 998, 
1010, getShowControlPointsFlag(), 0.0, 998, 
1011, save(freemind.main.XMLElement), 0.0, 998, 
1013, NodeDownAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1012, 
1014, actionPerformed(java.awt.event.ActionEvent), 1.0, 1012, 
1016, XMLElementAdapter(freemind.modes.ModeController), 1.0, 1015, 
1018, createAnotherElement(), 0.0, 1015, 
1019, createNodeAdapter(java.lang.String, freemind.main.FreeMindMain), 2.0, 1015, 
1020, createEdgeAdapter(freemind.modes.NodeAdapter, freemind.main.FreeMindMain), 2.0, 1015, 
1021, createCloudAdapter(freemind.modes.NodeAdapter, freemind.main.FreeMindMain), 2.0, 1015, 
1023, createEncryptedNode(java.lang.String), 1.0, 1015, 
1024, getFrame(), 0.0, 1015, 
1025, getUserObject(), 0.0, 1015, 
1026, setUserObject(java.lang.Object), 1.0, 1015, 
1027, getMapChild(), 0.0, 1015, 
1028, setName(java.lang.String), 1.0, 1015, 
1029, addChild(java.lang.String, freemind.main.XMLElement, freemind.modes.CloudAdapter, freemind.modes.NodeAdapter, freemind.modes.ArrowLinkAdapter, java.lang.Object, freemind.main.XMLElement, java.lang.String, freemind.modes.EdgeAdapter, freemind.modes.attributes.AttributeRegistry, freemind.modes.attributes.AttributeTableLayoutModel, freemind.extensions.PermanentNodeHook, freemind.modes.attributes.Attribute, java.lang.Exception), 1.0, 1015, 
1030, setAttribute(java.lang.String, java.lang.String, java.lang.Object, int, freemind.modes.NodeAdapter, freemind.modes.EdgeAdapter, freemind.modes.CloudAdapter, freemind.modes.ArrowLinkAdapter, java.lang.NumberFormatException), 2.0, 1015, 
1032, copyAttributesToNode(freemind.modes.NodeAdapter, java.util.Iterator, java.lang.String), 1.0, 1015, 
1033, completeElement(), 0.0, 1015, 
1034, processUnfinishedLinks(freemind.modes.NodeAdapter, java.lang.String, freemind.modes.MindMapLinkRegistry, java.util.Iterator, int, java.lang.String, freemind.modes.ArrowLinkAdapter, java.lang.String), 1.0, 1015, 
1035, setIDs(java.util.HashMap, freemind.modes.MindMapLinkRegistry, int, java.util.Iterator, java.lang.String, freemind.modes.NodeAdapter, java.lang.String, freemind.modes.ArrowLinkAdapter, java.util.Vector), 2.0, 1015, 
1036, getMap(), 0.0, 1015, 
1037, getIDToTarget(), 0.0, 1015, 
1038, setIDToTarget(java.util.HashMap), 1.0, 1015, 
1040, EdgeAdapter(freemind.modes.MindMapNode, freemind.main.FreeMindMain), 2.0, 1039, 
1041, getColor(), 0.0, 1039, 
1042, getRealColor(), 0.0, 1039, 
1043, getWidth(), 0.0, 1039, 
1044, getRealWidth(), 0.0, 1039, 
1045, setWidth(int), 1.0, 1039, 
1046, getStyle(), 0.0, 1039, 
1047, hasStyle(), 0.0, 1039, 
1048, getSource(), 0.0, 1039, 
1049, save(freemind.main.XMLElement), 0.0, 1039, 
1050, getStandardColor(), 0.0, 1039, 
1051, setStandardColor(java.awt.Color), 1.0, 1039, 
1052, getStandardStyle(), 0.0, 1039, 
1053, setStandardStyle(java.lang.String), 1.0, 1039, 
1054, getStandardColorPropertyString(), 0.0, 1039, 
1055, getStandardStylePropertyString(), 0.0, 1039, 
1060, registerLinkTarget(freemind.modes.MindMapNode), 1.0, 1059, 
1061, registerLinkTarget(java.lang.String, freemind.modes.MindMapNode), 2.0, 1059, 
1062, deregisterLinkTarget(freemind.modes.MindMapNode), 1.0, 1059, 
1063, getLabel(freemind.modes.MindMapNode), 1.0, 1059, 
1064, getTargetForID(java.lang.String), 1.0, 1059, 
1065, generateUniqueID(java.lang.String), 1.0, 1059, 
1066, registerLink(freemind.modes.MindMapLink), 1.0, 1059, 
1067, deregisterLink(freemind.modes.MindMapLink), 1.0, 1059, 
1068, getLinkForID(java.lang.String), 1.0, 1059, 
1069, generateUniqueLinkID(java.lang.String), 1.0, 1059, 
1070, cutNode(freemind.modes.MindMapNode), 1.0, 1059, 
1071, clearCuttedNodeBuffer(), 0.0, 1059, 
1072, getCuttedLinks(java.lang.String), 1.0, 1059, 
1073, getAllLinks(freemind.modes.MindMapNode), 1.0, 1059, 
1074, getAllLinksIntoMe(freemind.modes.MindMapNode), 1.0, 1059, 
1075, getAllLinksFromMe(freemind.modes.MindMapNode), 1.0, 1059, 
1076, registerLocalHyperlinkId(java.lang.String), 1.0, 1059, 
1077, isTargetOfLocalHyperlinks(java.lang.String), 1.0, 1059, 
1079, NodeAdapter(freemind.main.FreeMindMain, freemind.modes.MindMap), 2.0, 1078, 
1081, setMap(freemind.modes.MindMap), 1.0, 1078, 
1082, getText(java.lang.String), 0.0, 1078, 
1083, setText(java.lang.String), 1.0, 1078, 
1084, getXmlText(), 0.0, 1078, 
1085, setXmlText(java.lang.String), 1.0, 1078, 
1086, makeValidXml(java.lang.String), 1.0, 1078, 
1087, getXmlNoteText(), 0.0, 1078, 
1088, getNoteText(), 0.0, 1078, 
1089, setXmlNoteText(java.lang.String), 1.0, 1078, 
1090, setNoteText(java.lang.String), 1.0, 1078, 
1091, getPlainTextContent(), 0.0, 1078, 
1092, getLink(), 0.0, 1078, 
1093, getShortText(java.lang.String, freemind.modes.ModeController), 1.0, 1078, 
1094, setLink(java.lang.String), 1.0, 1078, 
1095, getFilterInfo(), 0.0, 1078, 
1096, getFrame(), 0.0, 1078, 
1097, getViewers(), 0.0, 1078, 
1098, addViewer(freemind.view.mindmapview.NodeView), 1.0, 1078, 
1099, removeViewer(freemind.view.mindmapview.NodeView), 1.0, 1078, 
1100, getPath(javax.swing.tree.TreePath, java.util.Vector), 0.0, 1078, 
1101, getEdge(), 0.0, 1078, 
1102, setEdge(freemind.modes.MindMapEdge), 1.0, 1078, 
1103, getCloud(), 0.0, 1078, 
1104, setCloud(freemind.modes.MindMapCloud), 1.0, 1078, 
1105, changeChildCloudIterativeLevels(int, java.util.ListIterator, freemind.modes.NodeAdapter, freemind.modes.MindMapCloud), 1.0, 1078, 
1106, getStyle(java.lang.String, java.lang.String), 0.0, 1078, 
1107, hasStyle(), 0.0, 1078, 
1108, getColor(), 0.0, 1078, 
1109, setStyle(java.lang.String), 1.0, 1078, 
1110, setColor(java.awt.Color), 1.0, 1078, 
1111, getBackgroundColor(), 0.0, 1078, 
1112, setBackgroundColor(java.awt.Color), 1.0, 1078, 
1113, establishOwnFont(), 0.0, 1078, 
1114, setBold(boolean), 1.0, 1078, 
1115, toggleBold(), 0.0, 1078, 
1116, setItalic(boolean), 1.0, 1078, 
1117, toggleItalic(), 0.0, 1078, 
1118, setUnderlined(boolean), 1.0, 1078, 
1119, setFont(java.awt.Font), 1.0, 1078, 
1120, getParentNode(), 0.0, 1078, 
1121, setFontSize(int), 1.0, 1078, 
1122, getFont(), 0.0, 1078, 
1123, getFontSize(), 0.0, 1078, 
1124, getFontFamilyName(), 0.0, 1078, 
1125, isBold(), 0.0, 1078, 
1126, isItalic(), 0.0, 1078, 
1127, isUnderlined(), 0.0, 1078, 
1128, isFolded(), 0.0, 1078, 
1129, getIcons(), 0.0, 1078, 
1130, getMap(), 0.0, 1078, 
1131, addIcon(int, freemind.modes.MindIcon), 2.0, 1078, 
1132, removeIcon(int, int), 1.0, 1078, 
1133, hasFoldedStrictDescendant(java.util.ListIterator, freemind.modes.NodeAdapter), 0.0, 1078, 
1134, setFolded(boolean), 1.0, 1078, 
1135, shallowCopy(java.lang.String, freemind.modes.MindMapNode, java.util.HashMap, java.io.StringWriter, java.lang.Exception), 0.0, 1078, 
1136, toString(), 0.0, 1078, 
1137, isDescendantOf(freemind.modes.MindMapNode), 1.0, 1078, 
1138, isRoot(), 0.0, 1078, 
1139, hasChildren(), 0.0, 1078, 
1140, getChildPosition(freemind.modes.MindMapNode, int, java.util.ListIterator), 1.0, 1078, 
1141, childrenUnfolded(), 0.0, 1078, 
1142, childrenFolded(), 0.0, 1078, 
1143, getChildren(), 0.0, 1078, 
1144, children(), 0.0, 1078, 
1145, getAllowsChildren(), 0.0, 1078, 
1146, getChildAt(int), 1.0, 1078, 
1147, getChildCount(), 0.0, 1078, 
1148, getIndex(javax.swing.tree.TreeNode), 1.0, 1078, 
1149, getParent(), 0.0, 1078, 
1150, isLeaf(), 0.0, 1078, 
1151, isLeft(), 0.0, 1078, 
1152, setLeft(freemind.modes.NodeAdapter, boolean, int), 1.0, 1078, 
1153, isNewChildLeft(int, int), 0.0, 1078, 
1154, insert(int, freemind.modes.MindMapNode, javax.swing.tree.MutableTreeNode), 2.0, 1078, 
1155, remove(int, javax.swing.tree.MutableTreeNode), 1.0, 1078, 
1156, remove(javax.swing.tree.MutableTreeNode, int), 1.0, 1078, 
1157, recursiveCallAddChildren(freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.Iterator, freemind.extensions.PermanentNodeHook), 2.0, 1078, 
1159, removeFromParent(), 0.0, 1078, 
1160, setParent(javax.swing.tree.MutableTreeNode), 1.0, 1078, 
1161, setParent(freemind.modes.MindMapNode), 1.0, 1078, 
1162, setUserObject(java.lang.Object), 1.0, 1078, 
1163, addToPathVector(java.util.Vector), 1.0, 1078, 
1164, getNodeLevel(freemind.modes.MindMapNode, int), 0.0, 1078, 
1165, addHook(freemind.extensions.PermanentNodeHook), 1.0, 1078, 
1166, invokeHook(freemind.extensions.NodeHook, java.lang.Exception), 1.0, 1078, 
1167, createActivatedHooks(), 0.0, 1078, 
1168, createToolTip(), 0.0, 1078, 
1169, createHooks(), 0.0, 1078, 
1170, createStateIcons(), 0.0, 1078, 
1171, createIcons(), 0.0, 1078, 
1172, getHooks(), 0.0, 1078, 
1173, getActivatedHooks(), 0.0, 1078, 
1174, removeHook(freemind.extensions.PermanentNodeHook), 1.0, 1078, 
1175, getToolTip(), 0.0, 1078, 
1176, setToolTip(java.lang.String, java.lang.String), 2.0, 1078, 
1177, getObjectId(freemind.modes.ModeController), 1.0, 1078, 
1179, getModeController(), 0.0, 1078, 
1181, getShiftY(), 0.0, 1078, 
1182, hasOneVisibleChild(int, java.util.ListIterator), 0.0, 1078, 
1183, calcShiftY(java.lang.NullPointerException), 0.0, 1078, 
1184, setShiftY(int), 1.0, 1078, 
1185, setAdditionalInfo(java.lang.String), 1.0, 1078, 
1186, getAdditionalInfo(), 0.0, 1078, 
1187, setStateIcon(javax.swing.ImageIcon, java.lang.String), 2.0, 1078, 
1188, getStateIcons(), 0.0, 1078, 
1189, getHistoryInformation(), 0.0, 1078, 
1190, setHistoryInformation(freemind.modes.HistoryInformation), 1.0, 1078, 
1191, getHGap(), 0.0, 1078, 
1192, setHGap(int), 1.0, 1078, 
1193, getVGap(), 0.0, 1078, 
1194, setVGap(int), 1.0, 1078, 
1195, isVisible(freemind.controller.filter.Filter), 0.0, 1078, 
1196, getAttributes(), 0.0, 1078, 
1197, createAttributeTableModel(java.util.Iterator, freemind.view.mindmapview.NodeView), 0.0, 1078, 
1198, getAttributeTableLength(), 0.0, 1078, 
1199, getAttribute(int), 1.0, 1078, 
1200, getAttributeKeyList(java.util.Vector, java.util.Iterator, freemind.modes.attributes.Attribute), 0.0, 1078, 
1201, getAttributePosition(java.lang.String, int, java.util.Iterator, freemind.modes.attributes.Attribute), 1.0, 1078, 
1202, getAttribute(java.lang.String, int), 1.0, 1078, 
1203, setAttribute(freemind.modes.attributes.Attribute, int), 2.0, 1078, 
1204, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 1078, 
1205, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 1078, 
1206, getListeners(), 0.0, 1078, 
1207, acceptViewVisitor(freemind.view.mindmapview.NodeViewVisitor, java.util.Iterator), 1.0, 1078, 
1212, getColor(), 0.0, 1211, 
1213, getStyle(), 0.0, 1211, 
1214, getWidth(), 0.0, 1211, 
1215, getRealWidth(), 0.0, 1211, 
1216, toString(), 0.0, 1211, 
1217, setTarget(freemind.modes.MindMapNode), 1.0, 1211, 
1218, clone(), 0.0, 1211, 
1220, getDestinationLabel(), 0.0, 1219, 
1221, getReferenceText(), 0.0, 1219, 
1222, getTarget(), 0.0, 1219, 
1223, getSource(), 0.0, 1219, 
1224, getUniqueID(), 0.0, 1219, 
1226, NodeViewEvent(freemind.modes.MindMapNode), 1.0, 1225, 
1228, ModesCreator(freemind.controller.Controller), 1.0, 1227, 
1229, getAllModes(java.lang.String, java.lang.String, java.util.StringTokenizer, java.lang.String), 0.0, 1227, 
1230, getMode(freemind.modes.Mode, java.lang.String, java.lang.String, java.lang.Exception), 1.0, 1227, 
1232, init(freemind.controller.Controller), 1.0, 1231, 
1233, toString(), 0.0, 1231, 
1234, activate(), 0.0, 1231, 
1235, restore(java.lang.String), 1.0, 1231, 
1236, createModeController(), 0.0, 1231, 
1237, getDefaultModeController(), 0.0, 1231, 
1238, getController(), 0.0, 1231, 
1239, toLocalizedString(), 0.0, 1231, 
1242, getDestinationLabel(), 0.0, 1240, 
1243, getReferenceText(), 0.0, 1240, 
1244, getSource(), 0.0, 1240, 
1245, setSource(freemind.modes.MindMapNode), 1.0, 1240, 
1246, setDestinationLabel(java.lang.String), 1.0, 1240, 
1247, setReferenceText(java.lang.String), 1.0, 1240, 
1248, getUniqueID(), 0.0, 1240, 
1249, setUniqueID(java.lang.String), 1.0, 1240, 
1250, getStandardColor(), 0.0, 1240, 
1251, setStandardColor(java.awt.Color), 1.0, 1240, 
1252, getStandardStyle(), 0.0, 1240, 
1253, setStandardStyle(java.lang.String), 1.0, 1240, 
1254, getStandardColorPropertyString(), 0.0, 1240, 
1255, getStandardStylePropertyString(), 0.0, 1240, 
1260, loadPatterns(java.io.File), 1.0, 1259, 
1261, loadPatterns(java.io.Reader, freemind.controller.actions.generated.instance.Patterns), 1.0, 1259, 
1262, savePatterns(java.util.List, java.io.Writer, java.lang.String, java.util.Iterator, freemind.controller.actions.generated.instance.Patterns, freemind.controller.actions.generated.instance.Pattern), 2.0, 1259, 
1263, createPatternFromNode(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.PatternNodeFontItalic, freemind.controller.actions.generated.instance.PatternNodeFontBold, freemind.controller.actions.generated.instance.PatternNodeFontName, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.PatternNodeFontSize, freemind.controller.actions.generated.instance.PatternIcon), 1.0, 1259, 
1264, toString(java.lang.String, freemind.controller.actions.generated.instance.Pattern, freemind.common.TextTranslator), 2.0, 1259, 
1266, addSeparatorIfNecessary(java.lang.String), 1.0, 1259, 
1267, getPatternFromString(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Pattern), 1.0, 1259, 
1268, getPatternsFromString(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Patterns), 1.0, 1259, 
1269, intersectPattern(freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern), 2.0, 1259, 
1271, createPatternFromSelected(freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode, java.util.List, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode), 2.0, 1259, 
1273, ControllerAdapter(freemind.modes.Mode), 1.0, 1272, 
1274, setModel(freemind.modes.MapAdapter), 1.0, 1272, 
1275, newNode(java.lang.Object, freemind.modes.MindMap), 2.0, 1272, 
1276, createXMLElement(), 0.0, 1272, 
1277, newModel(freemind.modes.ModeController), 1.0, 1272, 
1278, getFileFilter(), 0.0, 1272, 
1279, nodeChanged(freemind.modes.MindMapNode), 1.0, 1272, 
1280, nodeRefresh(freemind.modes.MindMapNode), 1.0, 1272, 
1281, nodeRefresh(boolean, freemind.modes.MindMapNode), 2.0, 1272, 
1282, refreshMap(freemind.modes.MindMapNode), 0.0, 1272, 
1283, refreshMapFrom(freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.Iterator), 1.0, 1272, 
1284, nodeStructureChanged(freemind.modes.MindMapNode), 1.0, 1272, 
1285, updateNode(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.ModeController.NodeSelectionListener), 1.0, 1272, 
1286, onSelectHook(freemind.view.mindmapview.NodeView, java.util.Iterator, java.util.Iterator, freemind.modes.ModeController.NodeSelectionListener, freemind.extensions.PermanentNodeHook), 1.0, 1272, 
1287, onDeselectHook(freemind.view.mindmapview.NodeView, freemind.extensions.PermanentNodeHook, java.util.Iterator, freemind.modes.ModeController.NodeSelectionListener, java.util.Iterator, java.util.HashSet, java.lang.RuntimeException), 1.0, 1272, 
1288, onViewCreatedHook(freemind.view.mindmapview.NodeView, java.util.Iterator, freemind.extensions.PermanentNodeHook), 1.0, 1272, 
1289, onViewRemovedHook(freemind.view.mindmapview.NodeView, java.util.Iterator, freemind.extensions.PermanentNodeHook), 1.0, 1272, 
1290, registerNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 1272, 
1291, deregisterNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 1272, 
1292, registerNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 1272, 
1293, deregisterNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 1272, 
1294, getNodeLifetimeListeners(), 0.0, 1272, 
1295, fireNodePreDeleteEvent(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.ModeController.NodeLifetimeListener), 1.0, 1272, 
1296, fireNodePostDeleteEvent(freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.ModeController.NodeLifetimeListener), 2.0, 1272, 
1297, fireRecursiveNodeCreateEvent(freemind.modes.MindMapNode, java.util.Iterator, java.util.Iterator, freemind.modes.NodeAdapter, freemind.modes.ModeController.NodeLifetimeListener), 1.0, 1272, 
1298, firePreSaveEvent(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.ModeController.NodeSelectionListener, java.util.HashSet), 1.0, 1272, 
1299, getText(java.lang.String), 1.0, 1272, 
1300, newMap(freemind.modes.MapAdapter, freemind.modes.ModeController), 0.0, 1272, 
1301, newMap(freemind.modes.MindMap), 1.0, 1272, 
1302, load(java.net.URL, freemind.modes.ModeController, freemind.modes.MapAdapter), 1.0, 1272, 
1303, load(java.io.File, freemind.modes.ModeController, freemind.modes.MapAdapter), 1.0, 1272, 
1304, save(), 0.0, 1272, 
1305, loadURL(java.net.URL, java.lang.String, java.lang.String, java.net.URL, java.lang.String, java.lang.String, freemind.modes.ModeController, freemind.controller.MapModuleManager, java.lang.String, java.net.MalformedURLException, java.lang.Exception), 1.0, 1272, 
1306, createNodeTreeFromXml(java.io.Reader, java.util.HashMap, freemind.modes.MindMapNode, freemind.modes.XMLElementAdapter), 2.0, 1272, 
1307, invokeHooksRecursively(freemind.modes.NodeAdapter, freemind.modes.MindMap, java.util.Iterator, freemind.modes.NodeAdapter, freemind.extensions.PermanentNodeHook), 2.0, 1272, 
1308, getSelecteds(java.util.LinkedList, freemind.view.mindmapview.NodeView, java.util.ListIterator), 0.0, 1272, 
1309, select(freemind.view.mindmapview.NodeView), 1.0, 1272, 
1310, getSelectedsByDepth(java.util.List), 0.0, 1272, 
1311, sortNodesByDepth(java.util.List), 1.0, 1272, 
1312, save(java.io.File), 1.0, 1272, 
1317, add(javax.swing.Action, javax.swing.JMenu), 2.0, 1272, 
1318, open(File[], int, int, javax.swing.JFileChooser, java.io.File, java.lang.Exception), 0.0, 1272, 
1319, getFileChooser(java.io.File, javax.swing.filechooser.FileFilter, javax.swing.JFileChooser), 1.0, 1272, 
1320, getFileChooser(), 0.0, 1272, 
1321, getMapsParentFile(), 0.0, 1272, 
1322, handleLoadingException(java.lang.Exception, int, java.lang.String), 1.0, 1272, 
1323, saveAs(java.io.File, boolean, java.lang.String, java.lang.String, javax.swing.JFileChooser, int, int, java.lang.Exception), 0.0, 1272, 
1324, getFileNameProposal(), 0.0, 1272, 
1325, close(boolean, freemind.controller.MapModuleManager, boolean, java.lang.String, java.lang.String, int), 2.0, 1272, 
1326, setVisible(boolean, freemind.view.mindmapview.NodeView), 1.0, 1272, 
1327, setAllActions(boolean), 1.0, 1272, 
1328, showPopupMenu(java.awt.event.MouseEvent, javax.swing.JPopupMenu), 1.0, 1272, 
1329, getPopupForModel(java.lang.Object), 1.0, 1272, 
1330, getLeftToolBar(), 0.0, 1272, 
1331, getModeToolBar(), 0.0, 1272, 
1332, isBlocked(), 0.0, 1272, 
1333, setBlocked(boolean), 1.0, 1272, 
1334, getMode(), 0.0, 1272, 
1335, setMode(freemind.modes.Mode), 1.0, 1272, 
1336, getMap(), 0.0, 1272, 
1337, getRootNode(), 0.0, 1272, 
1338, getResource(java.lang.String), 1.0, 1272, 
1339, getController(), 0.0, 1272, 
1340, getFrame(), 0.0, 1272, 
1341, getModeController(), 0.0, 1272, 
1342, getModel(), 0.0, 1272, 
1343, getView(), 0.0, 1272, 
1344, updateMapModuleName(), 0.0, 1272, 
1345, getNodeFromID(java.lang.String, freemind.modes.NodeAdapter), 1.0, 1272, 
1346, getNodeID(freemind.modes.MindMapNode), 1.0, 1272, 
1347, getSelected(freemind.view.mindmapview.NodeView), 0.0, 1272, 
1348, getSelectedView(), 0.0, 1272, 
1349, copy(boolean, freemind.modes.MindMapNode), 2.0, 1272, 
1350, copy(), 0.0, 1272, 
1351, copySingle(java.util.ArrayList), 0.0, 1272, 
1352, copy(java.lang.String, java.lang.String, java.util.List, boolean, java.awt.datatransfer.UnsupportedFlavorException), 2.0, 1272, 
1353, createForNodesFlavor(boolean, java.lang.String, java.util.List, boolean, freemind.modes.MindMapNode, java.util.Iterator), 2.0, 1272, 
1354, getSelectionColor(), 0.0, 1272, 
1355, updatePopupMenu(freemind.controller.StructuredMenuHolder), 1.0, 1272, 
1356, shutdownController(), 0.0, 1272, 
1357, startupController(freemind.modes.ControllerAdapter.FileOpener, java.awt.dnd.DropTarget), 0.0, 1272, 
1358, _setFolded(boolean, freemind.modes.MindMapNode), 2.0, 1272, 
1359, getLinkShortText(freemind.modes.MindMapNode, java.lang.String, freemind.modes.MindMapNode, java.lang.Exception), 1.0, 1272, 
1360, displayNode(freemind.modes.MindMapNode), 1.0, 1272, 
1361, displayNode(Object[], freemind.modes.MindMapNode, java.util.ArrayList, int, freemind.modes.MindMapNode), 2.0, 1272, 
1362, centerNode(freemind.view.mindmapview.NodeView), 1.0, 1272, 
1363, centerNode(freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode), 1.0, 1272, 
1364, getLastCurrentDir(), 0.0, 1272, 
1365, setLastCurrentDir(java.io.File), 1.0, 1272, 
1366, getAttributeController(), 0.0, 1272, 
1367, getNodeView(freemind.modes.MindMapNode), 1.0, 1272, 
1369, insertNodeInto(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 1272, 
1370, loadURL(java.lang.String), 0.0, 1272, 
1371, getRegisteredMouseWheelEventHandler(), 0.0, 1272, 
1373, nodesDepthComparator(), 0.0, 1372, 
1374, compare(java.lang.Object, java.lang.Object, freemind.modes.MindMapNode, Object[], int, freemind.modes.MindMapNode, Object[]), 2.0, 1372, 
1376, popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent), 1.0, 1375, 
1377, popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent), 1.0, 1375, 
1378, popupMenuCanceled(javax.swing.event.PopupMenuEvent), 1.0, 1375, 
1381, OpenAction(freemind.modes.ControllerAdapter), 1.0, 1380, 
1382, actionPerformed(java.awt.event.ActionEvent), 1.0, 1380, 
1384, SaveAction(freemind.modes.ControllerAdapter), 1.0, 1383, 
1385, actionPerformed(boolean, java.awt.event.ActionEvent, java.lang.String), 1.0, 1383, 
1387, SaveAsAction(freemind.modes.ControllerAdapter), 1.0, 1386, 
1388, actionPerformed(java.awt.event.ActionEvent), 1.0, 1386, 
1390, EditAttributesAction(), 0.0, 1389, 
1391, actionPerformed(boolean, java.awt.event.ActionEvent, java.awt.Component, freemind.view.mindmapview.attributeview.AttributeView), 1.0, 1389, 
1393, isDragAcceptable(DataFlavor[], java.awt.dnd.DropTargetDragEvent, int), 1.0, 1392, 
1394, isDropAcceptable(DataFlavor[], java.awt.dnd.DropTargetDropEvent, int), 1.0, 1392, 
1395, drop(java.awt.dnd.DropTargetDropEvent, java.util.Iterator, java.lang.Object, java.io.File, java.lang.Exception), 1.0, 1392, 
1396, dragEnter(java.awt.dnd.DropTargetDragEvent), 1.0, 1392, 
1397, dragOver(java.awt.dnd.DropTargetDragEvent), 1.0, 1392, 
1398, dragExit(java.awt.dnd.DropTargetEvent), 1.0, 1392, 
1399, dragScroll(java.awt.dnd.DropTargetDragEvent), 1.0, 1392, 
1400, dropActionChanged(java.awt.dnd.DropTargetDragEvent), 1.0, 1392, 
1404, StringProperty(java.lang.String, java.lang.String), 2.0, 1403, 
1405, getDescription(), 0.0, 1403, 
1406, getLabel(), 0.0, 1403, 
1407, setValue(java.lang.String), 1.0, 1403, 
1408, getValue(), 0.0, 1403, 
1409, layout(com.jgoodies.forms.builder.DefaultFormBuilder, freemind.common.TextTranslator, javax.swing.JLabel), 2.0, 1403, 
1410, setEnabled(boolean), 1.0, 1403, 
1412, keyReleased(java.awt.event.KeyEvent), 1.0, 1411, 
1414, NamedObject(), 0.0, 1413, 
1415, NamedObject(java.lang.Object, java.lang.String), 2.0, 1413, 
1416, literal(java.lang.String, freemind.common.NamedObject), 1.0, 1413, 
1417, equals(java.lang.Object, freemind.common.NamedObject), 1.0, 1413, 
1418, toString(), 0.0, 1413, 
1419, getObject(), 0.0, 1413, 
1421, SeparatorProperty(java.lang.String), 1.0, 1420, 
1422, getDescription(), 0.0, 1420, 
1423, getLabel(), 0.0, 1420, 
1424, layout(com.jgoodies.forms.builder.DefaultFormBuilder, freemind.common.TextTranslator), 2.0, 1420, 
1425, setEnabled(boolean), 1.0, 1420, 
1427, BooleanProperty(java.lang.String, java.lang.String), 2.0, 1426, 
1428, getDescription(), 0.0, 1426, 
1429, getLabel(), 0.0, 1426, 
1430, setValue(java.lang.String), 1.0, 1426, 
1431, getValue(), 0.0, 1426, 
1432, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JLabel), 2.0, 1426, 
1433, setEnabled(boolean), 1.0, 1426, 
1435, getText(java.lang.String), 1.0, 1434, 
1438, getDescription(), 0.0, 1436, 
1439, getLabel(), 0.0, 1436, 
1440, setValue(java.lang.String), 1.0, 1436, 
1441, getValue(), 0.0, 1436, 
1442, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JMenuItem, javax.swing.JLabel), 2.0, 1436, 
1443, actionPerformed(java.awt.event.ActionEvent, java.awt.Color), 1.0, 1436, 
1444, setColorValue(java.awt.Color), 1.0, 1436, 
1445, getColorValue(), 0.0, 1436, 
1446, setEnabled(boolean), 1.0, 1436, 
1448, actionPerformed(java.awt.event.ActionEvent), 1.0, 1447, 
1451, mousePressed(java.awt.event.MouseEvent), 1.0, 1450, 
1452, mouseReleased(java.awt.event.MouseEvent), 1.0, 1450, 
1455, getDescription(), 0.0, 1453, 
1456, getLabel(), 0.0, 1453, 
1457, setValue(freemind.modes.MindIcon, java.lang.String, java.util.Iterator), 1.0, 1453, 
1458, setIcon(freemind.modes.MindIcon), 1.0, 1453, 
1459, getValue(), 0.0, 1453, 
1460, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JLabel), 2.0, 1453, 
1461, actionPerformed(java.util.Vector, java.awt.event.ActionEvent, int, freemind.modes.common.dialogs.IconSelectionPopupDialog, freemind.modes.MindIcon, java.util.Iterator, java.util.Vector), 1.0, 1453, 
1462, setEnabled(boolean), 1.0, 1453, 
1464, itemStateChanged(java.awt.event.ItemEvent), 1.0, 1463, 
1467, DontShowNotificationProperty(java.lang.String, java.lang.String), 2.0, 1466, 
1469, getLabel(), 0.0, 1468, 
1470, setValue(java.lang.String), 1.0, 1468, 
1471, getValue(), 0.0, 1468, 
1472, addPropertyChangeListener(java.beans.PropertyChangeListener), 1.0, 1468, 
1473, removePropertyChangeListener(java.beans.PropertyChangeListener), 1.0, 1468, 
1474, firePropertyChangeEvent(java.beans.PropertyChangeListener, java.beans.PropertyChangeEvent, java.util.Iterator), 0.0, 1468, 
1477, XmlBindingTools(), 0.0, 1476, 
1478, getInstance(org.jibx.runtime.JiBXException), 0.0, 1476, 
1479, createMarshaller(org.jibx.runtime.JiBXException), 0.0, 1476, 
1480, createUnmarshaller(org.jibx.runtime.JiBXException), 0.0, 1476, 
1483, decorateDialog(java.awt.Dimension, java.awt.Dimension, javax.swing.JDialog, java.lang.String, java.awt.Toolkit, freemind.controller.actions.generated.instance.WindowConfigurationStorage, int, java.awt.Frame), 2.0, 1476, 
1484, marshall(freemind.controller.actions.generated.instance.XmlAction, java.io.StringWriter, java.lang.String, org.jibx.runtime.IMarshallingContext, org.jibx.runtime.JiBXException), 1.0, 1476, 
1485, unMarshall(java.lang.String), 1.0, 1476, 
1486, unMarshall(java.io.Reader, freemind.controller.actions.generated.instance.XmlAction, org.jibx.runtime.IUnmarshallingContext, org.jibx.runtime.JiBXException), 1.0, 1476, 
1489, getResult(), 0.0, 1487, 
1490, show(java.lang.String, javax.swing.ImageIcon, javax.swing.JButton, javax.swing.AbstractAction, javax.swing.JButton, javax.swing.AbstractAction, java.lang.String), 0.0, 1487, 
1491, close(int), 1.0, 1487, 
1493, getProperty(), 0.0, 1492, 
1494, setProperty(java.lang.String), 1.0, 1492, 
1496, StandardPropertyHandler(freemind.controller.Controller, java.lang.String), 2.0, 1495, 
1497, getProperty(), 0.0, 1495, 
1498, setProperty(java.lang.String), 1.0, 1495, 
1500, actionPerformed(java.awt.event.ActionEvent), 1.0, 1499, 
1502, actionPerformed(java.awt.event.ActionEvent), 1.0, 1501, 
1504, windowClosing(java.awt.event.WindowEvent), 1.0, 1503, 
1507, getDescription(), 0.0, 1505, 
1508, getLabel(), 0.0, 1505, 
1509, setValue(int, int, java.lang.String, int, java.lang.NumberFormatException), 1.0, 1505, 
1510, getValue(), 0.0, 1505, 
1511, layout(com.jgoodies.forms.builder.DefaultFormBuilder, freemind.common.TextTranslator, javax.swing.JLabel), 2.0, 1505, 
1512, setEnabled(boolean), 1.0, 1505, 
1514, stateChanged(javax.swing.event.ChangeEvent), 1.0, 1513, 
1518, setState(String[], int), 1.0, 1516, 
1520, getDescription(), 0.0, 1519, 
1521, getLabel(), 0.0, 1519, 
1522, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder), 2.0, 1519, 
1523, setEnabled(boolean), 1.0, 1519, 
1526, getDescription(), 0.0, 1524, 
1527, getLabel(), 0.0, 1524, 
1528, layout(com.jgoodies.forms.builder.DefaultFormBuilder, freemind.common.TextTranslator, javax.swing.JLabel), 2.0, 1524, 
1529, setValue(java.lang.String, int, java.lang.String), 1.0, 1524, 
1530, getValue(), 0.0, 1524, 
1531, setEnabled(boolean), 1.0, 1524, 
1533, actionPerformed(java.awt.event.ActionEvent), 1.0, 1532, 
1536, NextLineProperty(), 0.0, 1535, 
1537, getDescription(), 0.0, 1535, 
1538, getLabel(), 0.0, 1535, 
1539, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder), 2.0, 1535, 
1540, setEnabled(boolean), 1.0, 1535, 
1545, fillPossibleValues(String[]), 1.0, 1541, 
1546, fillPossibleValues(java.util.List), 1.0, 1541, 
1547, updateComboBoxEntries(java.util.List, java.util.List), 2.0, 1541, 
1548, getDescription(), 0.0, 1541, 
1549, getLabel(), 0.0, 1541, 
1550, setValue(java.lang.String), 1.0, 1541, 
1551, getValue(), 0.0, 1541, 
1552, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JLabel), 2.0, 1541, 
1553, setEnabled(boolean), 1.0, 1541, 
1555, actionPerformed(java.awt.event.ActionEvent), 1.0, 1554, 
1558, ThreeCheckBoxProperty(java.lang.String, java.lang.String), 2.0, 1557, 
1559, getState(), 0.0, 1557, 
1560, getDescription(), 0.0, 1557, 
1561, getLabel(), 0.0, 1557, 
1562, setValue(java.lang.String), 1.0, 1557, 
1563, transformString(java.lang.String), 1.0, 1557, 
1564, getValue(), 0.0, 1557, 
1565, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JLabel, java.lang.String), 2.0, 1557, 
1566, setEnabled(boolean), 1.0, 1557, 
1567, setState(Icon[], int), 1.0, 1557, 
1569, actionPerformed(java.awt.event.ActionEvent), 1.0, 1568, 
1573, getDescription(), 0.0, 1571, 
1574, getLabel(), 0.0, 1571, 
1575, setValue(java.lang.String), 1.0, 1571, 
1576, getValue(), 0.0, 1571, 
1577, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JLabel), 2.0, 1571, 
1578, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.util.Iterator, freemind.common.ScriptEditorProperty.ScriptEditorStarter, freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin), 1.0, 1571, 
1579, setScriptValue(java.lang.String), 1.0, 1571, 
1580, setEnabled(boolean), 1.0, 1571, 
1582, startEditor(java.lang.String), 1.0, 1581, 
1584, UnicodeReader(java.lang.String, java.io.InputStream), 2.0, 1583, 
1585, getDefaultEncoding(), 0.0, 1583, 
1586, getEncoding(), 0.0, 1583, 
1587, init(int, int, java.lang.String, byte[]), 0.0, 1583, 
1588, close(), 0.0, 1583, 
1592, startupMapHook(java.io.BufferedOutputStream, java.io.File, java.io.FileOutputStream, org.apache.batik.svggen.SVGGraphics2D, java.io.OutputStreamWriter, freemind.view.mindmapview.MapView, java.lang.Exception), 0.0, 1591, 
1594, startupMapHook(java.io.File, java.io.FileOutputStream, java.io.BufferedOutputStream, org.w3c.dom.Document, org.apache.batik.transcoder.TranscoderOutput, org.apache.fop.svg.PDFTranscoder, org.w3c.dom.Element, org.apache.batik.transcoder.TranscoderInput, freemind.view.mindmapview.MapView, org.apache.batik.svggen.SVGGraphics2D, java.lang.Exception), 0.0, 1593, 
1596, fillSVGGraphics2D(java.awt.Rectangle, org.apache.batik.svggen.SVGGeneratorContext, freemind.view.mindmapview.MapView, java.lang.String, org.w3c.dom.Document, org.apache.batik.svggen.SVGGeneratorContext.GraphicContextDefaults, org.apache.batik.svggen.SVGGraphics2D, org.w3c.dom.DOMImplementation), 1.0, 1595, 
1600, ColumnWidthChangeEvent(int, java.lang.Object), 2.0, 1599, 
1601, getColumnNumber(), 0.0, 1599, 
1605, performRemoveRow(int, freemind.modes.attributes.NodeAttributeTableModel), 2.0, 1602, 
1607, performRemoveAttributeValue(java.lang.String, java.lang.String), 2.0, 1602, 
1609, performSetFontSize(int, freemind.modes.attributes.AttributeRegistry), 2.0, 1602, 
1610, performSetVisibility(int, boolean), 2.0, 1602, 
1611, performSetRestriction(int, boolean), 2.0, 1602, 
1612, performReplaceAtributeName(java.lang.String, java.lang.String), 2.0, 1602, 
1613, performRemoveAttribute(java.lang.String), 1.0, 1602, 
1614, performRegistryAttribute(java.lang.String), 1.0, 1602, 
1615, performRegistryAttributeValue(java.lang.String, java.lang.String), 2.0, 1602, 
1616, performRegistrySubtreeAttributes(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1602, 
1618, AttributeTableLayoutModel(), 0.0, 1617, 
1619, getColumnWidth(int), 1.0, 1617, 
1620, setColumnWidth(int, int), 2.0, 1617, 
1621, setListenerList(javax.swing.event.EventListenerList), 1.0, 1617, 
1622, getListenerList(), 0.0, 1617, 
1623, addColumnWidthChangeListener(freemind.modes.attributes.ColumnWidthChangeListener), 1.0, 1617, 
1624, removeColumnWidthChangeListener(freemind.modes.attributes.ColumnWidthChangeListener), 1.0, 1617, 
1625, fireColumnWidthChanged(int, Object[], int), 1.0, 1617, 
1627, Attribute(java.lang.String), 1.0, 1626, 
1628, Attribute(java.lang.String, java.lang.String), 2.0, 1626, 
1629, Attribute(freemind.modes.attributes.Attribute), 1.0, 1626, 
1630, getName(), 0.0, 1626, 
1631, setName(java.lang.String), 1.0, 1626, 
1632, getValue(), 0.0, 1626, 
1633, setValue(java.lang.String), 1.0, 1626, 
1634, toString(), 0.0, 1626, 
1636, AttributeRegistryComboBoxColumnModel(freemind.modes.attributes.AttributeRegistry), 1.0, 1635, 
1637, setSelectedItem(java.lang.Object), 1.0, 1635, 
1638, getSelectedItem(), 0.0, 1635, 
1639, getSize(), 0.0, 1635, 
1640, getElementAt(int), 1.0, 1635, 
1641, tableChanged(javax.swing.event.TableModelEvent), 1.0, 1635, 
1642, clear(), 0.0, 1635, 
1643, contains(java.lang.Object), 1.0, 1635, 
1644, add(java.lang.Object, java.lang.String), 1.0, 1635, 
1645, replace(java.lang.Object, java.lang.Object), 2.0, 1635, 
1646, remove(java.lang.Object), 1.0, 1635, 
1647, getIndexOf(java.lang.Object), 1.0, 1635, 
1649, AttributeRegistryTableModel(freemind.modes.attributes.AttributeRegistry), 1.0, 1648, 
1650, getRowCount(), 0.0, 1648, 
1651, getColumnCount(), 0.0, 1648, 
1652, getValueAt(int, int), 2.0, 1648, 
1654, getColumnClass(int), 1.0, 1648, 
1655, isCellEditable(int, int), 2.0, 1648, 
1656, getColumnName(int), 1.0, 1648, 
1657, fireTableRowsDeleted(), 0.0, 1648, 
1658, fireTableCellUpdated(int, int), 2.0, 1648, 
1659, fireTableRowsDeleted(int, int), 2.0, 1648, 
1660, fireTableRowsInserted(int, int), 2.0, 1648, 
1661, fireTableRowsUpdated(int, int), 2.0, 1648, 
1662, fireVisibilityUpdated(int), 1.0, 1648, 
1663, fireRestrictionsUpdated(int), 1.0, 1648, 
1665, columnWidthChanged(freemind.modes.attributes.ColumnWidthChangeEvent), 1.0, 1664, 
1667, AttributeRegistryElement(java.lang.String, freemind.modes.attributes.AttributeRegistry), 2.0, 1666, 
1668, isVisible(), 0.0, 1666, 
1669, getValues(), 0.0, 1666, 
1670, addValue(java.lang.String), 1.0, 1666, 
1671, removeAllValues(), 0.0, 1666, 
1672, removeValue(java.lang.String), 1.0, 1666, 
1673, isRestricted(), 0.0, 1666, 
1674, getKey(), 0.0, 1666, 
1675, setKey(java.lang.String), 1.0, 1666, 
1676, save(freemind.main.XMLElement, freemind.main.XMLElement, int), 0.0, 1666, 
1677, setVisibility(boolean), 1.0, 1666, 
1678, setRestriction(boolean), 1.0, 1666, 
1679, getRestriction(), 0.0, 1666, 
1680, setRestrictionModel(java.lang.Boolean), 1.0, 1666, 
1681, getVisibilityModel(), 0.0, 1666, 
1682, setVisibilityModel(java.lang.Boolean), 1.0, 1666, 
1683, replaceValue(java.lang.String, java.lang.String), 2.0, 1666, 
1685, getRowCount(), 0.0, 1684, 
1686, getColumnWidth(int), 1.0, 1684, 
1687, setColumnWidth(int, int), 2.0, 1684, 
1688, getValueAt(int, int), 2.0, 1684, 
1690, getNode(), 0.0, 1684, 
1691, fireTableDataChanged(), 0.0, 1684, 
1693, getRegistry(), 0.0, 1692, 
1694, getKey(), 0.0, 1692, 
1695, add(java.lang.Object), 1.0, 1692, 
1696, _add(java.lang.Object), 1.0, 1692, 
1697, remove(java.lang.Object), 1.0, 1692, 
1698, _remove(java.lang.Object), 1.0, 1692, 
1699, replace(java.lang.Object, java.lang.Object), 2.0, 1692, 
1700, _replace(java.lang.Object, java.lang.Object), 2.0, 1692, 
1703, AttributeRegistry(), 0.0, 1702, 
1704, size(), 0.0, 1702, 
1705, AttributeRegistry(freemind.modes.MapRegistry), 1.0, 1702, 
1706, getKey(int), 1.0, 1702, 
1707, getElement(int), 1.0, 1702, 
1708, getAttributeController(), 0.0, 1702, 
1709, removeAtribute(java.lang.Object), 1.0, 1702, 
1710, containsElement(java.lang.String), 1.0, 1702, 
1711, getCombinedModel(), 0.0, 1702, 
1712, getComboBoxModel(), 0.0, 1702, 
1713, getListBoxModel(), 0.0, 1702, 
1714, getDefaultComboBoxModel(java.lang.Comparable, freemind.modes.attributes.AttributeRegistryElement, java.util.NoSuchElementException), 1.0, 1702, 
1715, getElement(java.lang.Comparable, freemind.modes.attributes.AttributeRegistryElement), 1.0, 1702, 
1716, getVisibleElementsNumber(), 0.0, 1702, 
1717, addChangeListener(javax.swing.event.ChangeListener), 1.0, 1702, 
1718, removeChangeListener(javax.swing.event.ChangeListener), 1.0, 1702, 
1719, addAttributesListener(freemind.modes.mindmapmode.attributeactors.AttributesListener), 1.0, 1702, 
1720, removeAttributesListener(freemind.modes.mindmapmode.attributeactors.AttributesListener), 1.0, 1702, 
1721, fireAttributeLayoutChanged(), 0.0, 1702, 
1722, fireStateChanged(int, Object[]), 0.0, 1702, 
1723, fireAttributesChanged(int, Object[]), 0.0, 1702, 
1724, indexOf(java.lang.String), 1.0, 1702, 
1725, setVisibilityModel(int, java.lang.Boolean, freemind.modes.attributes.AttributeRegistryElement), 2.0, 1702, 
1726, getTableModel(), 0.0, 1702, 
1727, setRestrictionModel(java.lang.Boolean, int), 2.0, 1702, 
1728, getRestriction(int), 1.0, 1702, 
1729, isRestricted(java.lang.String), 1.0, 1702, 
1730, setRestricted(java.lang.String, boolean), 2.0, 1702, 
1731, setRestricted(boolean, int), 2.0, 1702, 
1732, getValues(int), 1.0, 1702, 
1733, isRestricted(), 0.0, 1702, 
1734, setRestricted(boolean), 1.0, 1702, 
1735, getFontSize(), 0.0, 1702, 
1736, setFontSize(int), 1.0, 1702, 
1737, save(boolean, java.io.Writer, freemind.main.XMLElement, freemind.modes.attributes.AttributeRegistryElement, int, freemind.main.XMLElement), 1.0, 1702, 
1738, resetChanges(int, freemind.modes.attributes.AttributeRegistryElement), 0.0, 1702, 
1739, applyChanges(int, freemind.modes.attributes.AttributeRegistryElement), 0.0, 1702, 
1740, exist(java.lang.Object, java.lang.String, int, freemind.controller.filter.util.SortedComboBoxModel, int), 2.0, 1702, 
1741, getElements(), 0.0, 1702, 
1742, decrementVisibleElementsNumber(), 0.0, 1702, 
1743, incrementVisibleElementsNumber(), 0.0, 1702, 
1744, registry(java.lang.String, freemind.modes.attributes.Attribute, freemind.modes.attributes.AttributeRegistryElement, freemind.modes.attributes.AttributeRegistryElement, int, java.lang.String, java.util.NoSuchElementException), 1.0, 1702, 
1745, registry(java.lang.String, freemind.modes.attributes.AttributeRegistryElement, int), 1.0, 1702, 
1746, setAttributeLayoutChanged(), 0.0, 1702, 
1747, unregistry(java.lang.String, int), 1.0, 1702, 
1748, getAttributeViewType(), 0.0, 1702, 
1749, setAttributeViewType(java.lang.String), 1.0, 1702, 
1751, NodeAttributeTableModel(freemind.modes.MindMapNode, int), 2.0, 1750, 
1752, allocateAttributes(int), 1.0, 1750, 
1753, NodeAttributeTableModel(freemind.modes.MindMapNode), 1.0, 1750, 
1754, getRowCount(), 0.0, 1750, 
1755, getValueAt(int, int), 2.0, 1750, 
1756, getName(int, freemind.modes.attributes.Attribute), 1.0, 1750, 
1757, getValue(int, freemind.modes.attributes.Attribute), 1.0, 1750, 
1758, getAttributeController(), 0.0, 1750, 
1760, enableStateIcon(), 0.0, 1750, 
1761, disableStateIcon(), 0.0, 1750, 
1763, addRowNoUndo(freemind.modes.attributes.Attribute, int), 1.0, 1750, 
1764, setName(int, java.lang.Object, freemind.modes.attributes.Attribute), 2.0, 1750, 
1765, setValue(java.lang.Object, int, freemind.modes.attributes.Attribute), 2.0, 1750, 
1766, removeRow(int, java.lang.Object), 1.0, 1750, 
1767, save(freemind.main.XMLElement, int), 1.0, 1750, 
1768, saveAttribute(int, freemind.main.XMLElement, freemind.main.XMLElement, freemind.modes.attributes.Attribute), 2.0, 1750, 
1769, saveLayout(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 1750, 
1770, initializeNodeAttributeLayoutXMLElement(freemind.main.XMLElement), 1.0, 1750, 
1771, getNode(), 0.0, 1750, 
1772, getAttribute(int), 1.0, 1750, 
1773, getColumnCount(), 0.0, 1750, 
1774, isCellEditable(int, int), 2.0, 1750, 
1775, getColumnName(int), 1.0, 1750, 
1776, getColumnClass(int), 1.0, 1750, 
1777, getColumnWidth(int), 1.0, 1750, 
1778, setColumnWidth(int, int), 2.0, 1750, 
1779, getLayout(), 0.0, 1750, 
1780, getAttributes(), 0.0, 1750, 
1783, MainToolBar(freemind.controller.Controller, javax.swing.JToggleButton), 1.0, 1782, 
1784, setZoomByItem(java.lang.Object, float), 1.0, 1782, 
1785, getZoomValue(java.lang.Object, java.lang.String, float, java.lang.String), 1.0, 1782, 
1786, zoomOut(float), 0.0, 1782, 
1787, getCurrentZoomIndex(int, int, int, float), 0.0, 1782, 
1788, zoomIn(float), 0.0, 1782, 
1789, getItemForZoom(float), 1.0, 1782, 
1790, setZoomComboBox(float, java.lang.String, int), 1.0, 1782, 
1791, setAllActions(boolean), 1.0, 1782, 
1793, itemStateChanged(java.awt.event.ItemEvent), 1.0, 1792, 
1796, ColorSwatch(), 0.0, 1795, 
1797, ColorSwatch(java.awt.Color), 1.0, 1795, 
1798, getIconWidth(), 0.0, 1795, 
1799, getIconHeight(), 0.0, 1795, 
1800, getColor(), 0.0, 1795, 
1803, StructuredMenuItemHolder(), 0.0, 1802, 
1804, getAction(), 0.0, 1802, 
1805, setAction(javax.swing.Action, freemind.controller.MenuItemEnabledListener), 1.0, 1802, 
1806, getEnabledListener(), 0.0, 1802, 
1807, setEnabledListener(freemind.controller.MenuItemEnabledListener), 1.0, 1802, 
1808, getMenuItem(), 0.0, 1802, 
1809, setMenuItem(javax.swing.JMenuItem), 1.0, 1802, 
1810, getSelectionListener(), 0.0, 1802, 
1811, setSelectedListener(freemind.controller.MenuItemSelectedListener), 1.0, 1802, 
1813, addListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 1812, 
1814, removeListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 1812, 
1815, MapModuleManager(freemind.controller.Controller), 1.0, 1812, 
1816, getMapModules(java.util.Iterator, freemind.view.MapModule, java.util.HashMap), 0.0, 1812, 
1817, getMapModuleVector(), 0.0, 1812, 
1818, getMapKeys(java.util.LinkedList, java.util.Iterator, freemind.view.MapModule), 0.0, 1812, 
1819, getMapModule(), 0.0, 1812, 
1820, newMapModule(freemind.modes.MindMap, freemind.modes.ModeController, freemind.view.MapModule), 2.0, 1812, 
1821, updateMapModuleName(), 0.0, 1812, 
1822, nextMapModule(int, int), 0.0, 1812, 
1823, previousMapModule(int, int), 0.0, 1812, 
1824, tryToChangeToMapModule(java.lang.String), 1.0, 1812, 
1825, checkIfFileIsAlreadyOpened(java.net.URL, java.util.Iterator, java.net.URL, freemind.view.MapModule), 1.0, 1812, 
1826, sameFile(java.net.URL, java.net.URL), 2.0, 1812, 
1827, changeToMapModule(freemind.view.MapModule, freemind.view.MapModule, java.lang.String, java.util.Iterator), 1.0, 1812, 
1828, changeToMapModule(freemind.view.MapModule), 1.0, 1812, 
1829, changeToMapOfMode(freemind.modes.Mode, java.util.Iterator, freemind.view.MapModule), 1.0, 1812, 
1830, setMapModule(freemind.view.MapModule, freemind.modes.Mode, freemind.view.MapModule, freemind.modes.Mode), 2.0, 1812, 
1831, addToOrChangeInMapModules(java.lang.String, freemind.view.MapModule, java.lang.String, int, java.util.List), 2.0, 1812, 
1832, close(int, boolean, freemind.view.MapModule, boolean), 1.0, 1812, 
1836, afterMapClose(freemind.modes.Mode, freemind.view.MapModule), 2.0, 1833, 
1838, numberOfOpenMapInformation(int), 1.0, 1833, 
1840, addListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 1839, 
1841, removeListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 1839, 
1845, numberOfOpenMapInformation(int, java.util.Iterator, freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 1839, 
1846, afterMapClose(freemind.view.MapModule, freemind.modes.Mode, java.util.Iterator, freemind.controller.MapModuleManager.MapModuleChangeObserver), 2.0, 1839, 
1851, MapMouseMotionListener(freemind.controller.Controller), 1.0, 1850, 
1852, register(freemind.controller.MapMouseMotionListener.MapMouseMotionReceiver), 1.0, 1850, 
1853, deregister(), 0.0, 1850, 
1854, handlePopup(javax.swing.JPopupMenu, java.awt.event.MouseEvent, java.lang.Object), 1.0, 1850, 
1855, mouseMoved(java.awt.event.MouseEvent), 1.0, 1850, 
1856, mouseDragged(java.awt.event.MouseEvent), 1.0, 1850, 
1857, mouseClicked(java.awt.event.MouseEvent), 1.0, 1850, 
1858, mouseEntered(java.awt.event.MouseEvent), 1.0, 1850, 
1859, mouseExited(java.awt.event.MouseEvent), 1.0, 1850, 
1860, mousePressed(java.awt.event.MouseEvent), 1.0, 1850, 
1861, mouseReleased(java.awt.event.MouseEvent), 1.0, 1850, 
1863, mouseDragged(java.awt.event.MouseEvent), 1.0, 1862, 
1864, mousePressed(java.awt.event.MouseEvent), 1.0, 1862, 
1865, mouseReleased(java.awt.event.MouseEvent), 1.0, 1862, 
1867, MenuBar(freemind.controller.Controller), 1.0, 1866, 
1868, updateMenus(freemind.modes.ModeController), 1.0, 1866, 
1869, updateModeMenu(java.awt.event.ActionListener, javax.swing.ButtonGroup, java.util.List, java.util.ListIterator, javax.swing.JRadioButtonMenuItem, javax.swing.JRadioButtonMenuItem, java.lang.String, java.lang.String), 0.0, 1866, 
1870, addAdditionalPopupActions(javax.swing.JMenuItem), 0.0, 1866, 
1871, updateMapsMenu(java.lang.String, java.lang.String, freemind.controller.StructuredMenuHolder, java.util.List, javax.swing.JRadioButtonMenuItem, javax.swing.ButtonGroup, java.util.Iterator, freemind.view.MapModule, freemind.view.MapModule, freemind.controller.MapModuleManager), 2.0, 1866, 
1872, updateFileMenu(javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem), 0.0, 1866, 
1873, updateLastOpenedList(boolean, java.lang.String, java.util.ListIterator, javax.swing.JMenuItem, freemind.controller.LastOpenedList), 0.0, 1866, 
1874, updateEditMenu(javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem), 0.0, 1866, 
1875, updateViewMenu(javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenu, javax.swing.JRadioButtonMenuItem, javax.swing.ButtonGroup, javax.swing.JMenuItem, javax.swing.JRadioButtonMenuItem, javax.swing.JRadioButtonMenuItem, javax.swing.JMenuItem), 0.0, 1866, 
1877, getMapsPopupMenu(), 0.0, 1866, 
1878, copyMenuItems(Component[], javax.swing.JMenu, javax.swing.JMenu, int), 2.0, 1866, 
1879, getMenuHolder(), 0.0, 1866, 
1882, actionPerformed(java.awt.event.ActionEvent), 1.0, 1881, 
1885, run(), 0.0, 1884, 
1888, actionPerformed(java.awt.event.ActionEvent, java.lang.String, java.lang.Exception), 1.0, 1887, 
1891, actionPerformed(java.awt.event.ActionEvent), 1.0, 1890, 
1894, run(), 0.0, 1893, 
1897, FreeMindToolBar(), 0.0, 1896, 
1898, FreeMindToolBar(int), 1.0, 1896, 
1899, FreeMindToolBar(java.lang.String), 1.0, 1896, 
1900, FreeMindToolBar(java.lang.String, int), 2.0, 1896, 
1901, add(javax.swing.Action, java.lang.Object, javax.swing.JButton), 1.0, 1896, 
1903, StructuredMenuHolder(java.util.Vector), 0.0, 1902, 
1904, addMenu(java.lang.String, javax.swing.JMenu, java.util.StringTokenizer), 2.0, 1902, 
1905, addMenuItem(java.lang.String, javax.swing.JMenuItem, freemind.controller.StructuredMenuItemHolder, java.util.StringTokenizer), 2.0, 1902, 
1906, addAction(java.lang.String, javax.swing.Action, java.util.StringTokenizer, freemind.controller.StructuredMenuItemHolder), 2.0, 1902, 
1907, adjustTooltips(freemind.controller.StructuredMenuItemHolder, java.lang.String, java.lang.String), 1.0, 1902, 
1908, addCategory(java.lang.String, java.util.StringTokenizer, freemind.controller.StructuredMenuHolder.MapTokenPair), 1.0, 1902, 
1909, addSeparator(java.lang.String, java.lang.String, java.util.StringTokenizer, freemind.controller.StructuredMenuHolder.MapTokenPair), 1.0, 1902, 
1910, addMenu(java.util.StringTokenizer, java.lang.Object, freemind.controller.StructuredMenuHolder.MapTokenPair), 2.0, 1902, 
1911, getCategoryMap(java.lang.String, java.util.Vector, java.util.Map, java.util.StringTokenizer, java.util.Vector, java.util.Map, java.util.Map), 2.0, 1902, 
1912, updateMenus(java.lang.String, javax.swing.JMenuBar, freemind.controller.StructuredMenuHolder.MapTokenPair, java.util.Map), 2.0, 1902, 
1913, updateMenus(java.lang.String, javax.swing.JPopupMenu, java.util.Map, freemind.controller.StructuredMenuHolder.MapTokenPair), 2.0, 1902, 
1914, updateMenus(java.lang.String, javax.swing.JToolBar, freemind.controller.StructuredMenuHolder.MapTokenPair, java.util.Map), 2.0, 1902, 
1915, adjustMenuItem(javax.swing.JMenuItem), 1.0, 1902, 
1917, toString(), 0.0, 1902, 
1918, print(java.lang.String, int), 1.0, 1902, 
1919, lastItemIsASeparator(javax.swing.JMenu), 1.0, 1902, 
1920, lastItemIsASeparator(javax.swing.JPopupMenu), 1.0, 1902, 
1921, setSelected(javax.swing.Icon, boolean, javax.swing.JMenuItem), 2.0, 1902, 
1923, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 1922, 
1924, addSeparator(), 0.0, 1922, 
1925, addCategory(java.lang.String), 1.0, 1922, 
1930, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 1929, 
1931, addSeparator(), 0.0, 1929, 
1932, addCategory(java.lang.String), 1.0, 1929, 
1935, addMenuItem(freemind.controller.StructuredMenuItemHolder, javax.swing.JMenuItem, freemind.controller.StructuredMenuHolder.MenuEventSupplier), 1.0, 1934, 
1936, addSeparator(), 0.0, 1934, 
1937, addCategory(java.lang.String), 1.0, 1934, 
1940, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 1939, 
1941, addSeparator(), 0.0, 1939, 
1942, addCategory(java.lang.String), 1.0, 1939, 
1945, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 1944, 
1946, addSeparator(), 0.0, 1944, 
1947, addCategory(java.lang.String), 1.0, 1944, 
1949, MenuItemAdder(javax.swing.JMenu), 1.0, 1948, 
1950, addMenuItem(freemind.controller.StructuredMenuItemHolder, javax.swing.JMenuItem), 1.0, 1948, 
1951, addSeparator(), 0.0, 1948, 
1952, addCategory(java.lang.String), 1.0, 1948, 
1954, createAdder(javax.swing.JMenu), 1.0, 1953, 
1956, createAdder(javax.swing.JMenu), 1.0, 1955, 
1959, SeparatorHolder(), 0.0, 1958, 
1961, createAdder(javax.swing.JMenu), 1.0, 1960, 
1964, addMenuListener(javax.swing.event.MenuListener), 1.0, 1963, 
1965, removeMenuListener(javax.swing.event.MenuListener), 1.0, 1963, 
1967, StructuredMenuListener(), 0.0, 1966, 
1968, menuSelected(boolean, boolean, javax.swing.event.MenuEvent, java.util.Iterator, javax.swing.Action, javax.swing.JCheckBoxMenuItem, freemind.controller.StructuredMenuItemHolder, javax.swing.JMenuItem, java.lang.Exception), 1.0, 1966, 
1969, menuDeselected(javax.swing.event.MenuEvent), 1.0, 1966, 
1970, menuCanceled(javax.swing.event.MenuEvent), 1.0, 1966, 
1971, addItem(freemind.controller.StructuredMenuItemHolder), 1.0, 1966, 
1974, getTransferData(java.awt.datatransfer.DataFlavor, byte[]), 1.0, 1972, 
1975, getTransferDataFlavors(), 0.0, 1972, 
1976, isDataFlavorSupported(java.awt.datatransfer.DataFlavor), 1.0, 1972, 
1977, lostOwnership(java.awt.datatransfer.Clipboard, java.awt.datatransfer.Transferable), 2.0, 1972, 
1978, setDropAction(java.lang.String), 1.0, 1972, 
1980, isEnabled(javax.swing.JMenuItem, javax.swing.Action), 2.0, 1979, 
1982, NodeKeyListener(freemind.controller.Controller), 1.0, 1981, 
1983, register(java.awt.event.KeyListener), 1.0, 1981, 
1984, deregister(), 0.0, 1981, 
1985, keyPressed(java.awt.event.KeyEvent), 1.0, 1981, 
1986, keyReleased(java.awt.event.KeyEvent), 1.0, 1981, 
1987, keyTyped(java.awt.event.KeyEvent), 1.0, 1981, 
1989, NodeMotionListener(freemind.controller.Controller), 1.0, 1988, 
1990, register(freemind.controller.NodeMotionListener.NodeMotionAdapter), 1.0, 1988, 
1991, deregister(), 0.0, 1988, 
1992, mouseClicked(java.awt.event.MouseEvent), 1.0, 1988, 
1993, mouseDragged(java.awt.event.MouseEvent), 1.0, 1988, 
1994, mouseEntered(java.awt.event.MouseEvent), 1.0, 1988, 
1995, mouseExited(java.awt.event.MouseEvent), 1.0, 1988, 
1996, mouseMoved(java.awt.event.MouseEvent), 1.0, 1988, 
1997, mousePressed(java.awt.event.MouseEvent), 1.0, 1988, 
1998, mouseReleased(java.awt.event.MouseEvent), 1.0, 1988, 
2001, NodeDropListener(freemind.controller.Controller), 1.0, 2000, 
2002, register(java.awt.dnd.DropTargetListener), 1.0, 2000, 
2003, deregister(), 0.0, 2000, 
2004, dragEnter(java.awt.dnd.DropTargetDragEvent), 1.0, 2000, 
2005, dragExit(java.awt.dnd.DropTargetEvent), 1.0, 2000, 
2006, dragOver(java.awt.dnd.DropTargetDragEvent), 1.0, 2000, 
2007, drop(java.awt.dnd.DropTargetDropEvent), 1.0, 2000, 
2008, dropActionChanged(java.awt.dnd.DropTargetDragEvent), 1.0, 2000, 
2010, firePopupMenuWillBecomeVisible(java.util.Iterator, javax.swing.event.MenuListener), 0.0, 2009, 
2011, addMenuListener(javax.swing.event.MenuListener), 1.0, 2009, 
2012, removeMenuListener(javax.swing.event.MenuListener), 1.0, 2009, 
2013, firePopupMenuCanceled(java.util.Iterator, javax.swing.event.MenuListener), 0.0, 2009, 
2014, firePopupMenuWillBecomeInvisible(java.util.Iterator, javax.swing.event.MenuListener), 0.0, 2009, 
2017, NodeMouseMotionListener(freemind.controller.Controller), 1.0, 2016, 
2018, register(freemind.controller.NodeMouseMotionListener.NodeMouseMotionObserver), 1.0, 2016, 
2019, deregister(), 0.0, 2016, 
2020, mouseClicked(java.awt.event.MouseEvent), 1.0, 2016, 
2021, mouseDragged(java.awt.event.MouseEvent), 1.0, 2016, 
2022, mouseEntered(java.awt.event.MouseEvent), 1.0, 2016, 
2023, mouseExited(java.awt.event.MouseEvent), 1.0, 2016, 
2024, mouseMoved(java.awt.event.MouseEvent), 1.0, 2016, 
2025, mousePressed(java.awt.event.MouseEvent), 1.0, 2016, 
2026, mouseReleased(java.awt.event.MouseEvent), 1.0, 2016, 
2027, updateSelectionMethod(), 0.0, 2016, 
2029, updateSelectionMethod(), 0.0, 2028, 
2031, MapMouseWheelListener(freemind.controller.Controller), 1.0, 2030, 
2032, mouseWheelMoved(java.awt.event.MouseWheelEvent), 1.0, 2030, 
2033, register(java.awt.event.MouseWheelListener), 1.0, 2030, 
2034, deregister(), 0.0, 2030, 
2036, BlindIcon(int), 1.0, 2035, 
2037, getIconHeight(), 0.0, 2035, 
2038, getIconWidth(), 0.0, 2035, 
2041, NodeDragListener(freemind.controller.Controller), 1.0, 2040, 
2042, getCursorByAction(int), 1.0, 2040, 
2043, dragGestureRecognized(java.lang.String, java.awt.Cursor, java.awt.dnd.DragGestureEvent, freemind.modes.MindMapNode, java.awt.datatransfer.Transferable), 1.0, 2040, 
2045, dragDropEnd(java.awt.dnd.DragSourceDropEvent), 1.0, 2044, 
2046, dragEnter(java.awt.dnd.DragSourceDragEvent), 1.0, 2044, 
2047, dragExit(java.awt.dnd.DragSourceEvent), 1.0, 2044, 
2048, dragOver(java.awt.dnd.DragSourceDragEvent), 1.0, 2044, 
2049, dropActionChanged(java.awt.dnd.DragSourceDragEvent), 1.0, 2044, 
2052, Controller(freemind.main.FreeMindMain, java.awt.KeyboardFocusManager), 1.0, 2051, 
2053, getProperty(java.lang.String), 1.0, 2051, 
2054, getIntProperty(java.lang.String, int), 2.0, 2051, 
2055, setProperty(java.lang.String, java.lang.String, java.lang.String), 2.0, 2051, 
2057, getFrame(), 0.0, 2051, 
2058, getJFrame(freemind.main.FreeMindMain), 0.0, 2051, 
2059, getResource(java.lang.String), 1.0, 2051, 
2060, getResourceString(java.lang.String), 1.0, 2051, 
2061, getModeController(), 0.0, 2051, 
2062, getModel(), 0.0, 2051, 
2063, getView(), 0.0, 2051, 
2064, getModes(), 0.0, 2051, 
2065, getMode(), 0.0, 2051, 
2066, getZooms(), 0.0, 2051, 
2067, getMapModuleManager(), 0.0, 2051, 
2068, getLastOpenedList(), 0.0, 2051, 
2069, getMapModule(), 0.0, 2051, 
2070, getToolBar(), 0.0, 2051, 
2071, getFontThroughMap(java.awt.Font), 1.0, 2051, 
2072, setAntialiasEdges(boolean), 1.0, 2051, 
2073, setAntialiasAll(boolean), 1.0, 2051, 
2074, getAntialiasEdges(), 0.0, 2051, 
2075, getAntialiasAll(), 0.0, 2051, 
2076, getDefaultFont(int, java.lang.String, int), 0.0, 2051, 
2077, getDefaultFontFamilyName(java.lang.String), 0.0, 2051, 
2078, getDefaultFontStyle(int), 0.0, 2051, 
2079, getDefaultFontSize(int), 0.0, 2051, 
2080, getCommonJColorChooser(), 0.0, 2051, 
2083, afterMapClose(freemind.view.MapModule, freemind.modes.Mode), 2.0, 2051, 
2086, numberOfOpenMapInformation(int), 1.0, 2051, 
2087, createNewMode(java.lang.String, Object[], freemind.modes.Mode, java.text.MessageFormat), 1.0, 2051, 
2088, setMenubarVisible(boolean), 1.0, 2051, 
2089, setToolbarVisible(boolean), 1.0, 2051, 
2090, getToolbar(), 0.0, 2051, 
2091, setLeftToolbarVisible(boolean, java.awt.Component), 1.0, 2051, 
2092, getNodeKeyListener(), 0.0, 2051, 
2093, getNodeMouseMotionListener(), 0.0, 2051, 
2094, getNodeMotionListener(), 0.0, 2051, 
2095, getMapMouseMotionListener(), 0.0, 2051, 
2096, getMapMouseWheelListener(), 0.0, 2051, 
2097, getNodeDragListener(), 0.0, 2051, 
2098, getNodeDropListener(), 0.0, 2051, 
2099, setFrame(freemind.main.FreeMindMain), 1.0, 2051, 
2100, moveToRoot(), 0.0, 2051, 
2101, close(boolean), 1.0, 2051, 
2102, informationMessage(java.lang.Object), 1.0, 2051, 
2103, informationMessage(javax.swing.JComponent, java.lang.Object), 2.0, 2051, 
2104, errorMessage(java.lang.String, java.lang.Object), 1.0, 2051, 
2105, errorMessage(javax.swing.JComponent, java.lang.Object), 2.0, 2051, 
2106, obtainFocusForSelected(), 0.0, 2051, 
2107, setZoom(float, Object[], java.lang.String), 1.0, 2051, 
2108, setTitle(java.lang.String, java.lang.String, freemind.modes.MindMap, java.text.MessageFormat, java.io.File, freemind.controller.MapModuleManager.MapTitleChangeListener, Object[], java.util.Iterator, freemind.view.MapModule), 0.0, 2051, 
2109, registerMapTitleChangeListener(freemind.controller.MapModuleManager.MapTitleChangeListener), 1.0, 2051, 
2110, deregisterMapTitleChangeListener(freemind.controller.MapModuleManager.MapTitleChangeListener), 1.0, 2051, 
2111, setAllActions(boolean), 1.0, 2051, 
2112, quit(int, java.lang.String, java.lang.String, boolean), 0.0, 2051, 
2113, acquirePrinterJobAndPageFormat(java.lang.SecurityException), 0.0, 2051, 
2114, getPropertyChangeListeners(), 0.0, 2051, 
2115, toggleSelectionAsRectangle(), 0.0, 2051, 
2116, isSelectionAsRectangle(), 0.0, 2051, 
2117, getMap(), 0.0, 2051, 
2118, addPropertyChangeListener(freemind.preferences.FreemindPropertyListener), 1.0, 2051, 
2119, addPropertyChangeListenerAndPropagate(freemind.preferences.FreemindPropertyListener, java.util.Iterator, java.util.Properties, java.lang.String), 1.0, 2051, 
2120, removePropertyChangeListener(freemind.preferences.FreemindPropertyListener), 1.0, 2051, 
2121, getFilterController(), 0.0, 2051, 
2122, getPageFormat(), 0.0, 2051, 
2123, setAttributeViewType(freemind.modes.MindMap, java.lang.String), 2.0, 2051, 
2124, setEdgesRenderingHint(java.awt.Graphics2D, java.lang.Object), 1.0, 2051, 
2125, setTextRenderingHint(java.awt.Graphics2D), 1.0, 2051, 
2127, isSelected(javax.swing.Action, javax.swing.JMenuItem), 2.0, 2126, 
2129, LastOpenedList(freemind.controller.Controller, java.lang.String), 2.0, 2128, 
2130, mapOpened(freemind.view.MapModule, java.lang.String), 1.0, 2128, 
2131, mapClosed(freemind.view.MapModule), 1.0, 2128, 
2132, save(java.lang.String, java.util.ListIterator), 0.0, 2128, 
2133, load(java.lang.String, java.util.StringTokenizer), 1.0, 2128, 
2134, open(boolean, java.lang.String, java.util.StringTokenizer, java.lang.String, java.lang.String), 1.0, 2128, 
2135, listIterator(), 0.0, 2128, 
2137, propertyChange(java.beans.PropertyChangeEvent, java.lang.String, java.awt.Component), 1.0, 2136, 
2140, ColorTracker(javax.swing.JColorChooser), 1.0, 2139, 
2141, actionPerformed(java.awt.event.ActionEvent), 1.0, 2139, 
2142, getColor(), 0.0, 2139, 
2144, windowClosing(java.awt.event.WindowEvent, java.awt.Window), 1.0, 2143, 
2147, componentHidden(java.awt.event.ComponentEvent, java.awt.Window), 1.0, 2146, 
2150, QuitAction(freemind.controller.Controller), 1.0, 2149, 
2151, actionPerformed(java.awt.event.ActionEvent), 1.0, 2149, 
2153, CloseAction(freemind.controller.Controller), 1.0, 2152, 
2154, actionPerformed(java.awt.event.ActionEvent), 1.0, 2152, 
2156, PrintAction(freemind.controller.Controller, boolean), 2.0, 2155, 
2157, actionPerformed(java.awt.event.ActionEvent, java.lang.Exception), 1.0, 2155, 
2159, PrintPreviewAction(freemind.controller.Controller), 1.0, 2158, 
2160, actionPerformed(java.awt.event.ActionEvent, freemind.controller.printpreview.PreviewDialog), 1.0, 2158, 
2162, PageAction(freemind.controller.Controller), 1.0, 2161, 
2163, actionPerformed(java.awt.GridBagConstraints, java.awt.event.ActionEvent, javax.swing.JButton, javax.swing.JCheckBox, javax.swing.JTextField, java.awt.GridBagLayout, javax.swing.JDialog, freemind.main.Tools.IntHolder, javax.swing.JPanel, javax.swing.JLabel), 1.0, 2161, 
2165, actionPerformed(java.awt.event.ActionEvent), 1.0, 2164, 
2168, itemStateChanged(java.awt.event.ItemEvent), 1.0, 2167, 
2171, convertLocalLink(java.lang.String), 1.0, 2170, 
2173, convertLocalLink(java.lang.String, java.lang.String), 1.0, 2172, 
2176, DocumentationAction(freemind.controller.Controller), 1.0, 2175, 
2177, actionPerformed(java.lang.String, java.net.URL, java.awt.event.ActionEvent, java.net.URL, java.net.MalformedURLException, java.security.AccessControlException), 1.0, 2175, 
2179, run(java.lang.Exception), 0.0, 2178, 
2182, KeyDocumentationAction(freemind.controller.Controller), 1.0, 2181, 
2183, actionPerformed(java.lang.String, java.net.URL, java.awt.event.ActionEvent, java.lang.Exception), 1.0, 2181, 
2185, AboutAction(freemind.controller.Controller), 1.0, 2184, 
2186, actionPerformed(java.awt.event.ActionEvent), 1.0, 2184, 
2188, LicenseAction(freemind.controller.Controller), 1.0, 2187, 
2189, actionPerformed(java.awt.event.ActionEvent), 1.0, 2187, 
2191, NavigationPreviousMapAction(freemind.controller.Controller), 1.0, 2190, 
2192, actionPerformed(java.awt.event.ActionEvent), 1.0, 2190, 
2194, ShowAttributeDialogAction(freemind.controller.Controller), 1.0, 2193, 
2195, getAttributeDialog(), 0.0, 2193, 
2196, actionPerformed(java.awt.event.ActionEvent), 1.0, 2193, 
2198, ShowFilterToolbarAction(freemind.controller.Controller), 1.0, 2197, 
2199, actionPerformed(java.awt.event.ActionEvent, javax.swing.JToggleButton), 1.0, 2197, 
2201, NavigationNextMapAction(freemind.controller.Controller), 1.0, 2200, 
2202, actionPerformed(java.awt.event.ActionEvent), 1.0, 2200, 
2204, MoveToRootAction(freemind.controller.Controller), 1.0, 2203, 
2205, actionPerformed(java.awt.event.ActionEvent), 1.0, 2203, 
2207, ToggleMenubarAction(freemind.controller.Controller), 1.0, 2206, 
2208, actionPerformed(java.awt.event.ActionEvent), 1.0, 2206, 
2209, isSelected(javax.swing.Action, javax.swing.JMenuItem), 2.0, 2206, 
2211, ToggleToolbarAction(freemind.controller.Controller), 1.0, 2210, 
2212, actionPerformed(java.awt.event.ActionEvent), 1.0, 2210, 
2213, isSelected(javax.swing.Action, javax.swing.JMenuItem), 2.0, 2210, 
2215, ToggleLeftToolbarAction(freemind.controller.Controller), 1.0, 2214, 
2216, actionPerformed(java.awt.event.ActionEvent), 1.0, 2214, 
2217, isSelected(javax.swing.JMenuItem, javax.swing.Action), 2.0, 2214, 
2219, ZoomInAction(freemind.controller.Controller), 1.0, 2218, 
2220, actionPerformed(java.awt.event.ActionEvent), 1.0, 2218, 
2222, ZoomOutAction(freemind.controller.Controller), 1.0, 2221, 
2223, actionPerformed(java.awt.event.ActionEvent), 1.0, 2221, 
2225, ShowSelectionAsRectangleAction(freemind.controller.Controller), 1.0, 2224, 
2226, actionPerformed(java.awt.event.ActionEvent), 1.0, 2224, 
2227, isSelected(javax.swing.JMenuItem, javax.swing.Action), 2.0, 2224, 
2229, ShowAllAttributesAction(), 0.0, 2228, 
2230, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 2228, 
2231, setAttributeViewType(freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 2228, 
2233, HideAllAttributesAction(), 0.0, 2232, 
2234, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 2232, 
2235, setAttributeViewType(freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 2232, 
2237, ShowSelectedAttributesAction(), 0.0, 2236, 
2238, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 2236, 
2239, setAttributeViewType(freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 2236, 
2241, PropertyAction(freemind.controller.Controller), 1.0, 2240, 
2242, actionPerformed(javax.swing.JDialog, java.awt.event.ActionEvent, freemind.preferences.layout.OptionPanel, javax.swing.Action), 1.0, 2240, 
2244, writeProperties(boolean, java.util.Properties, java.util.Vector, java.util.Iterator, java.lang.String, java.lang.String), 1.0, 2243, 
2247, windowClosing(java.awt.event.WindowEvent), 1.0, 2246, 
2249, actionPerformed(java.awt.event.ActionEvent), 1.0, 2248, 
2251, getColor(), 0.0, 2250, 
2254, OptionAntialiasAction(freemind.controller.Controller), 1.0, 2253, 
2255, actionPerformed(java.awt.event.ActionEvent, java.lang.String), 1.0, 2253, 
2256, changeAntialias(java.lang.String), 1.0, 2253, 
2259, OptionHTMLExportFoldingAction(freemind.controller.Controller), 1.0, 2258, 
2260, actionPerformed(java.awt.event.ActionEvent), 1.0, 2258, 
2262, OptionSelectionMechanismAction(freemind.controller.Controller), 1.0, 2261, 
2263, actionPerformed(java.awt.event.ActionEvent, java.lang.String), 1.0, 2261, 
2264, changeSelection(java.lang.String, java.lang.String), 1.0, 2261, 
2268, actionPerformed(java.awt.event.ActionEvent, java.net.MalformedURLException), 1.0, 2266, 
2271, MindMapController(java.io.InputStream, freemind.modes.Mode, java.awt.Toolkit, java.io.IOException), 1.0, 2270, 
2272, createStandardActions(), 0.0, 2270, 
2273, loadPatternActions(boolean, java.io.File, java.lang.String, int, java.lang.Exception, java.lang.Exception), 0.0, 2270, 
2274, getPatternReader(java.io.Reader, java.io.File), 0.0, 2270, 
2275, isUndoAction(), 0.0, 2270, 
2276, load(java.lang.String), 1.0, 2270, 
2277, loadPatterns(java.io.Reader), 1.0, 2270, 
2278, createPatterns(java.util.List, freemind.controller.actions.generated.instance.Pattern, int, freemind.controller.actions.generated.instance.PatternIcon), 1.0, 2270, 
2279, startupController(freemind.extensions.HookFactory.RegistrationContainer, java.util.List, java.lang.Class, java.util.Iterator, java.lang.reflect.Constructor, freemind.extensions.HookRegistration, freemind.extensions.HookFactory, java.lang.Exception), 0.0, 2270, 
2280, shutdownController(java.util.Iterator, freemind.extensions.HookRegistration), 0.0, 2270, 
2281, newModel(freemind.modes.ModeController), 1.0, 2270, 
2282, createIconActions(java.lang.String, String[], freemind.modes.MindIcon, int, java.io.File, freemind.modes.mindmapmode.actions.IconAction, java.util.Vector), 0.0, 2270, 
2283, createNodeHookActions(java.lang.String, java.util.Iterator, java.util.List, freemind.modes.mindmapmode.hooks.MindMapHookFactory, freemind.modes.mindmapmode.actions.NodeHookAction, java.util.List), 0.0, 2270, 
2284, getFileFilter(), 0.0, 2270, 
2285, nodeChanged(freemind.modes.MindMapNode, freemind.view.MapModule), 1.0, 2270, 
2286, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 2270, 
2287, updateToolbar(freemind.modes.MindMapNode), 1.0, 2270, 
2288, setNewNodeCreator(freemind.modes.mindmapmode.MindMapController.NewNodeCreator), 1.0, 2270, 
2289, newNode(java.lang.Object, freemind.modes.MindMap), 2.0, 2270, 
2290, updateMenus(freemind.controller.StructuredMenuHolder, freemind.modes.mindmapmode.hooks.MindMapHookFactory, java.util.List, java.lang.String, java.util.Iterator, javax.swing.AbstractAction, java.lang.String, java.lang.String, int), 1.0, 2270, 
2291, addIconsToMenu(freemind.controller.StructuredMenuHolder, java.lang.String, javax.swing.JMenu, int, javax.swing.JMenuItem), 2.0, 2270, 
2292, createPatternSubMenu(java.lang.String, freemind.controller.StructuredMenuHolder, int, javax.swing.JMenuItem), 2.0, 2270, 
2293, updateMenusFromXml(java.io.InputStream, org.jibx.runtime.IUnmarshallingContext, freemind.controller.actions.generated.instance.MenuStructure, org.jibx.runtime.JiBXException), 1.0, 2270, 
2295, getPopupMenu(), 0.0, 2270, 
2296, getPopupForModel(freemind.modes.mindmapmode.MindMapArrowLinkModel, java.lang.Object, javax.swing.JRadioButtonMenuItem, javax.swing.JRadioButtonMenuItem, java.util.HashSet, javax.swing.JPopupMenu, boolean, boolean, int, javax.swing.JRadioButtonMenuItem, java.util.Vector, javax.swing.JRadioButtonMenuItem, freemind.modes.mindmapmode.MindMapArrowLinkModel), 1.0, 2270, 
2297, getMindMapMapModel(), 0.0, 2270, 
2298, getModeToolBar(), 0.0, 2270, 
2299, getToolBar(), 0.0, 2270, 
2300, getLeftToolBar(), 0.0, 2270, 
2301, setAllActions(boolean, int), 1.0, 2270, 
2302, setBold(boolean, freemind.modes.MindMapNode), 2.0, 2270, 
2303, setItalic(freemind.modes.MindMapNode, boolean), 2.0, 2270, 
2304, setCloud(freemind.modes.MindMapNode, boolean), 2.0, 2270, 
2305, setCloudColor(freemind.modes.MindMapNode, java.awt.Color), 2.0, 2270, 
2306, setFontSize(freemind.modes.MindMapNode, java.lang.String), 2.0, 2270, 
2307, increaseFontSize(freemind.modes.MindMapNode, int, int), 2.0, 2270, 
2308, setFontFamily(freemind.modes.MindMapNode, java.lang.String), 2.0, 2270, 
2309, setNodeColor(java.awt.Color, freemind.modes.MindMapNode), 2.0, 2270, 
2310, setNodeBackgroundColor(freemind.modes.MindMapNode, java.awt.Color), 2.0, 2270, 
2311, blendNodeColor(java.awt.Color, freemind.modes.MindMapNode, java.awt.Color), 1.0, 2270, 
2312, setEdgeColor(freemind.modes.MindMapNode, java.awt.Color), 2.0, 2270, 
2313, applyPattern(freemind.modes.MindMapNode, java.lang.String, int, freemind.modes.mindmapmode.actions.ApplyPatternAction), 2.0, 2270, 
2314, applyPattern(freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode), 2.0, 2270, 
2315, addIcon(freemind.modes.MindMapNode, freemind.modes.MindIcon), 2.0, 2270, 
2316, removeAllIcons(freemind.modes.MindMapNode), 1.0, 2270, 
2317, removeLastIcon(freemind.modes.MindMapNode), 1.0, 2270, 
2318, addLink(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 2270, 
2319, removeReference(freemind.modes.MindMapLink), 1.0, 2270, 
2320, setArrowLinkColor(java.awt.Color, freemind.modes.MindMapLink), 2.0, 2270, 
2323, setLink(java.lang.String, freemind.modes.MindMapNode), 2.0, 2270, 
2326, setNodeText(freemind.modes.MindMapNode, java.lang.String), 2.0, 2270, 
2327, setEdgeWidth(freemind.modes.MindMapNode, int), 2.0, 2270, 
2328, setEdgeStyle(java.lang.String, freemind.modes.MindMapNode), 2.0, 2270, 
2329, setNodeStyle(java.lang.String, freemind.modes.MindMapNode), 2.0, 2270, 
2330, copy(boolean, freemind.modes.MindMapNode, java.io.StringWriter, java.io.IOException), 2.0, 2270, 
2331, cut(), 0.0, 2270, 
2332, cut(java.util.List), 1.0, 2270, 
2333, paste(freemind.modes.MindMapNode, java.awt.datatransfer.Transferable), 2.0, 2270, 
2335, paste(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 2270, 
2338, deleteNode(freemind.modes.MindMapNode), 1.0, 2270, 
2339, toggleFolded(), 0.0, 2270, 
2340, setFolded(freemind.modes.MindMapNode, boolean), 2.0, 2270, 
2342, joinNodes(java.util.List, freemind.modes.MindMapNode), 2.0, 2270, 
2343, setLinkByFileChooser(java.lang.String), 0.0, 2270, 
2344, setImageByFileChooser(boolean, java.lang.String, java.lang.String, freemind.main.ExampleFileFilter, java.lang.String, java.util.ListIterator, freemind.modes.MindMapNode, java.lang.String), 0.0, 2270, 
2345, getLinkByFileChooser(java.lang.String, java.io.File, java.net.URL, javax.swing.JFileChooser, javax.swing.filechooser.FileFilter, int, java.net.MalformedURLException), 1.0, 2270, 
2346, loadURL(java.lang.String, boolean), 1.0, 2270, 
2349, plainClick(freemind.view.mindmapview.MainView, java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 2270, 
2350, getHookFactory(), 0.0, 2270, 
2352, invokeHook(freemind.extensions.ModeControllerHook, java.lang.Exception), 1.0, 2270, 
2353, getActionFactory(), 0.0, 2270, 
2354, saveHTML(java.io.BufferedWriter, java.io.File, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapHTMLWriter), 2.0, 2270, 
2355, saveHTML(java.io.Writer, java.util.List, freemind.modes.mindmapmode.MindMapHTMLWriter), 2.0, 2270, 
2357, getContent(int, javax.swing.text.html.HTMLDocument, java.lang.String, java.io.StringWriter, int, char[], char[], int, int, java.io.StringReader, String[], javax.swing.text.html.HTMLEditorKit, int, java.io.IOException), 2.0, 2270, 
2358, updateNode(freemind.modes.MindMapNode), 1.0, 2270, 
2359, recursiveCallUpdateHooks(freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.extensions.PermanentNodeHook, java.util.Iterator), 2.0, 2270, 
2360, doubleClick(java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 2270, 
2361, select(freemind.view.mindmapview.NodeView), 1.0, 2270, 
2362, selectMultipleNodes(java.util.Collection, freemind.view.mindmapview.NodeView), 2.0, 2270, 
2363, selectMultipleNodes(freemind.modes.MindMapNode, java.util.Collection), 2.0, 2270, 
2364, selectMultipleNodesImpl(java.lang.Object, java.util.Collection, java.util.Iterator, freemind.modes.MindMapNode), 2.0, 2270, 
2365, getNodeView(java.lang.Object), 1.0, 2270, 
2366, selectBranch(boolean, freemind.view.mindmapview.NodeView), 2.0, 2270, 
2367, extendSelection(boolean, boolean, java.lang.String, boolean, java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView, boolean), 1.0, 2270, 
2368, registerMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 2270, 
2369, deRegisterMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 2270, 
2370, getRegisteredMouseWheelEventHandler(), 0.0, 2270, 
2371, marshall(freemind.controller.actions.generated.instance.XmlAction), 1.0, 2270, 
2372, unMarshall(java.lang.String), 1.0, 2270, 
2374, decorateDialog(javax.swing.JDialog, java.lang.String), 2.0, 2270, 
2375, getAttributeController(), 0.0, 2270, 
2376, getAttributeTablePopupMenu(), 0.0, 2270, 
2377, createXMLElement(), 0.0, 2270, 
2379, removeAttribute(int, freemind.modes.MindMapNode), 2.0, 2270, 
2380, addAttribute(freemind.modes.attributes.Attribute, freemind.modes.MindMapNode, int, freemind.modes.attributes.NodeAttributeTableModel), 2.0, 2270, 
2383, removeNodeFromParent(freemind.modes.MindMapNode), 1.0, 2270, 
2384, nodeStyleChanged(freemind.modes.MindMapNode, java.util.ListIterator, freemind.modes.MindMapNode), 1.0, 2270, 
2385, repaintMap(), 0.0, 2270, 
2386, clearNodeContents(freemind.modes.MindMapNode, java.util.List, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, java.lang.String), 1.0, 2270, 
2387, createEditNoteToNodeAction(freemind.modes.MindMapNode, java.lang.String, freemind.controller.actions.generated.instance.EditNoteToNodeAction), 2.0, 2270, 
2388, setNoteText(freemind.controller.actions.generated.instance.EditNoteToNodeAction, freemind.controller.actions.generated.instance.EditNoteToNodeAction, java.lang.String, freemind.modes.MindMapNode, java.lang.String), 2.0, 2270, 
2389, registerPlugin(freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin), 1.0, 2270, 
2390, deregisterPlugin(freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin), 1.0, 2270, 
2391, getPlugins(), 0.0, 2270, 
2392, getClipboardContents(), 0.0, 2270, 
2393, setClipboardContents(java.awt.datatransfer.Transferable), 1.0, 2270, 
2395, AssignAttributesAction(), 0.0, 2394, 
2396, actionPerformed(java.awt.event.ActionEvent), 1.0, 2394, 
2399, apply(freemind.modes.mindmapmode.MindMapMapModel, freemind.modes.mindmapmode.MindMapNodeModel), 2.0, 2398, 
2402, apply(freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapMapModel), 2.0, 2401, 
2408, accept(java.lang.String, java.io.File), 2.0, 2407, 
2411, createNode(freemind.modes.MindMap, java.lang.Object), 2.0, 2410, 
2413, createNode(java.lang.Object, freemind.modes.MindMap), 2.0, 2412, 
2416, ExportToHTMLAction(freemind.modes.mindmapmode.MindMapController), 1.0, 2415, 
2417, actionPerformed(java.awt.event.ActionEvent, java.io.File, java.io.IOException), 1.0, 2415, 
2419, ExportBranchToHTMLAction(freemind.modes.mindmapmode.MindMapController), 1.0, 2418, 
2420, actionPerformed(java.awt.event.ActionEvent, java.io.File, java.io.IOException), 1.0, 2418, 
2422, ImportBranchAction(), 0.0, 2421, 
2423, actionPerformed(java.awt.event.ActionEvent, javax.swing.JFileChooser, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, int, java.lang.Exception), 1.0, 2421, 
2425, ImportLinkedBranchAction(), 0.0, 2424, 
2426, actionPerformed(java.net.URL, java.lang.String, java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, java.net.MalformedURLException), 1.0, 2424, 
2428, ImportLinkedBranchWithoutRootAction(), 0.0, 2427, 
2429, actionPerformed(java.net.URL, java.lang.String, java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.Exception), 1.0, 2427, 
2431, accept(java.io.File, java.lang.String), 1.0, 2430, 
2432, getDescription(), 0.0, 2430, 
2435, SetLinkByFileChooserAction(), 0.0, 2434, 
2436, actionPerformed(java.awt.event.ActionEvent), 1.0, 2434, 
2438, SetImageByFileChooserAction(), 0.0, 2437, 
2439, actionPerformed(java.awt.event.ActionEvent), 1.0, 2437, 
2441, FollowLinkAction(), 0.0, 2440, 
2442, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 2440, 
2443, isEnabled(javax.swing.JMenuItem, javax.swing.Action, java.util.Iterator, freemind.modes.MindMapNode), 2.0, 2440, 
2445, EditLongAction(), 0.0, 2444, 
2446, actionPerformed(java.awt.event.ActionEvent), 1.0, 2444, 
2448, MindMapMode(), 0.0, 2447, 
2449, init(freemind.controller.Controller), 1.0, 2447, 
2450, createModeController(freemind.modes.mindmapmode.MindMapController), 0.0, 2447, 
2451, toString(), 0.0, 2447, 
2452, activate(), 0.0, 2447, 
2453, restore(java.lang.String), 1.0, 2447, 
2454, getController(), 0.0, 2447, 
2455, getDefaultModeController(), 0.0, 2447, 
2457, MindMapXMLElement(freemind.modes.ModeController), 1.0, 2456, 
2459, init(), 0.0, 2456, 
2460, createAnotherElement(), 0.0, 2456, 
2461, createNodeAdapter(freemind.main.FreeMindMain, java.lang.String, Class[], java.lang.reflect.Constructor, freemind.modes.NodeAdapter, java.lang.ClassLoader, Object[], java.lang.Class, freemind.modes.NodeAdapter, java.lang.Exception), 2.0, 2456, 
2462, createEdgeAdapter(freemind.main.FreeMindMain, freemind.modes.NodeAdapter), 2.0, 2456, 
2463, createCloudAdapter(freemind.modes.NodeAdapter, freemind.main.FreeMindMain), 2.0, 2456, 
2465, createEncryptedNode(java.lang.String, freemind.modes.NodeAdapter), 1.0, 2456, 
2468, setMap(freemind.modes.MindMap), 1.0, 2466, 
2469, decrypt(java.lang.StringBuffer, int, freemind.modes.MindMapNode, int, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String, java.lang.String, String[], java.util.ListIterator, java.lang.String, java.lang.Exception), 1.0, 2466, 
2470, paste(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 2466, 
2471, getNodeFromXml(java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 2466, 
2472, getMindMapMapModel(), 0.0, 2466, 
2473, checkPassword(java.lang.StringBuffer, java.lang.String), 1.0, 2466, 
2474, equals(java.lang.StringBuffer, java.lang.StringBuffer, int, char, char), 2.0, 2466, 
2475, encrypt(), 0.0, 2466, 
2476, getChildCount(), 0.0, 2466, 
2477, childrenFolded(), 0.0, 2466, 
2478, childrenUnfolded(), 0.0, 2466, 
2479, hasChildren(), 0.0, 2466, 
2480, updateIcon(), 0.0, 2466, 
2481, setPassword(java.lang.StringBuffer), 1.0, 2466, 
2482, isFolded(), 0.0, 2466, 
2483, setFolded(boolean), 1.0, 2466, 
2484, setAdditionalInfo(java.lang.String), 1.0, 2466, 
2485, getAdditionalInfo(), 0.0, 2466, 
2487, generateEncryptedContent(freemind.modes.MindMapLinkRegistry, java.io.StringWriter, java.lang.StringBuffer), 1.0, 2466, 
2488, encryptXml(java.lang.StringBuffer, freemind.main.Tools.SingleDesEncrypter, java.lang.String, java.lang.Exception), 1.0, 2466, 
2489, decryptXml(java.lang.StringBuffer, java.lang.String, java.lang.String, freemind.main.Tools.SingleDesEncrypter), 2.0, 2466, 
2490, setShuttingDown(boolean), 1.0, 2466, 
2491, setAccessible(boolean), 1.0, 2466, 
2492, isAccessible(), 0.0, 2466, 
2493, insert(javax.swing.tree.MutableTreeNode, int), 2.0, 2466, 
2494, isWriteable(), 0.0, 2466, 
2495, isStoringEncryptedContent(), 0.0, 2466, 
2496, setStoringEncryptedContent(boolean), 1.0, 2466, 
2498, MindMapToolBar(freemind.modes.mindmapmode.MindMapController), 1.0, 2497, 
2499, update(freemind.controller.StructuredMenuHolder, int), 1.0, 2497, 
2500, selectFontSize(java.lang.String), 1.0, 2497, 
2501, getLeftToolBar(), 0.0, 2497, 
2502, selectFontName(java.lang.String), 1.0, 2497, 
2503, setAllActions(boolean), 1.0, 2497, 
2505, itemStateChanged(java.awt.event.ItemEvent), 1.0, 2504, 
2508, itemStateChanged(java.awt.event.ItemEvent), 1.0, 2507, 
2511, MindMapEdgeModel(freemind.main.FreeMindMain, freemind.modes.MindMapNode), 2.0, 2510, 
2513, MindMapMapModel(freemind.modes.ModeController, freemind.main.FreeMindMain), 2.0, 2512, 
2515, getLinkRegistry(), 0.0, 2512, 
2516, getRestoreable(), 0.0, 2512, 
2517, changeNode(java.lang.String, freemind.modes.MindMapNode), 2.0, 2512, 
2518, toString(), 0.0, 2512, 
2519, getAsHTML(java.io.StringWriter, java.util.List, java.io.BufferedWriter, java.lang.Exception), 1.0, 2512, 
2520, getAsPlainText(java.io.StringWriter, java.util.List, java.util.ListIterator, java.io.BufferedWriter, java.lang.Exception), 1.0, 2512, 
2521, saveTXT(java.io.File, freemind.modes.mindmapmode.MindMapNodeModel, java.io.BufferedWriter, java.lang.Exception), 2.0, 2512, 
2522, getAsRTF(java.io.StringWriter, java.util.List, java.io.BufferedWriter, java.lang.Exception), 1.0, 2512, 
2523, saveRTF(java.lang.String, int, java.io.BufferedWriter, java.util.List, java.util.ListIterator, java.awt.Color, java.util.HashMap, java.util.HashSet, java.lang.Exception), 2.0, 2512, 
2524, save(java.io.File), 1.0, 2512, 
2525, saveInternal(java.io.File, boolean, java.lang.String, java.io.BufferedWriter, java.lang.Exception), 2.0, 2512, 
2526, getXml(java.io.Writer, boolean), 2.0, 2512, 
2528, getXml(java.io.Writer), 1.0, 2512, 
2529, getFilteredXml(java.io.Writer), 1.0, 2512, 
2530, tryToLock(java.io.File, java.lang.String, java.lang.String), 1.0, 2512, 
2531, load(java.net.URL, java.io.File), 1.0, 2512, 
2532, load(java.io.File, java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.Exception), 1.0, 2512, 
2533, destroy(), 0.0, 2512, 
2534, loadTree(java.io.File), 1.0, 2512, 
2535, loadTree(freemind.modes.mindmapmode.MindMapMapModel.ReaderCreator), 1.0, 2512, 
2536, loadTree(freemind.modes.mindmapmode.MindMapMapModel.ReaderCreator, boolean, java.lang.StringBuffer, java.io.Reader, int, java.lang.String, freemind.modes.mindmapmode.MindMapXMLElement, int, java.lang.String, int, java.util.HashMap, freemind.modes.NodeAdapter, java.lang.Exception), 2.0, 2512, 
2537, readFileStart(java.io.BufferedReader, java.lang.String, java.io.Reader, int, java.lang.StringBuffer, java.lang.Exception), 2.0, 2512, 
2538, scheduleTimerForAutomaticSaving(java.lang.String, int, java.io.File, boolean, int), 0.0, 2512, 
2540, MindMapPopupMenu(freemind.modes.mindmapmode.MindMapController), 1.0, 2539, 
2541, update(freemind.controller.StructuredMenuHolder), 1.0, 2539, 
2543, JAutoScrollBarPane(java.awt.Component), 1.0, 2542, 
2544, doLayout(boolean, int, boolean, java.awt.Dimension, int, java.awt.Insets), 0.0, 2542, 
2545, getPreferredSize(), 0.0, 2542, 
2548, clone(), 0.0, 2546, 
2549, toString(), 0.0, 2546, 
2553, MindMapHTMLWriter(java.io.Writer), 1.0, 2552, 
2554, convertSpecialChar(java.lang.String, char), 1.0, 2552, 
2555, saveHTML_escapeUnicodeAndSpecialCharacters(int, java.lang.String, boolean, char, boolean, int, int, java.lang.StringBuffer), 1.0, 2552, 
2556, saveHTML(java.util.List, java.util.Iterator, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 2552, 
2557, saveHTML(freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String), 1.0, 2552, 
2558, writeBodyWithFolding(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 2552, 
2559, writeJavaScript(), 0.0, 2552, 
2560, writeStyle(), 0.0, 2552, 
2562, fontStyle(java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String, int, int), 1.0, 2552, 
2563, writeModelContent(java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 2552, 
2564, writeIcons(freemind.modes.mindmapmode.MindMapNodeModel, int), 1.0, 2552, 
2565, writeFoldingButtons(java.lang.String), 1.0, 2552, 
2566, isHeading(freemind.modes.mindmapmode.MindMapNodeModel, int), 2.0, 2552, 
2567, hasHtml(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 2552, 
2568, getProperty(java.lang.String), 1.0, 2552, 
2570, MindMapCloudModel(freemind.modes.MindMapNode, freemind.main.FreeMindMain), 2.0, 2569, 
2572, run(), 0.0, 2571, 
2575, StringReaderCreator(java.lang.String), 1.0, 2574, 
2576, createReader(), 0.0, 2574, 
2577, toString(), 0.0, 2574, 
2579, FileReaderCreator(java.io.File), 1.0, 2578, 
2580, createReader(), 0.0, 2578, 
2581, toString(), 0.0, 2578, 
2583, createReader(), 0.0, 2582, 
2585, getSemaphoreFile(java.io.File), 1.0, 2584, 
2586, popLockingUserOfOldLock(java.lang.String), 0.0, 2584, 
2587, writeSemaphoreFile(java.io.FileOutputStream, java.nio.channels.FileLock, java.io.File, java.lang.UnsatisfiedLinkError, java.lang.NoClassDefFoundError), 1.0, 2584, 
2588, tryToLock(java.lang.String, java.io.File, java.io.File, java.io.BufferedReader, long, long, java.io.FileNotFoundException), 1.0, 2584, 
2589, releaseLock(), 0.0, 2584, 
2590, releaseTimer(), 0.0, 2584, 
2591, run(java.lang.Exception), 0.0, 2584, 
2594, popLockingUserOfOldLock(), 0.0, 2593, 
2595, tryToLock(java.io.File), 1.0, 2593, 
2596, releaseLock(), 0.0, 2593, 
2597, releaseTimer(), 0.0, 2593, 
2598, run(), 0.0, 2593, 
2602, run(java.lang.reflect.InvocationTargetException), 0.0, 2600, 
2604, run(java.io.File, java.lang.Exception), 0.0, 2603, 
2607, MindMapNodeModel(freemind.main.FreeMindMain, freemind.modes.MindMap), 2.0, 2606, 
2609, getPlainTextContent(), 0.0, 2606, 
2610, saveTXT(int, java.io.Writer, java.lang.String, int, java.lang.String), 2.0, 2606, 
2611, saveChildrenText(java.io.Writer, int, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 2.0, 2606, 
2612, collectColors(java.util.HashSet, java.util.ListIterator), 1.0, 2606, 
2613, saveRFT_escapeUnicodeAndSpecialCharacters(int, char, int, java.lang.String, int, java.lang.StringBuffer), 1.0, 2606, 
2616, isWriteable(), 0.0, 2606, 
2619, getText(), 0.0, 2618, 
2620, setText(java.lang.String), 1.0, 2618, 
2621, getObjectId(freemind.modes.ModeController), 1.0, 2618, 
2622, childrenFolded(), 0.0, 2618, 
2623, childrenUnfolded(), 0.0, 2618, 
2624, hasChildren(), 0.0, 2618, 
2625, getFilterInfo(), 0.0, 2618, 
2626, getChildPosition(freemind.modes.MindMapNode), 1.0, 2618, 
2627, getPreferredChild(), 0.0, 2618, 
2628, setPreferredChild(freemind.modes.MindMapNode), 1.0, 2618, 
2629, getNodeLevel(), 0.0, 2618, 
2630, getLink(), 0.0, 2618, 
2631, getShortText(freemind.modes.ModeController), 1.0, 2618, 
2632, getEdge(), 0.0, 2618, 
2633, getColor(), 0.0, 2618, 
2634, getStyle(), 0.0, 2618, 
2635, setStyle(java.lang.String), 1.0, 2618, 
2636, hasStyle(), 0.0, 2618, 
2637, getParentNode(), 0.0, 2618, 
2638, isBold(), 0.0, 2618, 
2639, isItalic(), 0.0, 2618, 
2640, isUnderlined(), 0.0, 2618, 
2641, getFont(), 0.0, 2618, 
2642, getFontSize(), 0.0, 2618, 
2643, getFontFamilyName(), 0.0, 2618, 
2644, getViewers(), 0.0, 2618, 
2645, addViewer(freemind.view.mindmapview.NodeView), 1.0, 2618, 
2646, getPlainTextContent(), 0.0, 2618, 
2647, getPath(), 0.0, 2618, 
2648, isDescendantOf(freemind.modes.MindMapNode), 1.0, 2618, 
2649, isRoot(), 0.0, 2618, 
2650, isFolded(), 0.0, 2618, 
2651, isLeft(), 0.0, 2618, 
2652, isOnLeftSideOfRoot(), 0.0, 2618, 
2653, setLeft(boolean), 1.0, 2618, 
2654, setFolded(boolean), 1.0, 2618, 
2655, setFont(java.awt.Font), 1.0, 2618, 
2656, setShiftY(int), 1.0, 2618, 
2657, getShiftY(), 0.0, 2618, 
2658, calcShiftY(), 0.0, 2618, 
2659, setVGap(int), 1.0, 2618, 
2660, getVGap(), 0.0, 2618, 
2661, calcVGap(), 0.0, 2618, 
2662, setHGap(int), 1.0, 2618, 
2663, getHGap(), 0.0, 2618, 
2664, setLink(java.lang.String), 1.0, 2618, 
2665, setFontSize(int), 1.0, 2618, 
2666, setColor(java.awt.Color), 1.0, 2618, 
2667, getIcons(), 0.0, 2618, 
2668, addIcon(freemind.modes.MindIcon, int), 2.0, 2618, 
2669, removeIcon(int), 1.0, 2618, 
2670, getCloud(), 0.0, 2618, 
2671, setCloud(freemind.modes.MindMapCloud), 1.0, 2618, 
2672, getBackgroundColor(), 0.0, 2618, 
2673, setBackgroundColor(java.awt.Color), 1.0, 2618, 
2674, getHooks(), 0.0, 2618, 
2675, getActivatedHooks(), 0.0, 2618, 
2676, addHook(freemind.extensions.PermanentNodeHook), 1.0, 2618, 
2677, invokeHook(freemind.extensions.NodeHook), 1.0, 2618, 
2678, removeHook(freemind.extensions.PermanentNodeHook), 1.0, 2618, 
2679, setToolTip(java.lang.String, java.lang.String), 2.0, 2618, 
2680, getToolTip(), 0.0, 2618, 
2681, setAdditionalInfo(java.lang.String), 1.0, 2618, 
2682, getAdditionalInfo(), 0.0, 2618, 
2683, shallowCopy(), 0.0, 2618, 
2685, getStateIcons(), 0.0, 2618, 
2686, setStateIcon(java.lang.String, javax.swing.ImageIcon), 2.0, 2618, 
2687, getHistoryInformation(), 0.0, 2618, 
2688, setHistoryInformation(freemind.modes.HistoryInformation), 1.0, 2618, 
2689, isVisible(), 0.0, 2618, 
2690, hasOneVisibleChild(), 0.0, 2618, 
2691, getMap(), 0.0, 2618, 
2692, getAttributes(), 0.0, 2618, 
2693, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 2618, 
2694, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 2618, 
2695, insert(int, javax.swing.tree.MutableTreeNode), 2.0, 2618, 
2696, remove(int), 1.0, 2618, 
2697, remove(javax.swing.tree.MutableTreeNode), 1.0, 2618, 
2698, setUserObject(java.lang.Object), 1.0, 2618, 
2699, removeFromParent(), 0.0, 2618, 
2700, setParent(javax.swing.tree.MutableTreeNode), 1.0, 2618, 
2701, getChildAt(int), 1.0, 2618, 
2702, getChildCount(), 0.0, 2618, 
2703, getParent(), 0.0, 2618, 
2704, getIndex(javax.swing.tree.TreeNode), 1.0, 2618, 
2705, getAllowsChildren(), 0.0, 2618, 
2706, isLeaf(), 0.0, 2618, 
2707, children(), 0.0, 2618, 
2708, getXmlText(), 0.0, 2618, 
2709, setXmlText(java.lang.String), 1.0, 2618, 
2710, getXmlNoteText(), 0.0, 2618, 
2711, setXmlNoteText(java.lang.String), 1.0, 2618, 
2712, getChildren(), 0.0, 2618, 
2713, getNoteText(), 0.0, 2618, 
2714, setNoteText(java.lang.String), 1.0, 2618, 
2715, getAttribute(int), 1.0, 2618, 
2716, getAttributeKeyList(), 0.0, 2618, 
2717, getAttributePosition(java.lang.String), 1.0, 2618, 
2718, setAttribute(freemind.modes.attributes.Attribute, int), 2.0, 2618, 
2719, getAttributeTableLength(), 0.0, 2618, 
2720, removeViewer(freemind.view.mindmapview.NodeView), 1.0, 2618, 
2721, acceptViewVisitor(freemind.view.mindmapview.NodeViewVisitor), 1.0, 2618, 
2722, getListeners(), 0.0, 2618, 
2723, isNewChildLeft(), 0.0, 2618, 
2724, createAttributeTableModel(), 0.0, 2618, 
2725, getAttribute(java.lang.String), 1.0, 2618, 
2726, isWriteable(), 0.0, 2618, 
2729, testTagRemoval(java.lang.String), 0.0, 2728, 
2730, testTagRemovalWithNewlines(java.lang.String), 0.0, 2728, 
2731, testTagRemovalOnlyForHtmlText(java.lang.String), 0.0, 2728, 
2732, testFlatNodeTableFilter(javax.swing.table.AbstractTableModel, accessories.plugins.time.FlatNodeTableFilterModel), 0.0, 2728, 
2733, testPositions(freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, java.util.ArrayList), 0.0, 2728, 
2734, testDirectReplace(), 0.0, 2728, 
2735, testGetPureRegularExpression(), 0.0, 2728, 
2736, executeRegExpRemovalAndTest(java.lang.String, java.lang.String, java.lang.String), 2.0, 2728, 
2737, testReplaceNodeText(accessories.plugins.time.TimeList.IReplaceInputInformation), 0.0, 2728, 
2739, getRowCount(), 0.0, 2738, 
2740, getColumnCount(), 0.0, 2738, 
2741, getValueAt(tests.freemind.findreplace.TestMindMapNode, int, int), 2.0, 2738, 
2743, TestReplaceInputInfo(java.lang.String, java.lang.String), 2.0, 2742, 
2744, getLength(), 0.0, 2742, 
2745, getNodeHolderAt(tests.freemind.findreplace.TestMindMapNode, int), 1.0, 2742, 
2746, changeString(java.lang.String, accessories.plugins.time.TimeList.NodeHolder), 2.0, 2742, 
2752, AttributeNotExistsCondition(java.lang.String), 1.0, 2751, 
2753, checkNode(freemind.controller.Controller, freemind.modes.MindMapNode, freemind.modes.attributes.AttributeTableModel, int), 2.0, 2751, 
2754, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2751, 
2755, load(freemind.main.XMLElement), 1.0, 2751, 
2756, createDesctiption(java.lang.String), 0.0, 2751, 
2758, NodeContainsCondition(java.lang.String), 1.0, 2757, 
2759, checkNode(freemind.modes.MindMapNode, freemind.controller.Controller), 2.0, 2757, 
2760, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2757, 
2761, load(freemind.main.XMLElement), 1.0, 2757, 
2762, createDesctiption(java.lang.String, java.lang.String), 0.0, 2757, 
2764, ConjunctConditions(Object[]), 1.0, 2763, 
2765, checkNode(int, freemind.modes.MindMapNode, freemind.controller.Controller, freemind.controller.filter.condition.Condition), 2.0, 2763, 
2766, getListCellRendererComponent(javax.swing.JComponent, freemind.controller.filter.condition.Condition, int, java.lang.String, freemind.controller.filter.condition.JCondition, java.lang.String), 0.0, 2763, 
2767, save(freemind.main.XMLElement, freemind.main.XMLElement, int, freemind.controller.filter.condition.Condition), 1.0, 2763, 
2768, load(freemind.controller.filter.condition.Condition, Object[], freemind.main.XMLElement, int, java.util.Vector), 1.0, 2763, 
2770, ConditionFactory(), 0.0, 2769, 
2772, loadCondition(freemind.main.XMLElement), 1.0, 2769, 
2775, getNodeConditionNames(), 0.0, 2769, 
2776, getIconConditionNames(), 0.0, 2769, 
2777, getAttributeConditionNames(), 0.0, 2769, 
2779, createCellRendererComponent(java.lang.String, freemind.controller.filter.condition.JCondition, javax.swing.JLabel), 1.0, 2769, 
2781, IgnoreCaseNodeContainsCondition(java.lang.String), 1.0, 2780, 
2782, checkNode(freemind.controller.Controller, freemind.modes.MindMapNode), 2.0, 2780, 
2783, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2780, 
2784, load(freemind.main.XMLElement), 1.0, 2780, 
2785, createDesctiption(java.lang.String, java.lang.String), 0.0, 2780, 
2787, ConditionNotSatisfiedDecorator(freemind.controller.filter.condition.Condition), 1.0, 2786, 
2788, checkNode(freemind.modes.MindMapNode, freemind.controller.Controller), 2.0, 2786, 
2789, getListCellRendererComponent(java.lang.String, java.lang.String, javax.swing.JComponent, freemind.controller.filter.condition.JCondition), 0.0, 2786, 
2790, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2786, 
2791, load(freemind.controller.filter.condition.Condition, freemind.main.XMLElement, java.util.Vector), 1.0, 2786, 
2793, SelectedViewCondition(), 0.0, 2792, 
2794, toString(), 0.0, 2792, 
2795, checkNode(freemind.modes.MindMapNode, freemind.controller.Controller, freemind.view.mindmapview.NodeView), 2.0, 2792, 
2796, getListCellRendererComponent(), 0.0, 2792, 
2797, CreateCondition(), 0.0, 2792, 
2798, save(freemind.main.XMLElement), 1.0, 2792, 
2800, NodeCondition(), 0.0, 2799, 
2801, getListCellRendererComponent(), 0.0, 2799, 
2802, toString(), 0.0, 2799, 
2803, createDesctiption(), 0.0, 2799, 
2804, saveAttributes(freemind.main.XMLElement), 1.0, 2799, 
2806, JCondition(), 0.0, 2805, 
2808, IconContainedCondition(java.lang.String), 1.0, 2807, 
2809, checkNode(freemind.controller.Controller, freemind.modes.MindMapNode), 2.0, 2807, 
2810, iconFirstIndex(freemind.modes.MindMapNode, java.lang.String, java.util.List, freemind.modes.MindIcon, java.util.ListIterator), 2.0, 2807, 
2811, iconLastIndex(freemind.modes.MindMapNode, java.lang.String, java.util.List, java.util.ListIterator, freemind.modes.MindIcon), 2.0, 2807, 
2812, isStateIconContained(java.lang.String, freemind.modes.MindMapNode, java.lang.String, java.util.Set, java.util.Iterator), 2.0, 2807, 
2813, getListCellRendererComponent(java.lang.String, freemind.controller.filter.condition.JCondition), 0.0, 2807, 
2814, getIconName(), 0.0, 2807, 
2815, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2807, 
2816, load(freemind.main.XMLElement), 1.0, 2807, 
2818, DisjunctConditions(Object[]), 1.0, 2817, 
2819, checkNode(int, freemind.controller.Controller, freemind.modes.MindMapNode, freemind.controller.filter.condition.Condition), 2.0, 2817, 
2820, getListCellRendererComponent(javax.swing.JComponent, int, freemind.controller.filter.condition.Condition, java.lang.String, java.lang.String, freemind.controller.filter.condition.JCondition), 0.0, 2817, 
2821, save(freemind.main.XMLElement, freemind.controller.filter.condition.Condition, int, freemind.main.XMLElement), 1.0, 2817, 
2822, load(freemind.controller.filter.condition.Condition, Object[], freemind.main.XMLElement, int, java.util.Vector), 1.0, 2817, 
2825, checkNode(freemind.controller.Controller, freemind.modes.MindMapNode, freemind.modes.attributes.AttributeTableModel, int, java.lang.NumberFormatException), 2.0, 2823, 
2826, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2823, 
2827, load(freemind.main.XMLElement), 1.0, 2823, 
2828, createDesctiption(), 0.0, 2823, 
2830, CompareConditionAdapter(boolean, java.lang.String), 2.0, 2829, 
2831, compareTo(double, java.lang.String, int, int, double, java.lang.NumberFormatException), 1.0, 2829, 
2832, saveAttributes(freemind.main.XMLElement), 1.0, 2829, 
2836, checkNode(freemind.controller.Controller, freemind.modes.MindMapNode, java.lang.NumberFormatException), 2.0, 2834, 
2837, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2834, 
2838, load(freemind.main.XMLElement), 1.0, 2834, 
2839, createDesctiption(java.lang.String), 0.0, 2834, 
2841, checkNode(freemind.controller.Controller, freemind.modes.MindMapNode), 2.0, 2840, 
2842, getListCellRendererComponent(), 0.0, 2840, 
2843, save(freemind.main.XMLElement), 1.0, 2840, 
2845, AttributeExistsCondition(java.lang.String), 1.0, 2844, 
2846, checkNode(freemind.controller.Controller, freemind.modes.MindMapNode, freemind.modes.attributes.AttributeTableModel, int), 2.0, 2844, 
2847, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2844, 
2848, load(freemind.main.XMLElement), 1.0, 2844, 
2849, createDesctiption(java.lang.String), 0.0, 2844, 
2851, NoFilteringCondition(), 0.0, 2850, 
2852, toString(), 0.0, 2850, 
2853, checkNode(freemind.modes.MindMapNode, freemind.controller.Controller), 2.0, 2850, 
2854, getListCellRendererComponent(), 0.0, 2850, 
2855, createCondition(), 0.0, 2850, 
2856, save(freemind.main.XMLElement), 1.0, 2850, 
2859, FileToolBar(freemind.modes.filemode.FileController, javax.swing.JButton), 1.0, 2858, 
2861, FileMapModel(freemind.modes.ModeController, freemind.main.FreeMindMain), 2.0, 2860, 
2863, getLinkRegistry(), 0.0, 2860, 
2864, save(java.io.File), 1.0, 2860, 
2865, destroy(), 0.0, 2860, 
2866, load(java.net.URL), 1.0, 2860, 
2867, isSaved(), 0.0, 2860, 
2868, toString(), 0.0, 2860, 
2869, changeNode(java.lang.String, freemind.modes.MindMapNode), 2.0, 2860, 
2870, setLinkInclinationChanged(), 0.0, 2860, 
2871, getXml(java.io.Writer), 1.0, 2860, 
2872, getFilteredXml(java.io.Writer), 1.0, 2860, 
2874, FileMode(), 0.0, 2873, 
2875, init(freemind.controller.Controller), 1.0, 2873, 
2876, toString(), 0.0, 2873, 
2877, activate(), 0.0, 2873, 
2878, restore(java.lang.String), 1.0, 2873, 
2879, getController(), 0.0, 2873, 
2880, getDefaultModeController(), 0.0, 2873, 
2881, createModeController(), 0.0, 2873, 
2883, add(javax.swing.Action, java.lang.String, javax.swing.JMenuItem), 2.0, 2882, 
2884, FilePopupMenu(freemind.modes.filemode.FileController), 1.0, 2882, 
2887, getStyle(), 0.0, 2885, 
2888, getFile(), 0.0, 2885, 
2889, getColor(), 0.0, 2885, 
2890, toString(java.lang.String), 0.0, 2885, 
2891, getText(), 0.0, 2885, 
2892, hasChildren(), 0.0, 2885, 
2893, childrenFolded(), 0.0, 2885, 
2894, childrenUnfolded(java.lang.String, java.io.File, String[], int, freemind.modes.filemode.FileNodeModel, java.lang.SecurityException), 0.0, 2885, 
2895, isLeaf(), 0.0, 2885, 
2896, getLink(java.net.MalformedURLException), 0.0, 2885, 
2897, isWriteable(), 0.0, 2885, 
2899, FileEdgeModel(freemind.modes.MindMapNode, freemind.main.FreeMindMain), 2.0, 2898, 
2901, FileController(freemind.modes.Mode), 1.0, 2900, 
2902, newModel(freemind.modes.ModeController), 1.0, 2900, 
2903, newNode(freemind.modes.MindMap, java.lang.Object), 2.0, 2900, 
2904, getPopupMenu(), 0.0, 2900, 
2905, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 2900, 
2906, getHookFactory(), 0.0, 2900, 
2907, plainClick(freemind.view.mindmapview.MainView, java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 2900, 
2908, toggleFolded(freemind.modes.MindMapNode), 1.0, 2900, 
2910, CenterAction(), 0.0, 2909, 
2911, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 2909, 
2913, OpenPathAction(), 0.0, 2912, 
2914, actionPerformed(java.io.File, java.lang.String, java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 2912, 
2917, ReducedAttributeTableModelDecorator(freemind.view.mindmapview.attributeview.AttributeView), 1.0, 2916, 
2918, getIndex(), 0.0, 2916, 
2919, getRowCount(), 0.0, 2916, 
2920, getValueAt(int, int), 2.0, 2916, 
2921, isCellEditable(int, int), 2.0, 2916, 
2922, calcRow(int), 1.0, 2916, 
2924, insertRow(int, freemind.modes.attributes.Attribute), 2.0, 2916, 
2925, addRow(freemind.modes.attributes.Attribute), 1.0, 2916, 
2926, removeRow(int), 1.0, 2916, 
2927, stateChanged(javax.swing.event.ChangeEvent), 1.0, 2916, 
2928, rebuildTableModel(int, java.lang.String), 0.0, 2916, 
2929, tableChanged(javax.swing.event.TableModelEvent), 1.0, 2916, 
2930, areAttributesVisible(), 0.0, 2916, 
2932, getOptimalWidth(), 0.0, 2931, 
2933, getInsert(), 0.0, 2931, 
2934, getDelete(), 0.0, 2931, 
2935, getUp(), 0.0, 2931, 
2936, getDown(), 0.0, 2931, 
2937, mouseClicked(java.awt.event.MouseEvent), 1.0, 2931, 
2938, mousePressed(java.awt.event.MouseEvent), 1.0, 2931, 
2939, mouseReleased(java.awt.event.MouseEvent), 1.0, 2931, 
2940, maybeShowPopup(java.awt.event.MouseEvent), 1.0, 2931, 
2941, make(int, freemind.modes.attributes.AttributeTableModel, java.lang.String), 0.0, 2931, 
2942, selectTable(java.awt.Point, java.awt.Component, int, javax.swing.table.JTableHeader, int, int), 2.0, 2931, 
2943, mouseEntered(java.awt.event.MouseEvent), 1.0, 2931, 
2944, mouseExited(java.awt.event.MouseEvent), 1.0, 2931, 
2945, firePopupMenuWillBecomeInvisible(), 0.0, 2931, 
2946, firePopupMenuWillBecomeVisible(), 0.0, 2931, 
2947, getTable(), 0.0, 2931, 
2950, AttributeView(freemind.view.mindmapview.NodeView), 1.0, 2949, 
2951, getAttributeRegistry(), 0.0, 2949, 
2952, getAttributes(), 0.0, 2949, 
2953, syncronizeAttributeView(), 0.0, 2949, 
2954, provideAttributeTable(), 0.0, 2949, 
2955, addListeners(), 0.0, 2949, 
2956, getModeController(), 0.0, 2949, 
2957, addTableModelListeners(freemind.modes.ModeController), 0.0, 2949, 
2958, removeListeners(), 0.0, 2949, 
2959, update(), 0.0, 2949, 
2960, areAttributesVisible(java.lang.String), 0.0, 2949, 
2961, getExtendedAttributeTableModel(), 0.0, 2949, 
2962, setViewType(javax.swing.table.JTableHeader, java.lang.String), 1.0, 2949, 
2963, getCurrentAttributeTableModel(), 0.0, 2949, 
2964, getNode(), 0.0, 2949, 
2965, stateChanged(javax.swing.event.ChangeEvent), 1.0, 2949, 
2966, getNodeView(), 0.0, 2949, 
2967, getMapView(), 0.0, 2949, 
2968, viewRemoved(), 0.0, 2949, 
2969, ancestorMoved(javax.swing.event.AncestorEvent), 1.0, 2949, 
2970, tableChanged(javax.swing.event.TableModelEvent, freemind.view.mindmapview.MapView), 1.0, 2949, 
2971, getViewType(), 0.0, 2949, 
2972, startEditing(), 0.0, 2949, 
2973, startEditingTable(), 0.0, 2949, 
2974, isPopupShown(), 0.0, 2949, 
2975, stopEditing(java.lang.String), 0.0, 2949, 
2977, actionPerformed(java.awt.event.ActionEvent), 1.0, 2976, 
2980, actionPerformed(java.awt.event.ActionEvent), 1.0, 2979, 
2983, actionPerformed(java.awt.event.ActionEvent), 1.0, 2982, 
2986, actionPerformed(java.awt.event.ActionEvent), 1.0, 2985, 
2989, actionPerformed(java.awt.event.ActionEvent), 1.0, 2988, 
2992, run(), 0.0, 2991, 
2995, run(java.awt.Component, java.awt.KeyboardFocusManager), 0.0, 2994, 
2999, paint(java.awt.Graphics, java.awt.Graphics2D, java.awt.geom.AffineTransform), 1.0, 2997, 
3000, getHeight(), 0.0, 2997, 
3001, getWidth(), 0.0, 2997, 
3004, AttributeTableModelDecoratorAdapter(freemind.view.mindmapview.attributeview.AttributeView, freemind.modes.MindMapNode), 1.0, 3003, 
3005, getNode(), 0.0, 3003, 
3006, getColumnCount(), 0.0, 3003, 
3007, getColumnClass(int), 1.0, 3003, 
3008, getColumnName(int), 1.0, 3003, 
3009, getColumnWidth(int), 1.0, 3003, 
3010, setColumnWidth(int, int), 2.0, 3003, 
3011, addListeners(), 0.0, 3003, 
3012, removeListeners(), 0.0, 3003, 
3013, viewRemoved(), 0.0, 3003, 
3014, tableChanged(javax.swing.event.TableModelEvent), 1.0, 3003, 
3015, editingCanceled(), 0.0, 3003, 
3016, areAttributesVisible(), 0.0, 3003, 
3018, ExtendedAttributeTableModelDecorator(freemind.view.mindmapview.attributeview.AttributeView), 1.0, 3017, 
3019, getRowCount(), 0.0, 3017, 
3020, getValueAt(int, int), 2.0, 3017, 
3021, insertRow(int), 1.0, 3017, 
3022, isCellEditable(int, int, int), 2.0, 3017, 
3023, removeRow(int), 1.0, 3017, 
3025, stateChanged(javax.swing.event.ChangeEvent), 1.0, 3017, 
3026, editingCanceled(int), 0.0, 3017, 
3027, areAttributesVisible(), 0.0, 3017, 
3028, moveRowUp(int, freemind.modes.attributes.Attribute), 1.0, 3017, 
3029, moveRowDown(int, freemind.modes.attributes.Attribute), 1.0, 3017, 
3031, AttributeTable(freemind.view.mindmapview.attributeview.AttributeView, int, freemind.modes.MindMapNode, freemind.modes.attributes.AttributeController), 1.0, 3030, 
3032, getCellRenderer(int, int, java.lang.String, int, int), 2.0, 3030, 
3033, getCellEditor(javax.swing.JComboBox, int, int, javax.swing.DefaultCellEditor), 2.0, 3030, 
3035, getPreferredScrollableViewportSize(java.awt.Dimension, float), 0.0, 3030, 
3036, getDefaultComboBoxModel(), 0.0, 3030, 
3038, changeSelectedRowHeight(int, int), 1.0, 3030, 
3039, updateAttributeTable(), 0.0, 3030, 
3040, updateColumnWidths(int, float, int), 0.0, 3030, 
3041, updateRowHeights(int, int, int, float, float, int, int, float), 0.0, 3030, 
3042, getTableHeaderHeight(javax.swing.table.JTableHeader), 0.0, 3030, 
3043, updateFontSize(java.awt.Font, java.awt.Component, float, float, float), 2.0, 3030, 
3044, getZoom(), 0.0, 3030, 
3045, tableChanged(javax.swing.event.TableModelEvent, freemind.view.mindmapview.MapView), 1.0, 3030, 
3046, viewRemoved(), 0.0, 3030, 
3047, removeNotify(), 0.0, 3030, 
3048, getFontSize(), 0.0, 3030, 
3049, setModel(javax.swing.table.TableModel), 1.0, 3030, 
3050, removeListenerFromEditor(javax.swing.JComboBox), 0.0, 3030, 
3051, removeEditor(), 0.0, 3030, 
3052, getAttributeTableModel(), 0.0, 3030, 
3053, getAttributeView(), 0.0, 3030, 
3054, setOptimalColumnWidths(java.awt.Component, int, int, int, int), 0.0, 3030, 
3055, insertRow(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 3030, 
3056, removeRow(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 3030, 
3057, moveRowUp(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 3030, 
3058, moveRowDown(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 3030, 
3059, columnWidthChanged(freemind.modes.attributes.ColumnWidthChangeEvent, freemind.modes.attributes.AttributeTableLayoutModel, int, int, float), 1.0, 3030, 
3061, isVisible(), 0.0, 3030, 
3063, focusGained(java.awt.event.FocusEvent, java.awt.Component, java.awt.Component), 1.0, 3062, 
3064, focusLost(java.awt.event.FocusEvent, java.awt.Component, java.awt.Component, freemind.view.mindmapview.attributeview.AttributeView, java.lang.String), 1.0, 3062, 
3067, run(java.awt.Component, freemind.view.mindmapview.NodeView), 0.0, 3066, 
3070, mouseReleased(java.awt.event.MouseEvent, freemind.view.mindmapview.attributeview.AttributeTable, java.awt.Dimension, javax.swing.table.JTableHeader, freemind.modes.attributes.AttributeTableModel, float, int, javax.swing.JViewport, int, int, java.awt.Dimension), 1.0, 3069, 
3073, AttributeViewScrollPane(freemind.view.mindmapview.attributeview.AttributeTable), 1.0, 3072, 
3074, getPreferredSize(), 0.0, 3072, 
3075, getMaximumSize(), 0.0, 3072, 
3076, isVisible(), 0.0, 3072, 
3080, getTranslatableResourceString(java.lang.String, java.lang.String), 1.0, 3078, 
3081, createBufferedImage(java.awt.image.BufferedImage, java.awt.Graphics, java.awt.Rectangle), 0.0, 3078, 
3086, ImageFilter(java.lang.String, java.lang.String), 2.0, 3085, 
3087, accept(java.io.File, java.lang.String), 1.0, 3085, 
3088, getDescription(), 0.0, 3085, 
3090, getName(), 0.0, 3089, 
3091, setName(java.lang.String), 1.0, 3089, 
3092, setProperties(java.util.Properties), 1.0, 3089, 
3093, getResourceString(java.lang.String), 1.0, 3089, 
3094, setController(freemind.modes.ModeController), 1.0, 3089, 
3095, getPluginBaseClass(), 0.0, 3089, 
3096, setPluginBaseClass(freemind.extensions.MindMapHook.PluginBaseClassSearcher), 1.0, 3089, 
3097, startupMapHook(), 0.0, 3089, 
3098, shutdownMapHook(), 0.0, 3089, 
3100, getPluginBaseObject(), 0.0, 3099, 
3102, ModeControllerHookAdapter(), 0.0, 3101, 
3104, getContent(), 0.0, 3103, 
3105, setContent(java.lang.String), 1.0, 3103, 
3106, setContentUndoable(java.lang.String), 1.0, 3103, 
3107, setContentUndoable(java.lang.String, java.lang.String), 2.0, 3103, 
3110, isSingleton(), 0.0, 3109, 
3111, isPermanent(), 0.0, 3109, 
3113, getAllInstanciationMethods(java.util.HashMap), 0.0, 3109, 
3117, isUndoable(), 0.0, 3109, 
3130, addChilds(java.util.Collection, freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 2.0, 3129, 
3135, PermanentNodeHookSubstituteUnknown(java.lang.String), 1.0, 3134, 
3136, loadFrom(freemind.main.XMLElement), 1.0, 3134, 
3137, save(freemind.main.XMLElement, java.util.Iterator, freemind.main.XMLElement), 1.0, 3134, 
3138, getName(), 0.0, 3134, 
3141, HookAdapter(), 0.0, 3140, 
3142, getName(), 0.0, 3140, 
3143, setName(java.lang.String), 1.0, 3140, 
3144, startupMapHook(), 0.0, 3140, 
3145, shutdownMapHook(), 0.0, 3140, 
3146, getController(), 0.0, 3140, 
3147, getProperties(), 0.0, 3140, 
3148, setProperties(java.util.Properties), 1.0, 3140, 
3149, setController(freemind.modes.ModeController), 1.0, 3140, 
3150, getResourceString(java.lang.String, java.lang.String), 1.0, 3140, 
3151, getResource(java.lang.String), 1.0, 3140, 
3152, getPluginBaseClass(), 0.0, 3140, 
3153, setPluginBaseClass(freemind.extensions.MindMapHook.PluginBaseClassSearcher), 1.0, 3140, 
3155, getPossibleNodeHooks(), 0.0, 3154, 
3156, getPossibleModeControllerHooks(), 0.0, 3154, 
3157, createModeControllerHook(java.lang.String), 1.0, 3154, 
3158, createNodeHook(java.lang.String), 1.0, 3154, 
3159, getHookInNode(java.lang.String, freemind.modes.MindMapNode), 2.0, 3154, 
3160, getHookMenuPositions(java.lang.String), 1.0, 3154, 
3161, getInstanciationMethod(java.lang.String), 1.0, 3154, 
3162, getRegistrations(), 0.0, 3154, 
3163, registerRegistrationContainer(freemind.extensions.HookRegistration, freemind.extensions.HookFactory.RegistrationContainer), 2.0, 3154, 
3164, deregisterAllRegistrationContainer(), 0.0, 3154, 
3165, getPluginBaseClass(java.lang.String), 1.0, 3154, 
3167, RegistrationContainer(), 0.0, 3166, 
3169, ImportWizard(freemind.main.FreeMindMain), 1.0, 3168, 
3170, buildClassList(java.lang.String, java.lang.String, java.lang.String, java.util.HashSet, java.lang.String, java.lang.String, java.io.File, java.util.StringTokenizer, java.io.IOException), 0.0, 3168, 
3171, addClassesFromZip(java.lang.String, java.io.File, java.util.Vector, java.util.Enumeration, java.util.zip.ZipFile, java.util.zip.ZipEntry, java.lang.Exception), 2.0, 3168, 
3172, isInteresting(java.lang.String, java.lang.String, int), 1.0, 3168, 
3175, setMap(freemind.modes.MindMap), 1.0, 3174, 
3176, setNode(freemind.modes.MindMapNode), 1.0, 3174, 
3177, invoke(freemind.modes.MindMapNode), 1.0, 3174, 
3179, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 3178, 
3180, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 3178, 
3181, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 3178, 
3182, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 3178, 
3183, onUpdateNodeHook(), 0.0, 3178, 
3184, onAddChild(freemind.modes.MindMapNode), 1.0, 3178, 
3185, onNewChild(freemind.modes.MindMapNode), 1.0, 3178, 
3186, onAddChildren(freemind.modes.MindMapNode), 1.0, 3178, 
3187, onRemoveChild(freemind.modes.MindMapNode), 1.0, 3178, 
3188, onRemoveChildren(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 3178, 
3189, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 3178, 
3190, save(freemind.main.XMLElement), 1.0, 3178, 
3191, loadFrom(freemind.main.XMLElement), 1.0, 3178, 
3194, toString(), 0.0, 3192, 
3195, getInstanciationMethod(java.util.HashMap, java.util.Iterator, java.lang.String), 0.0, 3192, 
3196, getModes(), 0.0, 3192, 
3197, getBaseClass(), 0.0, 3192, 
3198, getName(), 0.0, 3192, 
3199, getClassName(), 0.0, 3192, 
3200, getDocumentation(), 0.0, 3192, 
3201, getIconPath(), 0.0, 3192, 
3202, getKeyStroke(), 0.0, 3192, 
3203, getProperties(), 0.0, 3192, 
3204, isSelectable(), 0.0, 3192, 
3207, getFromResourceIfNecessary(java.lang.String), 1.0, 3205, 
3208, getFromPropertiesIfNecessary(java.lang.String), 1.0, 3205, 
3209, getPluginDirectory(), 0.0, 3205, 
3210, getPluginBase(), 0.0, 3205, 
3211, getPluginClasspath(java.lang.Object, freemind.controller.actions.generated.instance.PluginClasspath, java.util.Iterator, java.util.Vector), 0.0, 3205, 
3212, getPluginClassLoader(java.util.List, java.lang.ClassLoader), 0.0, 3205, 
3213, createPluginClasspathString(java.lang.String, java.util.List, java.util.Iterator, freemind.controller.actions.generated.instance.PluginClasspath), 1.0, 3205, 
3214, getClassLoader(java.lang.String, URL[], java.util.List, java.lang.ClassLoader, int, java.util.Iterator, java.io.File, freemind.controller.actions.generated.instance.PluginClasspath, java.lang.String, java.net.MalformedURLException), 1.0, 3205, 
3216, NodeHookAdapter(), 0.0, 3215, 
3217, invoke(freemind.modes.MindMapNode), 1.0, 3215, 
3218, getNode(), 0.0, 3215, 
3219, setNode(freemind.modes.MindMapNode), 1.0, 3215, 
3220, getMap(), 0.0, 3215, 
3221, nodeChanged(freemind.modes.MindMapNode), 1.0, 3215, 
3222, setMap(freemind.modes.MindMap), 1.0, 3215, 
3224, HookFactoryAdapter(), 0.0, 3223, 
3225, getHookInNode(freemind.modes.MindMapNode, java.lang.String, java.util.Iterator, freemind.extensions.PermanentNodeHook), 2.0, 3223, 
3226, registerRegistrationContainer(freemind.extensions.HookFactory.RegistrationContainer, freemind.extensions.HookRegistration), 2.0, 3223, 
3227, deregisterAllRegistrationContainer(), 0.0, 3223, 
3230, register(), 0.0, 3229, 
3231, deRegister(), 0.0, 3229, 
3234, getClassName(), 0.0, 3232, 
3235, getIsPluginBase(), 0.0, 3232, 
3236, getListPluginModeList(), 0.0, 3232, 
3238, PermanentNodeHookAdapter(), 0.0, 3237, 
3239, shutdownMapHook(), 0.0, 3237, 
3240, onUpdateNodeHook(), 0.0, 3237, 
3241, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 3237, 
3242, onAddChild(freemind.modes.MindMapNode), 1.0, 3237, 
3243, onNewChild(freemind.modes.MindMapNode), 1.0, 3237, 
3244, onRemoveChild(freemind.modes.MindMapNode), 1.0, 3237, 
3245, save(freemind.main.XMLElement, java.lang.String), 1.0, 3237, 
3246, loadFrom(freemind.main.XMLElement), 1.0, 3237, 
3247, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 3237, 
3248, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 3237, 
3249, onAddChildren(freemind.modes.MindMapNode), 1.0, 3237, 
3250, loadNameValuePairs(freemind.main.XMLElement, java.util.HashMap, freemind.main.XMLElement, java.lang.String, java.util.Iterator), 1.0, 3237, 
3251, saveNameValuePairs(freemind.main.XMLElement, java.util.HashMap, java.util.Iterator, java.lang.String, java.lang.Object, freemind.main.XMLElement), 2.0, 3237, 
3252, onRemoveChildren(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 3237, 
3253, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 3237, 
3254, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 3237, 
3256, setContent(java.lang.String, java.lang.String), 2.0, 3255, 
3257, getContent(java.lang.String), 1.0, 3255, 
3258, setContent(java.lang.String), 1.0, 3255, 
3259, getContent(), 0.0, 3255, 
3260, setContentUndoable(java.lang.String, java.lang.String), 2.0, 3255, 
3263, EncryptNode(), 0.0, 3262, 
3264, invoke(freemind.modes.MindMapNode, java.lang.String), 1.0, 3262, 
3265, newEncryptedMap(freemind.modes.mindmapmode.EncryptedMindMapNode, freemind.modes.ModeController, freemind.modes.mindmapmode.MindMapController, java.lang.StringBuffer, freemind.modes.MapAdapter), 0.0, 3262, 
3266, encrypt(freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapController, java.lang.StringBuffer, freemind.modes.MindMapNode, java.lang.Exception), 1.0, 3262, 
3267, getUsersPassword(freemind.modes.common.dialogs.EnterPasswordDialog, java.lang.StringBuffer), 0.0, 3262, 
3268, toggleCryptState(freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapController, freemind.modes.mindmapmode.EncryptedMindMapNode, freemind.view.mindmapview.MapView), 1.0, 3262, 
3269, doPasswordCheckAndDecryptNode(freemind.modes.mindmapmode.EncryptedMindMapNode, freemind.modes.common.dialogs.EnterPasswordDialog), 1.0, 3262, 
3271, Registration(freemind.modes.ModeController, freemind.modes.MindMap), 2.0, 3270, 
3272, register(), 0.0, 3270, 
3273, deRegister(), 0.0, 3270, 
3274, isEnabled(boolean, boolean, javax.swing.JMenuItem, javax.swing.Action, freemind.modes.mindmapmode.EncryptedMindMapNode, java.lang.String), 2.0, 3270, 
3276, AutomaticLayout(), 0.0, 3275, 
3277, setStyle(int, int, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.Pattern), 1.0, 3275, 
3278, depth(freemind.modes.MindMapNode), 1.0, 3275, 
3279, onAddChildren(freemind.modes.MindMapNode), 1.0, 3275, 
3280, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 3275, 
3281, onUpdateNodeHook(), 0.0, 3275, 
3282, invoke(freemind.modes.MindMapNode), 1.0, 3275, 
3283, reloadPatterns(java.lang.String), 0.0, 3275, 
3284, setStyleRecursive(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 3275, 
3286, createNode(java.lang.Object, freemind.modes.MindMap, freemind.modes.mindmapmode.EncryptedMindMapNode), 2.0, 3285, 
3289, Registration(freemind.modes.ModeController, freemind.modes.MindMap), 2.0, 3288, 
3290, register(), 0.0, 3288, 
3291, deRegister(), 0.0, 3288, 
3296, StylePropertyTranslator(freemind.modes.mindmapmode.MindMapController), 1.0, 3295, 
3297, getText(java.lang.String), 1.0, 3295, 
3300, getDescription(), 0.0, 3298, 
3301, getLabel(), 0.0, 3298, 
3302, setValue(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Pattern), 1.0, 3298, 
3303, getValue(), 0.0, 3298, 
3304, layout(com.jgoodies.forms.builder.DefaultFormBuilder, freemind.common.TextTranslator, javax.swing.JLabel), 2.0, 3298, 
3305, actionPerformed(freemind.controller.actions.generated.instance.Pattern, java.awt.event.ActionEvent, accessories.plugins.dialogs.ChooseFormatPopupDialog, freemind.controller.actions.generated.instance.Pattern), 1.0, 3298, 
3306, getPatternFromString(), 0.0, 3298, 
3307, setEnabled(boolean), 1.0, 3298, 
3310, getDescription(), 0.0, 3308, 
3311, getLabel(), 0.0, 3308, 
3312, setValue(java.lang.String, freemind.controller.actions.generated.instance.Patterns, int, freemind.controller.actions.generated.instance.Pattern, java.util.Iterator, accessories.plugins.AutomaticLayout.StylePropertyTranslator), 1.0, 3308, 
3313, getValue(), 0.0, 3308, 
3314, layout(com.jgoodies.forms.builder.DefaultFormBuilder, freemind.common.TextTranslator, javax.swing.JLabel), 2.0, 3308, 
3315, getPatternsFromString(), 0.0, 3308, 
3316, setEnabled(boolean), 1.0, 3308, 
3317, valueChanged(freemind.controller.actions.generated.instance.Pattern, javax.swing.event.ListSelectionEvent, accessories.plugins.dialogs.ChooseFormatPopupDialog, javax.swing.JList, freemind.controller.actions.generated.instance.Patterns), 1.0, 3308, 
3319, chooseFile(java.lang.String), 0.0, 3318, 
3320, ExportWithXSLT(), 0.0, 3318, 
3321, startupMapHook(freemind.modes.MindMap, freemind.modes.ModeController, java.io.File), 0.0, 3318, 
3322, transform(boolean, java.io.File, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Exception), 1.0, 3318, 
3323, copyMap(java.lang.String, java.io.BufferedWriter, boolean), 1.0, 3318, 
3324, copyIcons(boolean, java.lang.String, java.lang.String), 1.0, 3318, 
3325, createImageFromMap(java.lang.String, java.awt.image.BufferedImage, java.io.FileOutputStream, java.io.IOException), 1.0, 3318, 
3326, copyIconsToDirectory(String[], java.lang.String, java.lang.String, int, freemind.modes.MindIcon, java.io.File, java.util.Vector), 1.0, 3318, 
3328, createDirectory(java.lang.String, java.io.File), 1.0, 3318, 
3330, getMapXml(java.io.StringWriter), 0.0, 3318, 
3331, getAreaCode(java.lang.String, boolean, freemind.modes.MindMapNode, accessories.plugins.util.html.ClickableImageCreator), 1.0, 3318, 
3332, export(java.io.File, accessories.plugins.util.xslt.ExportDialog), 1.0, 3318, 
3334, isTransformResultWithoutError(), 0.0, 3318, 
3336, run(), 0.0, 3335, 
3339, NodeNoteRegistration(freemind.modes.MindMap, freemind.modes.ModeController), 2.0, 3338, 
3340, shouldUseSplitPane(), 0.0, 3338, 
3341, register(javax.swing.Action, java.lang.String), 0.0, 3338, 
3342, deRegister(), 0.0, 3338, 
3343, showNotesPanel(java.awt.Font, java.lang.String, accessories.plugins.NodeNoteRegistration.SouthPanel), 0.0, 3338, 
3344, hideNotesPanel(), 0.0, 3338, 
3345, setStateIcon(boolean, boolean, freemind.modes.MindMapNode), 2.0, 3338, 
3346, act(freemind.controller.actions.generated.instance.XmlAction, java.lang.String, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.EditNoteToNodeAction, java.lang.String), 1.0, 3338, 
3347, getDoActionClass(), 0.0, 3338, 
3348, changeNoteText(java.lang.String, freemind.modes.MindMapNode), 2.0, 3338, 
3349, getMindMapController(), 0.0, 3338, 
3350, getNoteViewerComponent(), 0.0, 3338, 
3351, getHtmlEditorPanel(), 0.0, 3338, 
3352, getSplitPane(), 0.0, 3338, 
3353, isSelected(javax.swing.Action, javax.swing.JMenuItem), 2.0, 3338, 
3354, getDocumentText(java.lang.String), 0.0, 3338, 
3355, normalizeString(java.lang.String), 1.0, 3338, 
3357, AutomaticLayoutPropertyContributor(freemind.modes.mindmapmode.MindMapController), 1.0, 3356, 
3358, getControls(freemind.common.TextTranslator, java.util.Vector), 1.0, 3356, 
3360, getString(java.lang.String, java.lang.String), 1.0, 3359, 
3363, ApplyFormatPlugin(), 0.0, 3362, 
3364, invoke(freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.MindMapNode, accessories.plugins.dialogs.ChooseFormatPopupDialog, java.util.Iterator, java.util.List, freemind.controller.actions.generated.instance.Pattern), 1.0, 3362, 
3366, SouthPanel(), 0.0, 3365, 
3369, changedUpdate(javax.swing.event.DocumentEvent), 1.0, 3368, 
3370, docEvent(java.lang.String, java.lang.String), 0.0, 3368, 
3371, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 3368, 
3372, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 3368, 
3373, setNode(freemind.modes.MindMapNode), 1.0, 3368, 
3376, NotesManager(), 0.0, 3375, 
3377, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 3375, 
3378, onSelectHook(freemind.view.mindmapview.NodeView, javax.swing.text.html.HTMLDocument, java.lang.String, java.lang.Exception), 1.0, 3375, 
3379, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 3375, 
3380, onSaveNode(boolean, freemind.modes.MindMapNode, int, int, java.lang.String, java.lang.String, javax.swing.JEditorPane, int), 1.0, 3375, 
3381, onCreateNodeHook(freemind.modes.MindMapNode), 1.0, 3375, 
3382, onPreDeleteNode(freemind.modes.MindMapNode), 1.0, 3375, 
3383, onPostDeleteNode(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 3375, 
3385, actionPerformed(java.awt.event.ActionEvent), 1.0, 3384, 
3388, actionPerformed(java.awt.event.ActionEvent, java.lang.Exception), 1.0, 3387, 
3391, accept(java.io.File, java.lang.String), 2.0, 3390, 
3394, ChangeNodeLevelAction(), 0.0, 3393, 
3395, invoke(java.util.List, freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.List, freemind.modes.MindMapNode, boolean, freemind.modes.MindMapNode, int, java.util.Vector, freemind.modes.MindMapNode, int, java.lang.String, int, java.util.Iterator, java.util.Iterator, freemind.modes.MindMapNode, java.awt.datatransfer.Transferable, freemind.modes.MindMapNode, boolean, java.lang.String), 1.0, 3393, 
3396, select(java.lang.String, java.util.List, java.util.List, java.lang.String, freemind.modes.MindMapNode, java.util.Iterator), 2.0, 3393, 
3398, RevisionPlugin(), 0.0, 3397, 
3399, invoke(freemind.modes.MindMapNode), 1.0, 3397, 
3400, shutdownMapHook(), 0.0, 3397, 
3401, executeAction(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.EditNodeAction), 1.0, 3397, 
3402, startTransaction(java.lang.String), 1.0, 3397, 
3403, endTransaction(java.lang.String), 1.0, 3397, 
3405, NodeHistory(), 0.0, 3404, 
3406, invoke(accessories.plugins.NodeHistory.NodeHolder, freemind.view.MapModule, boolean, freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.controller.Controller, boolean, freemind.view.MapModule, freemind.modes.mindmapmode.MindMapController, accessories.plugins.NodeHistory.Registration, java.lang.String), 1.0, 3404, 
3407, printVector(int, accessories.plugins.NodeHistory.NodeHolder, java.lang.StringBuffer, java.util.Iterator), 0.0, 3404, 
3409, NodeHolder(freemind.modes.mindmapmode.MindMapController, freemind.modes.MindMapNode, freemind.view.MapModule), 2.0, 3408, 
3410, getNode(freemind.controller.Controller, freemind.modes.ModeController), 1.0, 3408, 
3411, getModeController(freemind.modes.ModeController, freemind.controller.Controller, freemind.view.MapModule), 1.0, 3408, 
3412, getMapModule(freemind.view.MapModule, freemind.controller.Controller, java.util.Map, java.util.Iterator, java.lang.String), 1.0, 3408, 
3413, isIdentical(freemind.modes.mindmapmode.MindMapController, freemind.modes.MindMapNode, java.lang.String, freemind.view.MapModule), 2.0, 3408, 
3414, getModuleGivenModeController(freemind.view.MapModule, freemind.modes.mindmapmode.MindMapController, java.util.Map.Entry, java.util.Iterator), 1.0, 3408, 
3416, Registration(freemind.modes.MindMap, freemind.modes.ModeController), 2.0, 3415, 
3417, register(), 0.0, 3415, 
3418, deRegister(), 0.0, 3415, 
3419, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 3415, 
3420, onSelectHook(freemind.view.mindmapview.NodeView, int), 1.0, 3415, 
3421, onSaveNode(freemind.modes.MindMapNode), 1.0, 3415, 
3422, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 3415, 
3423, isEnabled(javax.swing.Action, javax.swing.JMenuItem, java.lang.String), 2.0, 3415, 
3425, run(freemind.modes.ModeController, boolean, freemind.view.mindmapview.NodeView), 0.0, 3424, 
3428, ExportToOoWriter(), 0.0, 3427, 
3429, startupMapHook(java.io.File, java.io.IOException), 0.0, 3427, 
3430, exportToOoWriter(java.io.File, java.lang.String, java.io.StringWriter), 1.0, 3427, 
3433, copyFromResource(java.lang.String, java.io.OutputStream, java.io.InputStream, java.net.URL, java.lang.Exception), 2.0, 3427, 
3435, RemoveNote(), 0.0, 3434, 
3436, invoke(freemind.modes.MindMapNode, int, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 3434, 
3437, removeNote(freemind.modes.MindMapNode), 1.0, 3434, 
3439, Registration(freemind.modes.MindMap, freemind.modes.ModeController), 2.0, 3438, 
3440, isEnabled(boolean, javax.swing.JMenuItem, javax.swing.Action, freemind.modes.MindMapNode, java.util.Iterator), 2.0, 3438, 
3441, deRegister(), 0.0, 3438, 
3442, register(), 0.0, 3438, 
3444, NewParentNode(), 0.0, 3443, 
3445, invoke(boolean, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.List, freemind.modes.MindMapNode, java.util.Vector, freemind.modes.MindMapNode, freemind.view.mindmapview.MapView, java.util.List, java.util.Vector, java.util.Iterator, java.awt.datatransfer.Transferable, freemind.modes.MindMapNode), 1.0, 3443, 
3449, IconSelectionPlugin(), 0.0, 3448, 
3450, invoke(javax.swing.Action, java.util.Vector, freemind.main.FreeMind, freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapController, java.util.Vector, freemind.view.mindmapview.MapView, int, freemind.view.mindmapview.NodeView, freemind.modes.common.dialogs.IconSelectionPopupDialog), 1.0, 3448, 
3452, FormatPaste(), 0.0, 3451, 
3453, invoke(freemind.modes.MindMapNode, java.lang.String), 1.0, 3451, 
3454, pasteFormat(freemind.modes.MindMapNode), 1.0, 3451, 
3455, copyFormat(freemind.modes.MindMapNode), 1.0, 3451, 
3457, CreationModificationPlugin(), 0.0, 3456, 
3458, setStyle(freemind.modes.MindMapNode, java.text.MessageFormat, java.lang.String, Object[]), 1.0, 3456, 
3459, shutdownMapHook(), 0.0, 3456, 
3460, removeToolTipRecursively(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 3456, 
3461, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 3456, 
3462, onUpdateNodeHook(), 0.0, 3456, 
3463, invoke(freemind.modes.MindMapNode), 1.0, 3456, 
3464, setStyleRecursive(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 3456, 
3465, onAddChildren(freemind.modes.MindMapNode), 1.0, 3456, 
3466, onNewChild(freemind.modes.MindMapNode), 1.0, 3456, 
3468, SortNodes(), 0.0, 3467, 
3469, invoke(freemind.modes.MindMapNode, java.awt.datatransfer.Transferable, freemind.modes.MindMapNode, java.util.Vector, java.util.Iterator, java.util.Vector), 1.0, 3467, 
3471, compare(java.lang.Object, java.lang.Object, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.lang.String, java.lang.String), 2.0, 3470, 
3474, FitToPage(), 0.0, 3473, 
3475, startupMapHook(), 0.0, 3473, 
3477, scroll(java.awt.Rectangle, java.awt.Rectangle), 0.0, 3473, 
3478, zoom(double, double, java.awt.Dimension, double, javax.swing.JViewport, javax.swing.JScrollPane, java.awt.Rectangle), 0.0, 3473, 
3480, run(), 0.0, 3479, 
3483, BlinkingNodeHook(), 0.0, 3482, 
3484, invoke(freemind.modes.MindMapNode), 1.0, 3482, 
3485, shutdownMapHook(), 0.0, 3482, 
3487, TimerColorChanger(), 0.0, 3486, 
3488, run(), 0.0, 3486, 
3490, run(), 0.0, 3489, 
3493, visit(int, freemind.view.mindmapview.NodeView, java.awt.Color), 1.0, 3492, 
3496, FormularEditor(), 0.0, 3495, 
3497, loadFrom(freemind.main.XMLElement, freemind.main.XMLElement, int, java.lang.String), 1.0, 3495, 
3498, save(freemind.main.XMLElement, java.util.Iterator, accessories.plugins.FormularEditor.FormularEntity, freemind.main.XMLElement), 1.0, 3495, 
3499, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 3495, 
3500, shutDownDisplay(freemind.main.FreeMindMain), 0.0, 3495, 
3501, onSelectHook(freemind.view.mindmapview.NodeView, accessories.plugins.FormularEditor.FormularEntity, java.awt.GridBagLayout, int, freemind.main.FreeMindMain, java.util.Iterator), 1.0, 3495, 
3502, shutdownMapHook(), 0.0, 3495, 
3504, getValue(), 0.0, 3503, 
3505, setValue(java.lang.String), 1.0, 3503, 
3506, getLabel(), 0.0, 3503, 
3507, setLabel(java.lang.String), 1.0, 3503, 
3510, save(freemind.main.XMLElement), 1.0, 3503, 
3511, getDisplayLabel(), 0.0, 3503, 
3512, FormularEntity(freemind.main.XMLElement), 1.0, 3503, 
3513, getType(), 0.0, 3503, 
3514, setDisplayLabel(java.lang.String), 1.0, 3503, 
3517, StringEntity(freemind.main.XMLElement), 1.0, 3515, 
3519, FormatNewNodes(freemind.modes.MindMap, freemind.modes.ModeController), 2.0, 3518, 
3520, register(), 0.0, 3518, 
3521, deRegister(), 0.0, 3518, 
3522, executeAction(freemind.controller.actions.generated.instance.XmlAction), 1.0, 3518, 
3523, detectFormatChanges(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.XmlAction, java.util.Iterator), 1.0, 3518, 
3524, startTransaction(java.lang.String), 1.0, 3518, 
3525, endTransaction(java.lang.String), 1.0, 3518, 
3526, filterAction(freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.controller.actions.generated.instance.NewNodeAction, freemind.controller.actions.generated.instance.FormatNodeAction, freemind.controller.actions.generated.instance.NodeAction, freemind.modes.mindmapmode.actions.xml.ActionPair, java.util.Iterator), 1.0, 3518, 
3528, SaveAll(), 0.0, 3527, 
3529, startupMapHook(freemind.view.MapModule, freemind.controller.Controller, java.util.Vector, freemind.view.MapModule, java.util.Map, java.util.Iterator), 0.0, 3527, 
3530, getMapModules(), 0.0, 3527, 
3532, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 3531, 
3533, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 3531, 
3534, changedUpdate(javax.swing.event.DocumentEvent, java.lang.String, javax.swing.text.BadLocationException), 1.0, 3531, 
3537, CheckBoxEntity(freemind.main.XMLElement), 1.0, 3536, 
3540, startupMapHook(javax.swing.JSplitPane, int, java.lang.String, accessories.plugins.NodeNoteRegistration), 0.0, 3539, 
3541, getSplitPaneToScreen(javax.swing.JSplitPane, accessories.plugins.NodeNoteRegistration), 1.0, 3539, 
3542, openSplitPane(int, int, javax.swing.JSplitPane, int), 2.0, 3539, 
3544, run(), 0.0, 3543, 
3547, itemStateChanged(java.awt.event.ItemEvent), 1.0, 3546, 
3551, ChoiceEntity(freemind.main.XMLElement, freemind.main.XMLElement, int), 1.0, 3549, 
3552, save(freemind.main.XMLElement, int, freemind.main.XMLElement), 1.0, 3549, 
3554, ChoiceElement(freemind.main.XMLElement), 1.0, 3553, 
3555, save(freemind.main.XMLElement), 1.0, 3553, 
3557, itemStateChanged(java.awt.event.ItemEvent), 1.0, 3556, 
3560, ExportToImage(), 0.0, 3559, 
3561, startupMapHook(java.awt.image.BufferedImage, java.lang.String), 0.0, 3559, 
3565, SplitNode(), 0.0, 3564, 
3566, invoke(freemind.modes.MindMapNode, java.util.List, java.util.ListIterator, freemind.modes.MindMapNode), 1.0, 3564, 
3567, splitNode(String[], freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.lang.String, int, freemind.modes.MindMapNode, int, freemind.modes.mindmapmode.MindMapController, int, java.lang.String), 1.0, 3564, 
3568, splitNode(int, java.io.StringWriter, javax.swing.text.html.HTMLDocument, java.lang.String, int, String[], java.io.StringReader, int, javax.swing.text.Element, javax.swing.text.Element, int, java.lang.String, int, java.lang.String, javax.swing.text.html.HTMLEditorKit, java.io.IOException), 1.0, 3564, 
3569, getParentElement(javax.swing.text.Element, javax.swing.text.html.HTMLDocument, javax.swing.text.Element), 1.0, 3564, 
3571, run(freemind.view.mindmapview.MapView), 0.0, 3570, 
3574, ImportMindmanagerFiles(), 0.0, 3573, 
3575, startupMapHook(java.lang.String, java.awt.Container, int, java.io.File, javax.swing.JFileChooser, java.io.File), 0.0, 3573, 
3576, importMindmanagerFile(java.io.File, java.io.File, java.util.zip.ZipInputStream, java.lang.String, java.util.zip.ZipEntry, java.net.URL, java.io.InputStream, java.lang.String, java.io.FileWriter, freemind.main.XMLParseException), 1.0, 3573, 
3577, transForm(java.io.InputStream, java.io.StringWriter, javax.xml.transform.Source, javax.xml.transform.Result, javax.xml.transform.Transformer, javax.xml.transform.Source, javax.xml.transform.TransformerFactory, java.lang.Exception), 2.0, 3573, 
3579, ManagePatterns(), 0.0, 3578, 
3580, startupMapHook(java.io.File, accessories.plugins.dialogs.ManagePatternsPopupDialog, freemind.main.FreeMind, java.lang.Exception), 0.0, 3578, 
3582, UnfoldAll(), 0.0, 3581, 
3583, invoke(freemind.modes.MindMapNode, boolean, java.lang.String, java.lang.String), 1.0, 3581, 
3584, unfoldOneStage(freemind.modes.MindMapNode, int), 1.0, 3581, 
3585, foldOneStage(freemind.modes.MindMapNode), 1.0, 3581, 
3586, foldAll(freemind.modes.MindMapNode, java.util.Iterator), 1.0, 3581, 
3587, unfoldAll(freemind.modes.MindMapNode, java.util.Iterator), 1.0, 3581, 
3588, foldLastBranches(boolean, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.Iterator), 1.0, 3581, 
3589, setFolded(freemind.modes.MindMapNode, boolean), 2.0, 3581, 
3590, unfoldStageN(freemind.modes.MindMapNode, int, int, java.util.Iterator), 2.0, 3581, 
3591, foldStageN(freemind.modes.MindMapNode, int, java.util.Iterator, int), 2.0, 3581, 
3592, getMinDepth(int, int, freemind.modes.MindMapNode, java.util.Iterator), 1.0, 3581, 
3593, getMaxDepth(int, int, freemind.modes.MindMapNode, java.util.Iterator), 1.0, 3581, 
3594, depth(freemind.modes.MindMapNode), 1.0, 3581, 
3596, Registration(freemind.modes.MindMap, freemind.modes.ModeController), 2.0, 3595, 
3597, register(), 0.0, 3595, 
3598, deRegister(), 0.0, 3595, 
3599, handleMouseWheelEvent(java.awt.event.MouseWheelEvent, freemind.modes.MindMapNode), 1.0, 3595, 
3601, shutdownMapHook(freemind.modes.MindMapNode), 0.0, 3600, 
3602, removeIcons(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 3600, 
3603, HierarchicalIcons(), 0.0, 3600, 
3604, setStyle(boolean, freemind.modes.MindMapNode, java.util.TreeSet, freemind.modes.MindIcon, java.util.Iterator, freemind.view.mindmapview.MultipleImage, java.util.TreeSet, freemind.modes.MindMapNode, java.lang.String), 1.0, 3600, 
3606, onAddChildren(freemind.modes.MindMapNode), 1.0, 3600, 
3607, onRemoveChildren(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 3600, 
3608, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 3600, 
3609, onUpdateNodeHook(), 0.0, 3600, 
3610, invoke(freemind.modes.MindMapNode), 1.0, 3600, 
3611, gatherLeavesAndSetStyle(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 3600, 
3612, gatherLeavesAndSetParentsStyle(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 3600, 
3613, setStyleRecursive(freemind.modes.MindMapNode), 1.0, 3600, 
3616, BrowseHookFactory(), 0.0, 3615, 
3617, getPossibleNodeHooks(), 0.0, 3615, 
3618, getPossibleModeControllerHooks(), 0.0, 3615, 
3619, createModeControllerHook(java.lang.String), 1.0, 3615, 
3620, createNodeHook(freemind.extensions.NodeHook, java.lang.String), 1.0, 3615, 
3621, getHookMenuPositions(java.lang.String), 1.0, 3615, 
3622, getInstanciationMethod(java.lang.String), 1.0, 3615, 
3623, getRegistrations(), 0.0, 3615, 
3624, getPluginBaseClass(java.lang.String), 1.0, 3615, 
3626, BrowseReminderHook(), 0.0, 3625, 
3627, nodeRefresh(freemind.modes.MindMapNode), 1.0, 3625, 
3630, BrowseCloudModel(freemind.modes.MindMapNode, freemind.main.FreeMindMain), 2.0, 3629, 
3631, save(), 0.0, 3629, 
3633, BrowseNodeModel(freemind.modes.MindMap, freemind.main.FreeMindMain), 2.0, 3632, 
3635, save(), 0.0, 3632, 
3636, isWriteable(), 0.0, 3632, 
3638, BrowseXMLElement(freemind.modes.ModeController), 1.0, 3637, 
3640, createAnotherElement(), 0.0, 3637, 
3641, createNodeAdapter(freemind.main.FreeMindMain, java.lang.String), 2.0, 3637, 
3642, createEdgeAdapter(freemind.modes.NodeAdapter, freemind.main.FreeMindMain), 2.0, 3637, 
3643, createCloudAdapter(freemind.modes.NodeAdapter, freemind.main.FreeMindMain), 2.0, 3637, 
3645, createEncryptedNode(java.lang.String, freemind.modes.NodeAdapter), 1.0, 3637, 
3647, BrowseEdgeModel(freemind.main.FreeMindMain, freemind.modes.MindMapNode), 2.0, 3646, 
3648, save(), 0.0, 3646, 
3649, setColor(java.awt.Color), 1.0, 3646, 
3650, setStyle(java.lang.String), 1.0, 3646, 
3652, NodeNoteViewer(freemind.modes.ControllerAdapter), 1.0, 3651, 
3653, getNoteViewerComponent(java.lang.String), 1.0, 3651, 
3654, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 3651, 
3655, onSelectHook(freemind.view.mindmapview.NodeView, java.lang.String), 1.0, 3651, 
3656, onSaveNode(freemind.modes.MindMapNode), 1.0, 3651, 
3657, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 3651, 
3658, setStateIcon(boolean, freemind.modes.MindMapNode), 2.0, 3651, 
3660, add(javax.swing.Action, java.lang.String, javax.swing.JMenuItem), 2.0, 3659, 
3661, BrowsePopupMenu(freemind.modes.browsemode.BrowseController), 1.0, 3659, 
3663, BrowseController(freemind.modes.Mode), 1.0, 3662, 
3664, newModel(freemind.modes.ModeController), 1.0, 3662, 
3665, plainClick(freemind.view.mindmapview.MainView, java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 3662, 
3666, doubleClick(), 0.0, 3662, 
3667, newNode(freemind.modes.MindMap, java.lang.Object), 2.0, 3662, 
3668, getPopupMenu(), 0.0, 3662, 
3669, getPopupForModel(java.lang.Object, java.util.HashSet, int, freemind.modes.browsemode.BrowseArrowLinkModel, java.util.Vector, freemind.modes.browsemode.BrowseArrowLinkModel, javax.swing.JPopupMenu), 1.0, 3662, 
3670, getGotoLinkNodeAction(freemind.modes.MindMapNode), 1.0, 3662, 
3671, getModeToolBar(), 0.0, 3662, 
3672, getToolBar(), 0.0, 3662, 
3673, load(java.net.URL, freemind.modes.ModeController), 1.0, 3662, 
3674, load(java.io.File, freemind.modes.ModeController), 1.0, 3662, 
3675, newMap(freemind.modes.MindMap), 1.0, 3662, 
3676, setNoteIcon(freemind.modes.MindMapNode, java.util.ListIterator, java.lang.String), 1.0, 3662, 
3677, setAllActions(boolean), 1.0, 3662, 
3678, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 3662, 
3679, getHookFactory(), 0.0, 3662, 
3680, createXMLElement(), 0.0, 3662, 
3682, FollowLinkAction(), 0.0, 3681, 
3683, actionPerformed(java.awt.event.ActionEvent), 1.0, 3681, 
3685, BrowseMode(), 0.0, 3684, 
3686, init(freemind.controller.Controller), 1.0, 3684, 
3687, toString(), 0.0, 3684, 
3688, activate(), 0.0, 3684, 
3689, restore(java.lang.String, java.lang.Exception), 1.0, 3684, 
3690, getController(), 0.0, 3684, 
3691, getDefaultModeController(), 0.0, 3684, 
3692, createModeController(), 0.0, 3684, 
3694, EncryptedBrowseNode(freemind.main.FreeMindMain, freemind.modes.ModeController), 2.0, 3693, 
3696, updateIcon(), 0.0, 3693, 
3697, setFolded(java.lang.String, freemind.modes.ControllerAdapter, boolean, java.lang.String, freemind.modes.MapAdapter, java.util.HashMap, freemind.modes.common.dialogs.EnterPasswordDialog, freemind.modes.NodeAdapter, String[], freemind.main.Tools.SingleDesEncrypter, int, java.io.IOException), 1.0, 3693, 
3698, setAdditionalInfo(java.lang.String), 1.0, 3693, 
3700, BrowseMapModel(freemind.modes.ModeController, freemind.main.FreeMindMain), 2.0, 3699, 
3702, getLinkRegistry(), 0.0, 3699, 
3703, toString(), 0.0, 3699, 
3704, getFile(), 0.0, 3699, 
3705, setFile(), 0.0, 3699, 
3706, getURL(), 0.0, 3699, 
3707, setURL(java.net.URL), 1.0, 3699, 
3708, save(java.io.File), 1.0, 3699, 
3709, isSaved(), 0.0, 3699, 
3710, load(java.net.URL, freemind.modes.browsemode.BrowseNodeModel), 1.0, 3699, 
3711, loadTree(java.io.InputStreamReader, freemind.modes.browsemode.BrowseNodeModel, java.net.URL, java.util.HashMap, java.lang.Exception), 1.0, 3699, 
3712, setLinkInclinationChanged(), 0.0, 3699, 
3713, getXml(java.io.Writer), 1.0, 3699, 
3714, getFilteredXml(java.io.Writer), 1.0, 3699, 
3716, BrowseToolBar(freemind.modes.ControllerAdapter), 1.0, 3715, 
3717, setURLField(java.lang.String), 1.0, 3715, 
3719, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.lang.Exception), 1.0, 3718, 
3723, clone(), 0.0, 3721, 
3724, save(), 0.0, 3721, 
3725, toString(), 0.0, 3721, 
3729, paint(freemind.view.mindmapview.NodeView, java.awt.Graphics2D), 2.0, 3728, 
3730, createEnd(), 0.0, 3728, 
3731, createStart(), 0.0, 3728, 
3732, paint(java.awt.Graphics2D), 1.0, 3728, 
3733, reset(), 0.0, 3728, 
3734, getColor(), 0.0, 3728, 
3735, getStroke(int), 0.0, 3728, 
3736, getWidth(), 0.0, 3728, 
3737, getModel(), 0.0, 3728, 
3738, getMap(), 0.0, 3728, 
3739, getEclipsedStroke(float[]), 0.0, 3728, 
3740, isTargetEclipsed(), 0.0, 3728, 
3741, getSource(), 0.0, 3728, 
3742, getTarget(), 0.0, 3728, 
3746, show(javax.swing.JFrame), 0.0, 3744, 
3747, getFirstEvent(), 0.0, 3744, 
3749, run(java.io.FileWriter, java.lang.String, java.io.File, java.lang.String, java.lang.String, java.lang.Process, int, java.lang.Exception, java.lang.Exception), 0.0, 3748, 
3751, getPreferredSize(java.awt.Dimension), 0.0, 3750, 
3752, paint(java.awt.Graphics2D, java.awt.Graphics, java.lang.Object, freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode), 1.0, 3750, 
3753, paintSelected(java.awt.Graphics2D), 1.0, 3750, 
3754, paintBackground(java.awt.Color, java.awt.Graphics2D), 2.0, 3750, 
3755, getLeftPoint(java.awt.Point), 0.0, 3750, 
3756, getCenterPoint(java.awt.Point), 0.0, 3750, 
3757, getRightPoint(java.awt.Point), 0.0, 3750, 
3758, getMainViewWidthWithFoldingMark(int, int), 0.0, 3750, 
3759, getDeltaX(), 0.0, 3750, 
3760, getStyle(), 0.0, 3750, 
3761, getAlignment(), 0.0, 3750, 
3762, getTextWidth(), 0.0, 3750, 
3763, getTextX(), 0.0, 3750, 
3766, layout(int, int, int, int, int, int, int, int, int, int, int, int, java.awt.Dimension, int), 0.0, 3765, 
3767, getInstance(), 0.0, 3765, 
3768, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView, freemind.view.mindmapview.NodeView, javax.swing.JComponent), 1.0, 3765, 
3770, getMainViewInPoint(freemind.view.mindmapview.NodeView, java.awt.Point), 1.0, 3765, 
3773, layout(int, int, int, int, java.awt.Dimension, int), 0.0, 3772, 
3774, getInstance(), 0.0, 3772, 
3775, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView, javax.swing.JComponent, freemind.view.mindmapview.NodeView), 1.0, 3772, 
3777, getMainViewInPoint(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MainView), 1.0, 3772, 
3780, MapView(freemind.controller.Controller, freemind.modes.MindMap, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Exception), 2.0, 3779, 
3781, createPropertyChangeListener(), 0.0, 3779, 
3782, initRoot(), 0.0, 3779, 
3783, getMaxNodeWidth(java.lang.NumberFormatException), 0.0, 3779, 
3784, centerNode(java.awt.Dimension, freemind.view.mindmapview.NodeView, javax.swing.JComponent, javax.swing.JViewport, java.awt.Rectangle), 1.0, 3779, 
3785, scrollNodeToVisible(freemind.view.mindmapview.NodeView), 1.0, 3779, 
3786, scrollNodeToVisible(int, freemind.view.mindmapview.NodeView, int, int, int, javax.swing.JComponent, int, int), 2.0, 3779, 
3787, getViewportSize(javax.swing.JViewport), 0.0, 3779, 
3788, scrollBy(int, int, double, javax.swing.JViewport, java.awt.Point, double), 2.0, 3779, 
3789, getVisibleLeft(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 1.0, 3779, 
3790, getVisibleRight(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 1.0, 3779, 
3791, getVisibleNeighbour(freemind.view.mindmapview.NodeView, int, freemind.view.mindmapview.NodeView), 1.0, 3779, 
3792, move(java.awt.event.KeyEvent, freemind.view.mindmapview.NodeView), 1.0, 3779, 
3793, resetShiftSelectionOrigin(), 0.0, 3779, 
3794, extendSelectionWithKeyMove(freemind.view.mindmapview.NodeView, boolean, java.awt.event.KeyEvent, freemind.view.mindmapview.NodeView, int, int, int, freemind.view.mindmapview.NodeView, int), 2.0, 3779, 
3795, getMainViewY(freemind.view.mindmapview.NodeView, java.awt.Point, int), 1.0, 3779, 
3796, moveToRoot(), 0.0, 3779, 
3797, selectAsTheOnlyOneSelected(freemind.view.mindmapview.NodeView), 1.0, 3779, 
3798, selectAsTheOnlyOneSelected(boolean, freemind.view.mindmapview.NodeView, java.util.LinkedList, freemind.view.mindmapview.NodeView, java.util.ListIterator), 2.0, 3779, 
3799, toggleSelected(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 1.0, 3779, 
3800, makeTheSelected(freemind.view.mindmapview.NodeView), 1.0, 3779, 
3801, deselect(freemind.view.mindmapview.NodeView), 1.0, 3779, 
3802, selectBranch(freemind.view.mindmapview.NodeView, boolean, java.util.ListIterator, freemind.view.mindmapview.NodeView), 2.0, 3779, 
3803, selectContinuous(java.util.ListIterator, freemind.view.mindmapview.NodeView, java.util.ListIterator, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, boolean, boolean, java.util.LinkedList, java.util.ListIterator), 1.0, 3779, 
3804, getModel(), 0.0, 3779, 
3805, setMoveCursor(int, boolean), 1.0, 3779, 
3806, getNodeMouseMotionListener(), 0.0, 3779, 
3807, getNodeMotionListener(), 0.0, 3779, 
3808, getNodeKeyListener(), 0.0, 3779, 
3809, getNodeDragListener(), 0.0, 3779, 
3810, getNodeDropListener(), 0.0, 3779, 
3811, getSelected(), 0.0, 3779, 
3812, getSelected(int), 1.0, 3779, 
3813, getSelecteds(java.util.LinkedList, int), 0.0, 3779, 
3814, getSelectedNodesSortedByY(freemind.modes.MindMapNode, java.awt.Point, freemind.modes.MindMapNode, java.util.ArrayList, java.util.Iterator, int, java.util.HashSet, freemind.view.mindmapview.NodeView, java.util.LinkedList), 0.0, 3779, 
3815, getSingleSelectedNodes(int, java.util.ArrayList), 0.0, 3779, 
3816, isSelected(freemind.view.mindmapview.NodeView), 1.0, 3779, 
3817, getZoom(), 0.0, 3779, 
3818, getZoomed(int), 1.0, 3779, 
3819, setZoom(float), 1.0, 3779, 
3820, validateTree(), 0.0, 3779, 
3821, setViewPositionAfterValidate(int, java.awt.Point, int, java.awt.Point, int, java.awt.Point, freemind.view.mindmapview.NodeView, javax.swing.JViewport), 0.0, 3779, 
3822, paint(long, java.awt.Graphics, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.awt.Graphics2D, long), 1.0, 3779, 
3823, paintChildren(java.awt.Graphics, java.util.HashMap, java.awt.Graphics2D, java.lang.Object), 1.0, 3779, 
3824, paintSelecteds(java.awt.Graphics2D, java.awt.Stroke, freemind.view.mindmapview.NodeView, java.lang.Object, java.awt.Color, java.util.Iterator), 1.0, 3779, 
3825, paintSelected(freemind.view.mindmapview.NodeView, java.awt.Graphics2D, java.awt.Point, int, javax.swing.JComponent), 2.0, 3779, 
3826, collectLabels(java.util.HashMap, freemind.view.mindmapview.NodeView, java.lang.String, freemind.view.mindmapview.NodeView, java.util.ListIterator), 2.0, 3779, 
3828, detectCollision(java.awt.Point, int, freemind.view.mindmapview.ArrowLinkView), 1.0, 3779, 
3829, preparePrinting(), 0.0, 3779, 
3830, repaintSelecteds(freemind.view.mindmapview.NodeView, java.util.Iterator), 0.0, 3779, 
3831, endPrinting(), 0.0, 3779, 
3833, isCurrentlyPrinting(), 0.0, 3779, 
3834, getInnerBounds(java.awt.Rectangle, freemind.view.mindmapview.ArrowLinkView, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.geom.CubicCurve2D, int), 0.0, 3779, 
3835, getRoot(), 0.0, 3779, 
3836, getMindMapLayout(), 0.0, 3779, 
3837, getMap(), 0.0, 3779, 
3838, getController(), 0.0, 3779, 
3839, getSiblingMaxLevel(), 0.0, 3779, 
3840, setSiblingMaxLevel(int), 1.0, 3779, 
3841, getAutoscrollInsets(java.awt.Rectangle, java.awt.Rectangle), 0.0, 3779, 
3842, autoscroll(java.awt.Point, java.awt.Rectangle), 1.0, 3779, 
3843, getNodeView(freemind.modes.MindMapNode, java.util.Collection, java.util.Iterator, freemind.view.mindmapview.NodeView), 1.0, 3779, 
3844, getPreferredSize(java.awt.Dimension), 0.0, 3779, 
3845, revalidateSelecteds(), 0.0, 3779, 
3846, validateSelecteds(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, java.util.ListIterator, java.util.ArrayList, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 3779, 
3847, getNodeContentLocation(freemind.view.mindmapview.NodeView, java.awt.Point), 1.0, 3779, 
3849, ResizeListener(), 0.0, 3848, 
3850, componentResized(java.awt.Point, java.awt.event.ComponentEvent, int, int, javax.swing.JViewport), 1.0, 3848, 
3852, validateTree(java.awt.Component), 0.0, 3851, 
3855, Selected(), 0.0, 3854, 
3856, clear(), 0.0, 3854, 
3857, size(), 0.0, 3854, 
3858, remove(freemind.view.mindmapview.NodeView), 1.0, 3854, 
3859, add(freemind.view.mindmapview.NodeView), 1.0, 3854, 
3860, removeSelectionForHooks(freemind.view.mindmapview.NodeView), 1.0, 3854, 
3861, addSelectionForHooks(freemind.view.mindmapview.NodeView), 1.0, 3854, 
3862, get(int), 1.0, 3854, 
3863, contains(freemind.view.mindmapview.NodeView), 1.0, 3854, 
3864, moveToFirst(freemind.view.mindmapview.NodeView, int), 1.0, 3854, 
3869, CenterNodeRunnable(), 0.0, 3868, 
3870, run(java.lang.InterruptedException), 0.0, 3868, 
3872, compare(java.lang.Object, java.lang.Object, java.lang.Integer, java.lang.Integer, freemind.main.Tools.Pair, freemind.main.Tools.Pair), 2.0, 3871, 
3875, layout(int, int, int, int, int, java.awt.Dimension), 0.0, 3874, 
3876, getInstance(), 0.0, 3874, 
3877, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView, freemind.view.mindmapview.NodeView, javax.swing.JComponent), 1.0, 3874, 
3879, getMainViewInPoint(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MainView), 1.0, 3874, 
3882, LinearEdgeView(), 0.0, 3881, 
3883, paint(int, java.awt.Graphics2D, java.awt.Stroke, int, int[], int[], java.awt.Color), 1.0, 3881, 
3884, getColor(), 0.0, 3881, 
3887, show(int, int, int, java.awt.Font, int, int, freemind.view.mindmapview.freemind.view.mindmapview.EditNodeTextField$1TextFieldListener, int, java.awt.Point, freemind.view.mindmapview.MapView, java.awt.Color, int, float, freemind.main.Tools.IntHolder, int, int, freemind.view.mindmapview.NodeView, int, java.awt.Color, int, freemind.modes.MindMapNode), 0.0, 3885, 
3888, hideMe(javax.swing.JComponent, java.awt.Rectangle), 0.0, 3885, 
3890, focusGained(java.awt.event.FocusEvent), 1.0, 3889, 
3891, focusLost(java.awt.event.FocusEvent), 1.0, 3889, 
3892, keyPressed(boolean, java.awt.event.KeyEvent), 1.0, 3889, 
3893, keyTyped(java.awt.event.KeyEvent), 1.0, 3889, 
3894, keyReleased(java.awt.event.KeyEvent), 1.0, 3889, 
3895, mouseClicked(java.awt.event.MouseEvent), 1.0, 3889, 
3896, mouseEntered(java.awt.event.MouseEvent), 1.0, 3889, 
3897, mouseExited(java.awt.event.MouseEvent), 1.0, 3889, 
3898, mousePressed(java.awt.event.MouseEvent), 1.0, 3889, 
3899, mouseReleased(java.awt.event.MouseEvent), 1.0, 3889, 
3900, conditionallyShowPopup(java.awt.event.MouseEvent, javax.swing.JPopupMenu), 1.0, 3889, 
3901, componentHidden(java.awt.event.ComponentEvent), 1.0, 3889, 
3902, componentMoved(java.awt.event.ComponentEvent), 1.0, 3889, 
3903, componentResized(java.awt.event.ComponentEvent), 1.0, 3889, 
3904, componentShown(java.awt.event.ComponentEvent), 1.0, 3889, 
3907, SharpLinearEdgeView(), 0.0, 3906, 
3908, paint(java.awt.Graphics2D, int[], int, int[]), 1.0, 3906, 
3909, getColor(), 0.0, 3906, 
3912, getView(), 0.0, 3910, 
3913, getModeController(), 0.0, 3910, 
3914, getController(), 0.0, 3910, 
3915, getText(java.lang.String), 1.0, 3910, 
3916, getFrame(), 0.0, 3910, 
3917, binOptionIsTrue(java.lang.String), 1.0, 3910, 
3918, closeEdit(), 0.0, 3910, 
3919, getText(), 0.0, 3910, 
3920, getClipboard(), 0.0, 3910, 
3921, getEditControl(), 0.0, 3910, 
3922, getNode(), 0.0, 3910, 
3923, getTextFieldListener(), 0.0, 3910, 
3924, setText(java.lang.String), 1.0, 3910, 
3925, setTextFieldListener(java.awt.event.FocusListener), 1.0, 3910, 
3926, redispatchKeyEvents(javax.swing.text.JTextComponent, java.awt.event.KeyEvent, freemind.view.mindmapview.freemind.view.mindmapview.EditNodeBase$1KeyEventQueue, java.awt.KeyboardFocusManager), 2.0, 3910, 
3928, EditDialog(freemind.view.mindmapview.EditNodeBase, freemind.view.mindmapview.EditNodeBase.EditDialog.DialogWindowListener), 1.0, 3927, 
3929, confirmedSubmit(int), 0.0, 3927, 
3930, confirmedCancel(int), 0.0, 3927, 
3931, submit(), 0.0, 3927, 
3932, cancel(), 0.0, 3927, 
3933, split(), 0.0, 3927, 
3934, isChanged(), 0.0, 3927, 
3935, setBase(freemind.view.mindmapview.EditNodeBase), 1.0, 3927, 
3936, getBase(), 0.0, 3927, 
3938, windowClosing(java.awt.event.WindowEvent), 1.0, 3937, 
3941, actionPerformed(java.awt.event.ActionEvent), 1.0, 3940, 
3944, actionPerformed(java.awt.event.ActionEvent), 1.0, 3943, 
3946, actionPerformed(java.awt.event.ActionEvent), 1.0, 3945, 
3949, cancel(), 0.0, 3948, 
3950, ok(java.lang.String), 1.0, 3948, 
3951, split(int, java.lang.String), 2.0, 3948, 
3953, EditCopyAction(javax.swing.text.JTextComponent), 1.0, 3952, 
3954, actionPerformed(java.lang.String, java.awt.event.ActionEvent), 1.0, 3952, 
3956, EditPopupMenu(javax.swing.text.JTextComponent), 1.0, 3955, 
3958, dispatchKeyEvent(java.awt.event.KeyEvent), 1.0, 3957, 
3959, focusGained(java.awt.event.FocusEvent, java.awt.event.KeyEvent, java.util.Iterator), 1.0, 3957, 
3960, focusLost(java.awt.event.FocusEvent), 1.0, 3957, 
3963, MindMapLayout(), 0.0, 3962, 
3964, addLayoutComponent(java.lang.String, java.awt.Component), 2.0, 3962, 
3965, removeLayoutComponent(java.awt.Component), 1.0, 3962, 
3966, layoutContainer(java.awt.Container, int, freemind.view.mindmapview.NodeMotionListenerView, freemind.view.mindmapview.MapView, int, int, java.awt.Component, freemind.view.mindmapview.NodeViewLayout, int), 1.0, 3962, 
3967, getRoot(java.awt.Container), 1.0, 3962, 
3968, minimumLayoutSize(java.awt.Container), 1.0, 3962, 
3969, preferredLayoutSize(java.awt.Container, java.awt.Dimension, freemind.view.mindmapview.MapView), 1.0, 3962, 
3970, calcYBorderSize(int, int, freemind.view.mindmapview.MapView, java.awt.Dimension), 1.0, 3962, 
3971, calcXBorderSize(int, int, freemind.view.mindmapview.MapView, java.awt.Dimension), 1.0, 3962, 
3974, doGraham(java.awt.Point, int, int, int, java.util.Vector, freemind.view.mindmapview.ConvexHull.thetaComparator, int), 1.0, 3972, 
3975, calculateHull(java.util.LinkedList, java.util.ListIterator, java.util.Vector, int, java.util.Vector), 1.0, 3972, 
3978, thetaComparator(java.awt.Point), 1.0, 3977, 
3979, compare(int, int, int, int, java.lang.Object, java.lang.Object, int, double), 2.0, 3977, 
3980, theta(int, int, int, double, int, java.awt.Point, java.awt.Point), 2.0, 3977, 
3983, getBounds(), 0.0, 3981, 
3984, paint(java.awt.Point, java.awt.Point, java.awt.Point, java.awt.Point, boolean, boolean, java.awt.Point, java.awt.Graphics, double, java.awt.Graphics2D), 1.0, 3981, 
3985, isTargetVisible(), 0.0, 3981, 
3986, isSourceVisible(), 0.0, 3981, 
3987, calcInclination(double, freemind.view.mindmapview.NodeView), 2.0, 3981, 
3989, detectCollision(double, double, int, double[], java.awt.Point, java.awt.geom.FlatteningPathIterator, java.awt.geom.Rectangle2D), 1.0, 3981, 
3990, getControlPoint(int, java.awt.geom.Point2D), 1.0, 3981, 
3991, getColor(), 0.0, 3981, 
3992, getStroke(int), 0.0, 3981, 
3993, getWidth(), 0.0, 3981, 
3994, getRealWidth(int), 0.0, 3981, 
3995, getMap(), 0.0, 3981, 
3996, getModel(), 0.0, 3981, 
3997, getZoom(), 0.0, 3981, 
4000, getPreferredSize(java.awt.Dimension), 0.0, 3999, 
4001, paint(java.awt.Graphics2D, java.awt.Graphics, java.lang.Object), 1.0, 3999, 
4002, paintDragOver(java.awt.Graphics2D, int), 1.0, 3999, 
4003, paintSelected(java.awt.Graphics2D), 1.0, 3999, 
4004, paintBackground(java.awt.Color, java.awt.Graphics2D), 2.0, 3999, 
4005, getLeftPoint(java.awt.Point), 0.0, 3999, 
4006, getCenterPoint(java.awt.Point), 0.0, 3999, 
4007, getRightPoint(java.awt.Point), 0.0, 3999, 
4008, setDraggedOver(java.awt.Point), 1.0, 3999, 
4009, getStyle(), 0.0, 3999, 
4010, getAlignment(), 0.0, 3999, 
4011, getTextWidth(), 0.0, 3999, 
4012, getTextX(), 0.0, 3999, 
4013, dropAsSibling(double), 1.0, 3999, 
4014, dropPosition(double), 1.0, 3999, 
4017, getZoomedFoldingSymbolHalfWidth(), 0.0, 4016, 
4018, MainView(), 0.0, 4016, 
4019, getMinimumSize(), 0.0, 4016, 
4020, getMaximumSize(), 0.0, 4016, 
4021, getNodeView(), 0.0, 4016, 
4022, getPreferredSize(java.awt.Dimension, boolean, float, java.lang.String), 0.0, 4016, 
4023, paint(float, java.awt.Graphics, java.awt.geom.AffineTransform, java.awt.Graphics2D), 1.0, 4016, 
4024, getController(), 0.0, 4016, 
4025, isCurrentlyPrinting(), 0.0, 4016, 
4026, getZoom(float), 0.0, 4016, 
4027, printComponent(java.awt.Graphics), 1.0, 4016, 
4028, paintSelected(java.awt.Graphics2D, java.awt.Color), 1.0, 4016, 
4029, paintBackground(java.awt.Graphics2D, java.awt.Color), 2.0, 4016, 
4030, paintDragOver(java.awt.Graphics2D), 1.0, 4016, 
4031, getHeight(float), 0.0, 4016, 
4032, getWidth(float), 0.0, 4016, 
4034, getCenterPoint(), 0.0, 4016, 
4035, getLeftPoint(), 0.0, 4016, 
4036, getRightPoint(), 0.0, 4016, 
4037, getDeltaX(), 0.0, 4016, 
4038, getDeltaY(), 0.0, 4016, 
4039, getMainViewHeightWithFoldingMark(), 0.0, 4016, 
4040, getMainViewWidthWithFoldingMark(), 0.0, 4016, 
4041, convertPointToMap(java.awt.Point), 1.0, 4016, 
4042, convertPointFromMap(java.awt.Point), 1.0, 4016, 
4043, setDraggedOver(int), 1.0, 4016, 
4044, setDraggedOver(java.awt.Point), 1.0, 4016, 
4045, getDraggedOver(), 0.0, 4016, 
4046, dropAsSibling(double), 1.0, 4016, 
4047, dropPosition(double), 1.0, 4016, 
4048, isInVerticalRegion(double, double), 2.0, 4016, 
4049, getStyle(), 0.0, 4016, 
4050, getAlignment(), 0.0, 4016, 
4051, getTextWidth(), 0.0, 4016, 
4052, getTextX(int, boolean), 0.0, 4016, 
4053, getIconWidth(javax.swing.Icon), 0.0, 4016, 
4055, isInFollowLinkRegion(double, freemind.modes.MindMapNode), 1.0, 4016, 
4056, updateCursor(int, double, boolean), 1.0, 4016, 
4058, getBBox(double, int, double, double, double, double, double, double, double, boolean, double, double, double, double[], double[], java.awt.Shape, int, int, java.awt.geom.PathIterator), 1.0, 4057, 
4065, getIterativeLevel(), 0.0, 4064, 
4066, CloudView(freemind.modes.MindMapCloud, freemind.view.mindmapview.NodeView), 2.0, 4064, 
4067, paint(double, double, double, double, double, double, double, double, double, double, double, double, double, java.awt.Graphics, java.awt.Graphics2D, java.awt.Point, int, freemind.view.mindmapview.ConvexHull, java.util.LinkedList, java.awt.Point, int, double, java.util.Vector, java.awt.Polygon, double, java.awt.Point, java.awt.Graphics2D), 1.0, 4064, 
4069, getColor(), 0.0, 4064, 
4070, getExteriorColor(), 0.0, 4064, 
4071, getStroke(int), 0.0, 4064, 
4072, getWidth(), 0.0, 4064, 
4073, getRealWidth(int), 0.0, 4064, 
4074, getDistanceToConvexHull(), 0.0, 4064, 
4075, getAdditionalHeigth(freemind.view.mindmapview.NodeView, freemind.modes.MindMapCloud), 2.0, 4064, 
4076, getMap(), 0.0, 4064, 
4077, getModel(), 0.0, 4064, 
4078, getZoom(), 0.0, 4064, 
4081, show(freemind.view.mindmapview.EditNodeBase.EditDialog), 0.0, 4079, 
4083, LongNodeDialog(int, java.awt.Font, int, javax.swing.JPanel, javax.swing.JCheckBox, javax.swing.JPanel, javax.swing.JButton, javax.swing.JButton, javax.swing.JScrollPane, javax.swing.JButton, java.awt.Color, java.awt.Color), 0.0, 4082, 
4084, show(), 0.0, 4082, 
4085, cancel(), 0.0, 4082, 
4086, split(), 0.0, 4082, 
4087, submit(), 0.0, 4082, 
4088, isChanged(), 0.0, 4082, 
4089, getMostRecentFocusOwner(), 0.0, 4082, 
4091, actionPerformed(java.awt.event.ActionEvent), 1.0, 4090, 
4094, actionPerformed(java.awt.event.ActionEvent), 1.0, 4093, 
4097, actionPerformed(java.awt.event.ActionEvent), 1.0, 4096, 
4100, actionPerformed(java.awt.event.ActionEvent), 1.0, 4099, 
4103, keyPressed(java.awt.event.KeyEvent), 1.0, 4102, 
4104, keyTyped(java.awt.event.KeyEvent), 1.0, 4102, 
4105, keyReleased(java.awt.event.KeyEvent), 1.0, 4102, 
4108, mouseClicked(java.awt.event.MouseEvent), 1.0, 4107, 
4109, mouseEntered(java.awt.event.MouseEvent), 1.0, 4107, 
4110, mouseExited(java.awt.event.MouseEvent), 1.0, 4107, 
4111, mousePressed(java.awt.event.MouseEvent), 1.0, 4107, 
4112, mouseReleased(java.awt.event.MouseEvent), 1.0, 4107, 
4113, conditionallyShowPopup(java.awt.event.MouseEvent, javax.swing.JPopupMenu), 1.0, 4107, 
4116, paint(int, java.awt.Graphics2D, java.awt.Graphics, freemind.modes.MindMapNode, java.lang.Object, java.awt.Color, freemind.view.mindmapview.NodeView), 1.0, 4115, 
4118, getMainViewWidthWithFoldingMark(int), 0.0, 4115, 
4119, getMainViewHeightWithFoldingMark(int), 0.0, 4115, 
4120, getDeltaX(), 0.0, 4115, 
4121, getStyle(), 0.0, 4115, 
4122, getAlignment(), 0.0, 4115, 
4123, getLeftPoint(int, java.awt.Point), 0.0, 4115, 
4124, getCenterPoint(java.awt.Point), 0.0, 4115, 
4125, getRightPoint(int, java.awt.Point), 0.0, 4115, 
4129, show(int, int, java.lang.String, java.awt.Font, java.lang.String, java.awt.event.KeyEvent, javax.swing.text.html.HTMLDocument, java.awt.Color, freemind.main.FreeMindMain, com.lightdev.app.shtm.SHTMLPanel, java.awt.Color, javax.swing.text.JTextComponent, javax.swing.JEditorPane, java.lang.Exception, java.net.MalformedURLException), 0.0, 4127, 
4131, HTMLDialog(freemind.view.mindmapview.EditNodeBase, javax.swing.JButton, javax.swing.JButton, javax.swing.JPanel, javax.swing.JButton), 1.0, 4130, 
4132, createEditorPanel(), 0.0, 4130, 
4133, getHtmlEditorPanel(), 0.0, 4130, 
4134, submit(), 0.0, 4130, 
4135, removeBodyStyle(), 0.0, 4130, 
4136, split(), 0.0, 4130, 
4137, cancel(), 0.0, 4130, 
4138, isChanged(), 0.0, 4130, 
4139, getMostRecentFocusOwner(), 0.0, 4130, 
4141, actionPerformed(java.awt.event.ActionEvent), 1.0, 4140, 
4144, NodeMotionListenerView(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MapView, java.lang.String), 1.0, 4143, 
4145, getMovedView(), 0.0, 4143, 
4146, paintComponent(java.awt.Graphics, java.lang.Object, freemind.controller.Controller, java.awt.Graphics2D, java.awt.Color), 1.0, 4143, 
4147, isMouseEntered(), 0.0, 4143, 
4148, setMouseEntered(), 0.0, 4143, 
4149, setMouseExited(), 0.0, 4143, 
4151, actionPerformed(java.awt.event.ActionEvent), 1.0, 4150, 
4154, actionPerformed(java.awt.event.ActionEvent), 1.0, 4153, 
4157, actionPerformed(java.awt.event.ActionEvent, java.lang.Exception), 1.0, 4156, 
4160, BezierEdgeView(), 0.0, 4159, 
4161, update(int, int, int, int), 0.0, 4159, 
4162, paint(java.awt.Graphics2D, java.awt.Stroke, java.awt.Color), 1.0, 4159, 
4163, getColor(), 0.0, 4159, 
4165, setFocusCycleRoot(boolean), 1.0, 4164, 
4167, setMainView(freemind.view.mindmapview.MainView, int, java.awt.Container), 1.0, 4164, 
4168, removeFromMap(), 0.0, 4164, 
4169, addDragListener(java.awt.dnd.DragGestureListener, java.awt.dnd.DragSource), 1.0, 4164, 
4170, addDropListener(java.awt.dnd.DropTargetListener, java.awt.dnd.DropTarget), 1.0, 4164, 
4171, isRoot(), 0.0, 4164, 
4172, getIsLong(), 0.0, 4164, 
4173, isSiblingOf(freemind.view.mindmapview.NodeView), 1.0, 4164, 
4174, isChildOf(freemind.view.mindmapview.NodeView), 1.0, 4164, 
4175, isParentOf(freemind.view.mindmapview.NodeView), 1.0, 4164, 
4176, getModel(), 0.0, 4164, 
4177, getCoordinates(java.util.LinkedList), 1.0, 4164, 
4179, setText(java.lang.String), 1.0, 4164, 
4180, getText(), 0.0, 4164, 
4181, getMainViewWidthWithFoldingMark(), 0.0, 4164, 
4182, getMainViewHeightWithFoldingMark(), 0.0, 4164, 
4183, getDeltaX(), 0.0, 4164, 
4184, getDeltaY(), 0.0, 4164, 
4185, requestFocus(boolean), 0.0, 4164, 
4186, focused(), 0.0, 4164, 
4187, getAdditionalCloudHeigth(freemind.modes.MindMapCloud), 0.0, 4164, 
4188, isSelected(), 0.0, 4164, 
4189, isLeft(), 0.0, 4164, 
4190, setModel(freemind.modes.MindMapNode), 1.0, 4164, 
4191, getMap(), 0.0, 4164, 
4192, isParentHidden(java.awt.Container, freemind.view.mindmapview.NodeView), 0.0, 4164, 
4193, getParentView(java.awt.Container), 0.0, 4164, 
4194, getVisibleParentView(java.awt.Container, freemind.view.mindmapview.NodeView), 0.0, 4164, 
4195, getChildrenViews(Component[], freemind.view.mindmapview.NodeView, java.util.LinkedList, int), 0.0, 4164, 
4196, getSiblingViews(), 0.0, 4164, 
4197, getMainViewOutPoint(java.awt.Point, freemind.view.mindmapview.NodeView, java.awt.Point, freemind.view.mindmapview.NodeViewLayout), 2.0, 4164, 
4198, getMainViewInPoint(java.awt.Point, freemind.view.mindmapview.NodeViewLayout), 0.0, 4164, 
4199, getLinkPoint(int, int, int, int, java.awt.Point, java.awt.Point, double, double), 1.0, 4164, 
4200, convertPointToMap(java.awt.Point), 1.0, 4164, 
4201, getAlignment(), 0.0, 4164, 
4202, getNextPage(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 4164, 
4203, getPreviousPage(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 4164, 
4204, getNextVisibleSibling(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 4164, 
4206, isContentVisible(), 0.0, 4164, 
4208, getLeft(boolean, java.util.ListIterator, java.util.LinkedList, java.util.LinkedList, freemind.view.mindmapview.NodeView), 1.0, 4164, 
4209, getRight(boolean, java.util.LinkedList, java.util.ListIterator, freemind.view.mindmapview.NodeView, java.util.LinkedList), 1.0, 4164, 
4210, getPreviousVisibleSibling(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 4164, 
4211, getNextSiblingSingle(java.util.LinkedList, int, int, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 4164, 
4212, getPreviousSiblingSingle(java.util.LinkedList, int, int, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 4164, 
4213, insert(java.util.ListIterator), 0.0, 4164, 
4214, insert(freemind.modes.MindMapNode, int, freemind.view.mindmapview.NodeView), 2.0, 4164, 
4215, remove(java.util.ListIterator), 0.0, 4164, 
4216, update(), 0.0, 4164, 
4217, createAttributeView(), 0.0, 4164, 
4218, repaintSelected(), 0.0, 4164, 
4219, updateText(String[], int, boolean, java.lang.String, int, java.lang.String, java.lang.String, boolean, java.net.MalformedURLException), 0.0, 4164, 
4220, updateFont(java.awt.Font), 0.0, 4164, 
4221, updateIcons(java.lang.String, boolean, java.util.List, java.util.Iterator, freemind.main.FreeMindMain, java.lang.String, java.util.Map, javax.swing.ImageIcon, freemind.view.mindmapview.MultipleImage, java.lang.String, javax.swing.ImageIcon), 0.0, 4164, 
4222, updateIconPosition(), 0.0, 4164, 
4223, updateTextColor(java.awt.Color), 0.0, 4164, 
4224, useSelectionColors(), 0.0, 4164, 
4225, updateStyle(freemind.view.mindmapview.MainView), 0.0, 4164, 
4226, updateToolTip(java.lang.String, java.lang.String, java.lang.StringBuffer, java.util.Map, java.util.Iterator), 0.0, 4164, 
4227, getMaxToolTipWidth(java.lang.NumberFormatException), 0.0, 4164, 
4228, setIcon(freemind.view.mindmapview.MultipleImage), 1.0, 4164, 
4229, updateAll(java.util.ListIterator, freemind.view.mindmapview.NodeView), 0.0, 4164, 
4230, getStyle(), 0.0, 4164, 
4231, getSelectedColor(), 0.0, 4164, 
4232, getAntiColor1(float[], java.awt.Color), 1.0, 4164, 
4233, getAntiColor2(float[], java.awt.Color), 1.0, 4164, 
4234, getShift(), 0.0, 4164, 
4235, getVGap(), 0.0, 4164, 
4236, getHGap(), 0.0, 4164, 
4237, getMainView(), 0.0, 4164, 
4238, syncronizeAttributeView(), 0.0, 4164, 
4239, getTextFont(), 0.0, 4164, 
4240, getTextColor(java.awt.Color), 0.0, 4164, 
4241, getAttributeView(), 0.0, 4164, 
4242, getPreferredVisibleChild(boolean, int, freemind.view.mindmapview.NodeView, int, int, int, java.awt.Point, freemind.view.mindmapview.NodeView, java.awt.Component, freemind.view.mindmapview.NodeView), 1.0, 4164, 
4243, setPreferredChild(freemind.view.mindmapview.NodeView, java.awt.Container), 1.0, 4164, 
4244, treeNodesChanged(javax.swing.event.TreeModelEvent), 1.0, 4164, 
4245, treeNodesInserted(int[], javax.swing.event.TreeModelEvent, int, int), 1.0, 4164, 
4246, treeNodesRemoved(freemind.view.mindmapview.NodeView, javax.swing.event.TreeModelEvent, int[], int, int, java.awt.Component, freemind.view.mindmapview.NodeView, boolean, int, freemind.view.mindmapview.NodeView), 1.0, 4164, 
4247, treeStructureChanged(javax.swing.event.TreeModelEvent, java.util.ListIterator), 1.0, 4164, 
4248, getZoomedFoldingSymbolHalfWidth(int), 0.0, 4164, 
4249, paintFoldingMark(java.awt.Graphics2D, freemind.controller.Controller, java.lang.Object, java.awt.Point), 1.0, 4164, 
4250, getContent(), 0.0, 4164, 
4251, getContentPane(int), 0.0, 4164, 
4252, getMotionListenerView(), 0.0, 4164, 
4254, setVisible(boolean), 1.0, 4164, 
4255, paintCloudsAndEdges(java.awt.Graphics2D, freemind.view.mindmapview.NodeView, java.awt.Point, java.awt.Component, java.lang.Object, freemind.view.mindmapview.EdgeView, int), 1.0, 4164, 
4256, paint(boolean, java.awt.Graphics, java.awt.Graphics2D), 1.0, 4164, 
4257, paintCloud(java.awt.Graphics, freemind.view.mindmapview.CloudView), 1.0, 4164, 
4258, toString(), 0.0, 4164, 
4259, getInnerBounds(int), 0.0, 4164, 
4260, contains(int, int, int), 2.0, 4164, 
4261, getTextBackground(java.awt.Color), 0.0, 4164, 
4262, getBackgroundColor(freemind.modes.MindMapCloud), 0.0, 4164, 
4264, SharpBezierEdgeView(), 0.0, 4263, 
4265, update(float, float, float, float), 0.0, 4263, 
4266, paint(java.awt.Graphics2D), 1.0, 4263, 
4267, getColor(), 0.0, 4263, 
4268, createStart(int, double, double, int, freemind.view.mindmapview.MainView, int, double, double, double, double), 0.0, 4263, 
4270, MultipleImage(double), 1.0, 4269, 
4271, getImageCount(), 0.0, 4269, 
4272, addImage(javax.swing.ImageIcon), 1.0, 4269, 
4273, getImage(double, double, int, int, java.awt.image.BufferedImage, java.awt.geom.AffineTransform, java.awt.Graphics2D, java.util.Iterator, javax.swing.ImageIcon), 0.0, 4269, 
4275, getIconWidth(int, int), 0.0, 4269, 
4276, getIconHeight(int, int, int), 0.0, 4269, 
4278, NodeViewFactory(), 0.0, 4277, 
4279, getInstance(), 0.0, 4277, 
4280, getEdge(freemind.view.mindmapview.NodeView, java.lang.String), 1.0, 4277, 
4281, getSharpBezierEdgeView(), 0.0, 4277, 
4282, getSharpEdgeView(), 0.0, 4277, 
4283, getBezierEdgeView(), 0.0, 4277, 
4284, getLinearEdgeView(), 0.0, 4277, 
4286, newMainView(freemind.modes.MindMapNode), 1.0, 4277, 
4287, fireNodeViewCreated(freemind.view.mindmapview.NodeView), 1.0, 4277, 
4288, newContentPane(freemind.view.mindmapview.NodeView), 1.0, 4277, 
4290, ContentPane(), 0.0, 4289, 
4292, addLayoutComponent(java.lang.String, java.awt.Component), 2.0, 4291, 
4293, layoutContainer(int, java.awt.Dimension, java.awt.Container, java.awt.Component, int, int, int, int), 1.0, 4291, 
4294, minimumLayoutSize(java.awt.Container), 1.0, 4291, 
4295, preferredLayoutSize(java.awt.Dimension, java.awt.Dimension, java.awt.Container, int, int, java.awt.Component), 1.0, 4291, 
4296, removeLayoutComponent(java.awt.Component), 1.0, 4291, 
4299, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView), 1.0, 4298, 
4301, getMainViewInPoint(freemind.view.mindmapview.NodeView), 1.0, 4298, 
4303, visit(freemind.view.mindmapview.NodeView), 1.0, 4302, 
4305, addLayoutComponent(java.lang.String, java.awt.Component), 2.0, 4304, 
4306, removeLayoutComponent(java.awt.Component), 1.0, 4304, 
4307, minimumLayoutSize(java.awt.Container), 1.0, 4304, 
4308, preferredLayoutSize(java.awt.Container), 1.0, 4304, 
4309, layoutContainer(java.awt.Container), 1.0, 4304, 
4310, layout(), 0.0, 4304, 
4311, setUp(int, freemind.view.mindmapview.NodeView, java.awt.Container, int), 1.0, 4304, 
4312, shutDown(), 0.0, 4304, 
4313, getView(), 0.0, 4304, 
4314, getModel(), 0.0, 4304, 
4315, getChildCount(), 0.0, 4304, 
4316, getContent(), 0.0, 4304, 
4317, getChildContentHeight(int, boolean, int, int, int, int, freemind.view.mindmapview.NodeView, int), 1.0, 4304, 
4318, getChildVerticalShift(int, int, boolean, freemind.view.mindmapview.NodeView, int), 1.0, 4304, 
4319, getChildHorizontalShift(int, int, freemind.view.mindmapview.NodeView, int), 0.0, 4304, 
4320, placeRightChildren(int, freemind.view.mindmapview.NodeView, int, int, freemind.view.mindmapview.NodeView, int, int, int, int, int, int, int), 1.0, 4304, 
4321, placeLeftChildren(int, int, int, int, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, int, int, int, int, int, int), 1.0, 4304, 
4322, getVGap(), 0.0, 4304, 
4323, getSpaceAround(), 0.0, 4304, 
4326, getSubterms(), 0.0, 4325, 
4327, getSearchTerm(), 0.0, 4325, 
4328, getFindFromText(java.lang.String), 0.0, 4325, 
4329, FindAction(freemind.modes.ControllerAdapter), 1.0, 4325, 
4330, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.lang.String, java.util.Collection, boolean, java.lang.String), 1.0, 4325, 
4333, breakSearchTermIntoSubterms(char, char, boolean, java.lang.String, int, java.util.ArrayList, java.lang.StringBuffer, int), 1.0, 4325, 
4334, displayNode(Object[], freemind.modes.MindMapNode, java.util.ArrayList, int, freemind.modes.MindMapNode), 2.0, 4325, 
4335, findNext(), 0.0, 4325, 
4336, centerNode(freemind.modes.MindMapNode), 1.0, 4325, 
4338, FindNextAction(freemind.modes.ControllerAdapter, freemind.modes.common.actions.FindAction), 2.0, 4337, 
4339, actionPerformed(java.awt.event.ActionEvent, java.lang.String, boolean, java.util.Collection, java.lang.String), 1.0, 4337, 
4341, NewMapAction(freemind.modes.ModeController), 1.0, 4340, 
4342, actionPerformed(java.awt.event.ActionEvent), 1.0, 4340, 
4346, generateHtml(java.lang.StringBuffer, java.util.Iterator, accessories.plugins.util.html.ClickableImageCreator.AreaHolder), 0.0, 4344, 
4347, createArea(), 0.0, 4344, 
4348, createArea(accessories.plugins.util.html.ClickableImageCreator.AreaHolder, freemind.modes.MindMapNode, java.util.Iterator, java.awt.Point, javax.swing.JComponent, freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode), 1.0, 4344, 
4353, MindMapMouseWheelEventHandler(freemind.modes.ControllerAdapter), 1.0, 4352, 
4354, mouseWheelMoved(float, float, boolean, java.awt.event.MouseWheelEvent, freemind.modes.ControllerAdapter, freemind.view.mindmapview.MapView, float, freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler, java.util.Iterator, java.util.Set), 1.0, 4352, 
4359, updateSelectionMethod(), 0.0, 4358, 
4360, CommonNodeMouseMotionListener(freemind.modes.ModeController), 1.0, 4358, 
4361, mouseMoved(freemind.view.mindmapview.MainView, boolean, java.awt.event.MouseEvent), 1.0, 4358, 
4362, mouseDragged(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView), 1.0, 4358, 
4363, mouseClicked(java.awt.event.MouseEvent), 1.0, 4358, 
4364, mouseEntered(java.awt.event.MouseEvent), 1.0, 4358, 
4365, mousePressed(java.awt.event.MouseEvent), 1.0, 4358, 
4366, mouseExited(java.awt.event.MouseEvent), 1.0, 4358, 
4367, mouseReleased(java.awt.event.MouseEvent), 1.0, 4358, 
4368, getControlRegion(int, java.awt.geom.Point2D), 1.0, 4358, 
4369, createTimer(java.awt.event.MouseEvent), 1.0, 4358, 
4370, stopTimerForDelayedSelection(), 0.0, 4358, 
4372, timeDelayedSelection(freemind.modes.ModeController, java.awt.event.MouseEvent), 2.0, 4371, 
4373, run(), 0.0, 4371, 
4375, run(), 0.0, 4374, 
4378, CommonMouseMotionManager(freemind.modes.ModeController), 1.0, 4377, 
4379, mouseDragged(java.awt.event.MouseEvent, java.awt.Rectangle, freemind.view.mindmapview.MapView, boolean), 1.0, 4377, 
4380, mousePressed(java.awt.event.MouseEvent), 1.0, 4377, 
4381, mouseReleased(java.awt.event.MouseEvent), 1.0, 4377, 
4384, XHTMLWriter(javax.swing.text.html.HTMLDocument, java.io.Writer), 2.0, 4383, 
4386, write(), 0.0, 4383, 
4387, writeOption(javax.swing.text.html.Option), 1.0, 4383, 
4388, writeLineSeparator(), 0.0, 4383, 
4389, html2xhtml(java.io.Writer, java.io.Reader, freemind.main.XHTMLWriter, javax.swing.text.html.HTMLEditorKit, javax.swing.text.Document), 2.0, 4383, 
4390, main(String[], java.io.FileWriter, java.io.FileReader, java.lang.Exception), 1.0, 4383, 
4392, XHTMLFilterWriter(java.io.Writer), 1.0, 4391, 
4393, write(int), 1.0, 4391, 
4397, HtmlTools(), 0.0, 4396, 
4398, getInstance(), 0.0, 4396, 
4399, toXhtml(java.lang.String, java.lang.String, java.io.StringWriter, java.io.StringReader, java.io.IOException), 1.0, 4396, 
4400, toHtml(java.lang.String), 1.0, 4396, 
4403, getMinimalOriginalPosition(java.util.ArrayList, int, java.util.Iterator, freemind.main.HtmlTools.IndexPair), 2.0, 4396, 
4404, getMaximalOriginalPosition(int, java.util.ArrayList, int, freemind.main.HtmlTools.IndexPair), 2.0, 4396, 
4405, isHtmlNode(java.lang.String, int, char), 1.0, 4396, 
4406, unicodeToHTMLUnicodeEntity(char, int, java.lang.String, int, java.lang.StringBuffer), 1.0, 4396, 
4407, unescapeHTMLUnicodeEntity(char, char, boolean, java.lang.String, java.lang.StringBuffer, int, java.lang.StringBuffer, java.lang.NumberFormatException), 1.0, 4396, 
4408, removeHtmlTagsFromString(java.lang.String), 1.0, 4396, 
4409, removeAllTagsFromString(java.lang.String), 1.0, 4396, 
4410, htmlToPlain(java.lang.String), 1.0, 4396, 
4411, htmlToPlain(java.lang.String, boolean, java.lang.String), 2.0, 4396, 
4412, plainToHTML(char, java.lang.String, int, int, java.lang.StringBuffer, java.lang.String), 1.0, 4396, 
4413, toXMLUnescapedText(java.lang.String), 1.0, 4396, 
4414, toXMLEscapedTextExpandingWhitespace(java.lang.String, char, int, java.lang.StringBuffer, int), 1.0, 4396, 
4415, toXMLEscapedText(java.lang.String), 1.0, 4396, 
4416, isWellformedXml(java.lang.String, javax.xml.parsers.SAXParserFactory, org.xml.sax.SAXParseException), 1.0, 4396, 
4417, replaceIllegalXmlCharacters(java.lang.String), 1.0, 4396, 
4418, isXMLValidCharacter(char), 1.0, 4396, 
4419, removeInvalidXmlCharacters(boolean, char, char, java.lang.String, int, java.lang.StringBuffer, java.lang.StringBuffer, java.lang.NumberFormatException), 1.0, 4396, 
4420, extractHtmlBody(int, int, java.lang.String), 1.0, 4396, 
4421, replaceSpacesToNonbreakableSpaces(boolean, char, java.lang.String, int, java.lang.StringBuffer), 1.0, 4396, 
4424, toString(java.lang.StringBuffer), 0.0, 4422, 
4426, getFeedBack(), 0.0, 4425, 
4427, FreeMindSplash(freemind.main.FreeMindMain, javax.swing.ImageIcon, java.awt.Dimension, javax.swing.JLabel, java.awt.Dimension), 1.0, 4425, 
4428, close(), 0.0, 4425, 
4429, getWindowIcon(), 0.0, 4425, 
4431, progress(java.lang.String, int, long, java.lang.String), 2.0, 4430, 
4432, getActualValue(), 0.0, 4430, 
4433, setMaximumValue(int), 1.0, 4430, 
4434, increase(java.lang.String), 1.0, 4430, 
4435, setImageJLabel(javax.swing.JLabel), 1.0, 4430, 
4438, run(double), 0.0, 4437, 
4441, paint(int, int, java.awt.Graphics, java.awt.Graphics2D, java.lang.Double, int, java.lang.String, int, java.lang.String, int), 1.0, 4440, 
4443, FreeMindCommon(freemind.main.FreeMindMain), 1.0, 4442, 
4444, getProperty(java.lang.String), 1.0, 4442, 
4445, setDefaultProperty(java.lang.String, java.lang.String), 2.0, 4442, 
4446, getResources(), 0.0, 4442, 
4447, getResourceString(java.lang.String), 1.0, 4442, 
4448, getResourceString(java.lang.String, java.lang.String), 2.0, 4442, 
4449, clearLanguageResources(), 0.0, 4442, 
4450, getFreeMindClassLoader(java.lang.ClassLoader, java.net.MalformedURLException), 0.0, 4442, 
4451, getFreemindBaseDirOld(int, int, java.lang.String, java.lang.String, java.io.File), 0.0, 4442, 
4452, getFreemindBaseDir(java.io.File, java.lang.String, java.lang.String, java.net.URL, java.lang.Exception), 0.0, 4442, 
4453, getAdjustableProperty(java.lang.String, java.lang.String, java.lang.String), 1.0, 4442, 
4454, loadUIProperties(java.util.Properties), 1.0, 4442, 
4456, FreemindResourceBundle(java.lang.String, java.lang.Exception), 0.0, 4455, 
4457, getLanguageResources(java.io.InputStream, java.lang.String, java.net.URL, java.util.PropertyResourceBundle), 1.0, 4455, 
4458, handleGetObject(java.lang.String, java.lang.Exception), 1.0, 4455, 
4459, getKeys(), 0.0, 4455, 
4460, getResourceString(java.lang.String, java.lang.Exception), 1.0, 4455, 
4461, getResourceString(java.lang.String, java.lang.String, java.lang.Exception, java.lang.Exception), 2.0, 4455, 
4463, progress(java.lang.String, int), 2.0, 4462, 
4464, getActualValue(), 0.0, 4462, 
4465, setMaximumValue(int), 1.0, 4462, 
4466, increase(java.lang.String), 1.0, 4462, 
4468, format(java.util.logging.LogRecord, java.lang.StringBuffer, java.lang.String), 1.0, 4467, 
4471, StdOutErrLevel(int, java.lang.String), 2.0, 4470, 
4473, getFeedBack(), 0.0, 4472, 
4474, FreeMindSplashModern(freemind.main.FreeMindMain, javax.swing.ImageIcon, java.awt.Dimension, javax.swing.JLabel, java.awt.Dimension), 1.0, 4472, 
4475, close(), 0.0, 4472, 
4476, getWindowIcon(), 0.0, 4472, 
4478, progress(java.lang.String, int, long, java.lang.String), 2.0, 4477, 
4479, getActualValue(), 0.0, 4477, 
4480, setMaximumValue(int), 1.0, 4477, 
4481, increase(java.lang.String), 1.0, 4477, 
4482, setImageJLabel(javax.swing.JLabel), 1.0, 4477, 
4485, run(double), 0.0, 4484, 
4488, paint(int, int, java.awt.Graphics, java.lang.String, int, int, java.awt.Graphics2D, int, java.lang.String, java.lang.Double), 1.0, 4487, 
4490, FreeMindApplet(), 0.0, 4489, 
4491, isApplet(), 0.0, 4489, 
4492, getPatternsFile(), 0.0, 4489, 
4493, getController(), 0.0, 4489, 
4494, getView(), 0.0, 4489, 
4495, setView(freemind.view.mindmapview.MapView), 1.0, 4489, 
4496, getFreeMindMenuBar(), 0.0, 4489, 
4497, getViewport(), 0.0, 4489, 
4498, getFreemindVersion(), 0.0, 4489, 
4499, getWinHeight(), 0.0, 4489, 
4500, getWinWidth(), 0.0, 4489, 
4501, getWinState(), 0.0, 4489, 
4502, getWinX(), 0.0, 4489, 
4503, getWinY(), 0.0, 4489, 
4504, getResources(), 0.0, 4489, 
4505, getResourceString(java.lang.String), 1.0, 4489, 
4506, getResourceString(java.lang.String, java.lang.String), 2.0, 4489, 
4507, getProperty(java.lang.String), 1.0, 4489, 
4508, getIntProperty(int, java.lang.String, java.lang.NumberFormatException), 2.0, 4489, 
4509, getProperties(), 0.0, 4489, 
4510, setProperty(java.lang.String, java.lang.String), 2.0, 4489, 
4511, setDefaultProperty(java.lang.String, java.lang.String), 2.0, 4489, 
4512, getFreemindDirectory(), 0.0, 4489, 
4513, getMaxNodeWidth(java.lang.NumberFormatException), 0.0, 4489, 
4514, saveProperties(), 0.0, 4489, 
4515, setTitle(java.lang.String), 1.0, 4489, 
4516, out(java.lang.String), 1.0, 4489, 
4517, err(java.lang.String), 1.0, 4489, 
4518, openDocument(java.net.URL), 1.0, 4489, 
4519, start(java.lang.Exception), 0.0, 4489, 
4520, setWaitingCursor(boolean), 1.0, 4489, 
4521, getResource(java.lang.String, java.net.URL), 1.0, 4489, 
4522, getLogger(java.lang.String), 1.0, 4489, 
4523, init(java.lang.String, java.io.InputStream, java.util.Enumeration, javax.swing.JRootPane, java.lang.String, java.net.URL, java.net.URL, java.net.MalformedURLException, java.lang.Exception), 0.0, 4489, 
4524, setPropertyByParameter(java.lang.String, java.lang.String), 1.0, 4489, 
4525, updateLookAndFeel(java.lang.String, java.lang.Exception), 0.0, 4489, 
4526, getSouthPanel(), 0.0, 4489, 
4527, getJFrame(), 0.0, 4489, 
4528, getFreeMindClassLoader(), 0.0, 4489, 
4529, getFreemindBaseDir(), 0.0, 4489, 
4530, getAdjustableProperty(java.lang.String), 1.0, 4489, 
4531, insertComponentIntoSplitPane(javax.swing.JComponent), 1.0, 4489, 
4532, removeSplitPane(), 0.0, 4489, 
4534, XMLElement(), 0.0, 4533, 
4535, XMLElement(java.util.Hashtable), 1.0, 4533, 
4536, XMLElement(boolean), 1.0, 4533, 
4537, XMLElement(java.util.Hashtable, boolean), 2.0, 4533, 
4540, getUserObject(), 0.0, 4533, 
4541, addChild(freemind.main.XMLElement), 1.0, 4533, 
4542, setAttribute(java.lang.String, java.lang.Object), 2.0, 4533, 
4543, addProperty(java.lang.String, java.lang.Object), 2.0, 4533, 
4544, setIntAttribute(java.lang.String, int), 2.0, 4533, 
4545, addProperty(java.lang.String, int), 2.0, 4533, 
4546, setDoubleAttribute(java.lang.String, double), 2.0, 4533, 
4547, addProperty(java.lang.String, double), 2.0, 4533, 
4548, countChildren(), 0.0, 4533, 
4549, enumerateAttributeNames(), 0.0, 4533, 
4550, enumeratePropertyNames(), 0.0, 4533, 
4551, enumerateChildren(), 0.0, 4533, 
4552, getChildren(java.lang.Exception), 0.0, 4533, 
4553, getContents(), 0.0, 4533, 
4554, getContent(), 0.0, 4533, 
4555, getLineNr(), 0.0, 4533, 
4556, getAttribute(java.lang.String), 1.0, 4533, 
4557, getAttribute(java.lang.Object, java.lang.String, java.lang.Object), 2.0, 4533, 
4559, getStringAttribute(java.lang.String), 1.0, 4533, 
4560, getStringAttribute(java.lang.String, java.lang.String), 2.0, 4533, 
4562, getIntAttribute(java.lang.String), 1.0, 4533, 
4563, getIntAttribute(java.lang.String, int, java.lang.String, java.lang.NumberFormatException), 2.0, 4533, 
4565, getDoubleAttribute(java.lang.String), 1.0, 4533, 
4566, getDoubleAttribute(java.lang.String, double, java.lang.String, java.lang.NumberFormatException), 2.0, 4533, 
4570, getProperty(java.lang.String), 1.0, 4533, 
4571, getProperty(java.lang.String, java.lang.String), 2.0, 4533, 
4572, getProperty(int, java.lang.String), 2.0, 4533, 
4573, getProperty(java.lang.String, double), 2.0, 4533, 
4579, getName(), 0.0, 4533, 
4580, getTagName(), 0.0, 4533, 
4581, parseFromReader(java.io.Reader), 1.0, 4533, 
4582, parseFromReader(char, int, java.io.Reader), 2.0, 4533, 
4583, parseString(java.lang.String, java.io.IOException), 1.0, 4533, 
4584, parseString(int, java.lang.String), 2.0, 4533, 
4589, removeChild(freemind.main.XMLElement), 1.0, 4533, 
4590, removeAttribute(java.lang.String), 1.0, 4533, 
4591, removeProperty(java.lang.String), 1.0, 4533, 
4592, removeChild(java.lang.String), 1.0, 4533, 
4593, createAnotherElement(), 0.0, 4533, 
4594, completeElement(), 0.0, 4533, 
4595, setContent(java.lang.String), 1.0, 4533, 
4596, setEncodedContent(java.lang.String), 1.0, 4533, 
4597, setTagName(java.lang.String), 1.0, 4533, 
4598, setName(java.lang.String), 1.0, 4533, 
4599, toString(java.io.ByteArrayOutputStream, java.io.OutputStreamWriter, java.io.IOException), 0.0, 4533, 
4600, write(java.io.Writer), 1.0, 4533, 
4601, writeWithoutClosingTag(java.io.Writer), 1.0, 4533, 
4602, writeClosingTag(java.io.Writer), 1.0, 4533, 
4603, write(boolean, java.io.Writer, java.util.Enumeration, java.lang.String, freemind.main.XMLElement, java.lang.String), 2.0, 4533, 
4604, writeEncoded(int, char, java.io.Writer, java.lang.String, int), 2.0, 4533, 
4605, scanIdentifier(java.lang.StringBuffer, char), 1.0, 4533, 
4606, scanWhitespace(char), 0.0, 4533, 
4607, scanWhitespace(char, java.lang.StringBuffer), 1.0, 4533, 
4608, scanString(java.lang.StringBuffer, char, char), 1.0, 4533, 
4609, scanPCData(char, java.lang.StringBuffer), 1.0, 4533, 
4610, checkCDATA(int, char, int, java.lang.StringBuffer), 1.0, 4533, 
4611, skipComment(int, char), 0.0, 4533, 
4612, skipSpecialTag(int, char, int, char), 1.0, 4533, 
4613, checkLiteral(int, java.lang.String, int), 1.0, 4533, 
4614, readChar(char, int), 0.0, 4533, 
4615, scanElement(boolean, char, int, java.lang.String, freemind.main.XMLElement, java.lang.String, java.lang.StringBuffer, java.util.regex.Matcher, java.lang.StringBuffer, java.lang.String, freemind.main.XMLElement, java.lang.String), 1.0, 4533, 
4616, resolveEntity(char, java.lang.StringBuffer, java.lang.String, java.lang.StringBuffer, char[], java.lang.NumberFormatException), 1.0, 4533, 
4617, unreadChar(char), 1.0, 4533, 
4618, invalidValueSet(java.lang.String, java.lang.String), 1.0, 4533, 
4619, invalidValue(java.lang.String, java.lang.String, java.lang.String), 2.0, 4533, 
4620, unexpectedEndOfData(java.lang.String), 0.0, 4533, 
4621, syntaxError(java.lang.String, java.lang.String), 1.0, 4533, 
4622, expectedInput(java.lang.String, java.lang.String), 1.0, 4533, 
4623, unknownEntity(java.lang.String, java.lang.String), 1.0, 4533, 
4626, init(freemind.main.FeedBack), 1.0, 4624, 
4627, updateLookAndFeel(java.lang.String, java.lang.Exception), 0.0, 4624, 
4628, isApplet(), 0.0, 4624, 
4629, getPatternsFile(), 0.0, 4624, 
4630, getViewport(), 0.0, 4624, 
4631, getFreemindVersion(), 0.0, 4624, 
4632, getWinHeight(), 0.0, 4624, 
4633, getWinWidth(), 0.0, 4624, 
4634, getWinX(), 0.0, 4624, 
4635, getWinY(), 0.0, 4624, 
4636, getWinState(), 0.0, 4624, 
4637, getResource(java.lang.String), 1.0, 4624, 
4638, getProperty(java.lang.String), 1.0, 4624, 
4639, getIntProperty(int, java.lang.String, java.lang.NumberFormatException), 2.0, 4624, 
4640, getProperties(), 0.0, 4624, 
4641, setProperty(java.lang.String, java.lang.String), 2.0, 4624, 
4642, getDefaultProperty(java.lang.String), 1.0, 4624, 
4643, setDefaultProperty(java.lang.String, java.lang.String), 2.0, 4624, 
4644, getFreemindDirectory(), 0.0, 4624, 
4645, saveProperties(java.io.OutputStream, java.io.OutputStreamWriter, java.lang.Exception), 0.0, 4624, 
4646, getView(), 0.0, 4624, 
4647, getController(), 0.0, 4624, 
4648, setView(freemind.view.mindmapview.MapView), 1.0, 4624, 
4649, getFreeMindMenuBar(), 0.0, 4624, 
4650, out(java.lang.String), 1.0, 4624, 
4651, err(java.lang.String), 1.0, 4624, 
4652, openDocument(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL, Object[], java.text.MessageFormat, java.lang.String, java.io.IOException, java.io.IOException), 1.0, 4624, 
4654, setWaitingCursor(boolean), 1.0, 4624, 
4655, getProgramForFile(java.lang.String, java.lang.String, java.util.StringTokenizer, java.lang.String, java.lang.String, java.util.StringTokenizer), 1.0, 4624, 
4656, getResources(), 0.0, 4624, 
4657, getResourceString(java.lang.String), 1.0, 4624, 
4658, getResourceString(java.lang.String, java.lang.String), 2.0, 4624, 
4659, getLogger(java.util.logging.Logger, freemind.main.LoggingOutputStream, java.lang.String, java.util.logging.Handler, Handler[], java.util.logging.Logger, int, java.util.logging.ConsoleHandler, java.util.logging.Logger, java.lang.Exception), 1.0, 4624, 
4661, setScreenBounds(int, javax.swing.InputMap, int, int, int, int, boolean, int, int, javax.swing.KeyStroke, java.awt.Toolkit, java.awt.Dimension, java.awt.Insets), 0.0, 4624, 
4662, createModeController(String[], java.lang.Class, freemind.modes.ModeController, java.lang.Exception), 1.0, 4624, 
4663, loadMaps(java.lang.String, String[], freemind.modes.ModeController, int, boolean, java.lang.String, java.lang.Exception, java.lang.Exception), 2.0, 4624, 
4664, getJFrame(), 0.0, 4624, 
4665, getFreeMindClassLoader(), 0.0, 4624, 
4666, getFreemindBaseDir(), 0.0, 4624, 
4667, getAdjustableProperty(java.lang.String), 1.0, 4624, 
4668, tabSelectionChanged(freemind.view.MapModule, int, int), 0.0, 4624, 
4669, insertComponentIntoSplitPane(javax.swing.JComponent, int, javax.swing.KeyStroke, javax.swing.KeyStroke, javax.swing.InputMap, int), 1.0, 4624, 
4670, removeSplitPane(), 0.0, 4624, 
4671, removeContentComponent(), 0.0, 4624, 
4672, setContentComponent(), 0.0, 4624, 
4677, getActualValue(), 0.0, 4676, 
4678, increase(java.lang.String), 1.0, 4676, 
4679, progress(java.lang.String, int), 2.0, 4676, 
4680, setMaximumValue(int), 1.0, 4676, 
4683, ExampleFileFilter(), 0.0, 4682, 
4684, ExampleFileFilter(java.lang.String), 1.0, 4682, 
4685, ExampleFileFilter(java.lang.String, java.lang.String), 2.0, 4682, 
4686, ExampleFileFilter(String[]), 1.0, 4682, 
4687, ExampleFileFilter(String[], java.lang.String, int), 2.0, 4682, 
4688, accept(java.io.File, java.lang.String), 1.0, 4682, 
4689, getExtension(java.io.File, java.lang.String, int), 1.0, 4682, 
4690, addExtension(java.lang.String), 1.0, 4682, 
4691, getDescription(java.util.Enumeration), 0.0, 4682, 
4692, setDescription(java.lang.String), 1.0, 4682, 
4693, setExtensionListInDescription(boolean), 1.0, 4682, 
4694, isExtensionListInDescription(), 0.0, 4682, 
4696, FixedHTMLWriter(java.io.Writer, javax.swing.text.html.HTMLDocument), 2.0, 4695, 
4698, convertToHTML(java.lang.String, javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet, java.util.Enumeration, java.lang.Object), 2.0, 4695, 
4699, writeAttributes(javax.swing.text.AttributeSet, java.lang.Object, java.util.Enumeration, javax.swing.text.Element), 1.0, 4695, 
4701, Resources(freemind.main.FreeMindMain), 1.0, 4700, 
4702, createInstance(freemind.main.FreeMindMain), 1.0, 4700, 
4703, getResource(java.lang.String), 1.0, 4700, 
4704, getResourceString(java.lang.String), 1.0, 4700, 
4705, getResourceString(java.lang.String, java.lang.String), 2.0, 4700, 
4706, getInstance(), 0.0, 4700, 
4707, getFreemindDirectory(), 0.0, 4700, 
4708, getFreemindVersion(), 0.0, 4700, 
4709, getIntProperty(java.lang.String, int), 2.0, 4700, 
4710, getBoolProperty(java.lang.String, java.lang.String), 1.0, 4700, 
4711, getProperties(), 0.0, 4700, 
4712, getProperty(java.lang.String), 1.0, 4700, 
4713, getResources(), 0.0, 4700, 
4714, getCountryMap(int, String[]), 0.0, 4700, 
4715, getLogger(java.lang.String), 1.0, 4700, 
4716, logException(java.lang.Throwable), 1.0, 4700, 
4717, logException(java.lang.Throwable, java.lang.String), 2.0, 4700, 
4718, format(Object[], java.lang.String, java.text.MessageFormat, java.lang.String), 2.0, 4700, 
4719, createTranslatedString(java.lang.String, java.lang.String), 1.0, 4700, 
4720, getText(java.lang.String), 1.0, 4700, 
4722, decode64(byte, int, int, byte, byte, int, int, char[], java.lang.String, java.io.ByteArrayOutputStream), 1.0, 4721, 
4723, encode64(int, int, char[], byte[], int, java.lang.StringBuffer), 1.0, 4721, 
4725, windowLostFocus(java.awt.event.WindowEvent), 1.0, 4724, 
4726, windowGainedFocus(java.awt.event.WindowEvent, freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode), 1.0, 4724, 
4729, stateChanged(javax.swing.event.ChangeEvent), 1.0, 4728, 
4735, numberOfOpenMapInformation(int), 1.0, 4731, 
4736, afterMapClose(freemind.modes.Mode, freemind.view.MapModule, int), 2.0, 4731, 
4742, windowClosing(java.awt.event.WindowEvent), 1.0, 4741, 
4744, run(java.lang.InterruptedException), 0.0, 4743, 
4745, searchFocus(java.awt.Component, java.awt.Container, java.awt.Component, int), 1.0, 4743, 
4747, focusGained(java.awt.event.FocusEvent), 1.0, 4746, 
4748, focusLost(java.awt.event.FocusEvent), 1.0, 4746, 
4751, executableByExtension(java.lang.String), 1.0, 4750, 
4752, colorToXml(java.lang.String, java.lang.String, java.lang.String, java.awt.Color), 1.0, 4750, 
4753, xmlToColor(java.lang.String, int, int, int), 1.0, 4750, 
4754, PointToXml(java.awt.Point, java.util.Vector), 1.0, 4750, 
4755, xmlToPoint(java.lang.String, int, int, java.util.ListIterator, java.util.List), 1.0, 4750, 
4756, BooleanToXml(boolean), 1.0, 4750, 
4757, xmlToBoolean(java.lang.String), 1.0, 4750, 
4758, stringToList(java.lang.String, java.util.StringTokenizer, java.util.List), 1.0, 4750, 
4759, listToString(java.lang.String, java.util.List, java.util.ListIterator), 1.0, 4750, 
4760, expandFileName(java.lang.String), 1.0, 4750, 
4761, getAvailableFontFamilyNames(String[], int), 0.0, 4750, 
4762, getAvailableFonts(java.awt.GraphicsEnvironment), 0.0, 4750, 
4763, getAvailableFontFamilyNamesAsVector(String[], java.util.Vector, int), 0.0, 4750, 
4764, isAvailableFontFamily(java.lang.String), 1.0, 4750, 
4765, getExtension(java.io.File), 1.0, 4750, 
4766, getExtension(java.lang.String, int), 1.0, 4750, 
4767, removeExtension(java.lang.String, int), 1.0, 4750, 
4768, isAbsolutePath(java.lang.String, java.lang.String, java.lang.String), 1.0, 4750, 
4769, urlGetFile(java.net.URL, java.lang.String, java.lang.String), 1.0, 4750, 
4770, toRelativeURL(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL, java.net.URL, java.util.StringTokenizer, java.util.StringTokenizer, java.lang.String), 2.0, 4750, 
4771, isPreferenceTrue(java.lang.String), 1.0, 4750, 
4772, safeEquals(java.lang.String, java.lang.String), 2.0, 4750, 
4773, safeEquals(java.lang.Object, java.lang.Object), 2.0, 4750, 
4774, safeEqualsIgnoreCase(java.lang.String, java.lang.String), 2.0, 4750, 
4775, safeEquals(java.awt.Color, java.awt.Color), 2.0, 4750, 
4776, firstLetterCapitalized(java.lang.String), 1.0, 4750, 
4778, expandPlaceholders(java.lang.String, java.lang.String, java.lang.String), 2.0, 4750, 
4781, toBase64(byte[]), 1.0, 4750, 
4782, toBase64(java.lang.String), 1.0, 4750, 
4783, fromBase64(java.lang.String), 1.0, 4750, 
4784, compress(byte[], java.lang.String, java.io.ByteArrayOutputStream, byte[], java.util.zip.Deflater, byte[], int, java.io.IOException), 1.0, 4750, 
4785, decompress(byte[], java.lang.String, java.io.ByteArrayOutputStream, byte[], int, byte[], java.util.zip.Inflater, java.io.IOException), 1.0, 4750, 
4786, byteArrayToUTF8String(byte[], java.io.UnsupportedEncodingException), 1.0, 4750, 
4787, uTF8StringToByteArray(java.lang.String, java.io.UnsupportedEncodingException), 1.0, 4750, 
4788, xmlToDate(java.lang.String, java.lang.Exception), 1.0, 4750, 
4789, dateToString(java.util.Date), 1.0, 4750, 
4790, safeEquals(freemind.main.Tools.BooleanHolder, freemind.main.Tools.BooleanHolder), 2.0, 4750, 
4791, setDialogLocationRelativeTo(int, int, int, int, java.awt.Component, javax.swing.JDialog, int, freemind.view.mindmapview.NodeView, int, int, int, int, int, java.awt.Point, java.awt.Insets, java.awt.Point, int, int, int, int, java.awt.Toolkit, int, java.awt.Container, java.awt.Dimension, int), 2.0, 4750, 
4793, replaceUtf8AndIllegalXmlChars(java.lang.String), 1.0, 4750, 
4794, getActualReader(java.io.Reader), 1.0, 4750, 
4795, getFile(java.io.File, java.io.FileNotFoundException), 1.0, 4750, 
4796, getReaderFromFile(java.io.File), 1.0, 4750, 
4797, getFile(java.io.BufferedReader, java.lang.String, java.io.Reader, java.lang.StringBuffer, java.lang.String, java.lang.Exception, java.lang.Exception), 1.0, 4750, 
4798, logTransferable(DataFlavor[], java.awt.datatransfer.Transferable, int, java.lang.Exception), 1.0, 4750, 
4799, addEscapeActionToDialog(javax.swing.JDialog), 1.0, 4750, 
4800, addEscapeActionToDialog(javax.swing.Action, javax.swing.JDialog), 2.0, 4750, 
4802, removeTranslateComment(java.lang.String), 1.0, 4750, 
4803, getURLWithoutReference(java.net.URL), 1.0, 4750, 
4808, setLabelAndMnemonic(javax.swing.AbstractButton, java.lang.String), 2.0, 4750, 
4809, setLabelAndMnemonic(javax.swing.Action, java.lang.String), 2.0, 4750, 
4810, setLabelAndMnemonic(java.lang.String, freemind.main.Tools.NameMnemonicHolder, java.lang.String, char, int), 2.0, 4750, 
4811, isMacOsX(boolean, java.lang.String), 0.0, 4750, 
4812, removeMnemonic(java.lang.String), 1.0, 4750, 
4813, getKeyStroke(java.lang.String, javax.swing.KeyStroke), 1.0, 4750, 
4814, fileToUrl(java.io.File), 1.0, 4750, 
4815, urlToFile(java.net.URL), 1.0, 4750, 
4816, restoreAntialiasing(java.lang.Object, java.awt.Graphics2D), 2.0, 4750, 
4817, getFileNameProposal(java.lang.String, freemind.modes.MindMapNode), 1.0, 4750, 
4818, waitForEventQueue(java.lang.Exception), 0.0, 4750, 
4819, printStackTrace(), 0.0, 4750, 
4821, compareText(java.lang.String, java.lang.String, int, java.lang.StringBuffer), 2.0, 4750, 
4823, IntHolder(), 0.0, 4822, 
4824, IntHolder(int), 1.0, 4822, 
4825, setValue(int), 1.0, 4822, 
4826, getValue(), 0.0, 4822, 
4827, toString(), 0.0, 4822, 
4829, BooleanHolder(), 0.0, 4828, 
4830, BooleanHolder(boolean), 1.0, 4828, 
4831, setValue(boolean), 1.0, 4828, 
4832, getValue(), 0.0, 4828, 
4834, ObjectHolder(), 0.0, 4833, 
4835, setObject(java.lang.Object), 1.0, 4833, 
4836, getObject(), 0.0, 4833, 
4838, Pair(java.lang.Object, java.lang.Object), 2.0, 4837, 
4839, getFirst(), 0.0, 4837, 
4840, getSecond(), 0.0, 4837, 
4842, DesEncrypter(java.lang.String, java.lang.StringBuffer), 2.0, 4841, 
4843, init(byte[], java.security.spec.AlgorithmParameterSpec, java.security.spec.KeySpec, javax.crypto.SecretKey, java.security.InvalidKeyException), 1.0, 4841, 
4844, encrypt(byte[], java.lang.String, int, byte[], byte[], javax.crypto.BadPaddingException), 1.0, 4841, 
4845, decrypt(java.lang.String, byte[], byte[], int, byte[], java.lang.String, java.io.UnsupportedEncodingException), 1.0, 4841, 
4847, SingleDesEncrypter(java.lang.StringBuffer), 1.0, 4846, 
4849, TripleDesEncrypter(java.lang.StringBuffer), 1.0, 4848, 
4851, run(javax.xml.transform.Transformer, javax.xml.transform.TransformerFactory, java.lang.Exception), 0.0, 4850, 
4852, isSuccessful(), 0.0, 4850, 
4853, getErrorMessage(), 0.0, 4850, 
4856, actionPerformed(java.awt.event.ActionEvent), 1.0, 4855, 
4859, getText(), 0.0, 4858, 
4860, setText(java.lang.String), 1.0, 4858, 
4861, setMnemonic(char), 1.0, 4858, 
4862, setDisplayedMnemonicIndex(int), 1.0, 4858, 
4864, ButtonHolder(javax.swing.AbstractButton), 1.0, 4863, 
4865, getText(), 0.0, 4863, 
4866, setDisplayedMnemonicIndex(int), 1.0, 4863, 
4867, setMnemonic(char), 1.0, 4863, 
4868, setText(java.lang.String), 1.0, 4863, 
4870, ActionHolder(javax.swing.Action), 1.0, 4869, 
4871, getText(), 0.0, 4869, 
4872, setDisplayedMnemonicIndex(int), 1.0, 4869, 
4873, setMnemonic(int, char), 1.0, 4869, 
4874, setText(java.lang.String), 1.0, 4869, 
4876, run(), 0.0, 4875, 
4879, XMLParseException(java.lang.String, java.lang.String), 2.0, 4878, 
4881, getLineNr(), 0.0, 4878, 
4883, LoggingOutputStream(java.util.logging.Logger, java.util.logging.Level), 2.0, 4882, 
4884, flush(java.lang.String), 0.0, 4882, 
4886, FreeMindSecurityManager(), 0.0, 4885, 
4887, setFinalSecurityManager(java.lang.SecurityManager), 1.0, 4885, 
4888, checkAccept(java.lang.String, int), 2.0, 4885, 
4889, checkAccess(java.lang.Thread), 1.0, 4885, 
4890, checkAccess(java.lang.ThreadGroup), 1.0, 4885, 
4891, checkAwtEventQueueAccess(), 0.0, 4885, 
4893, checkConnect(int, java.lang.String), 2.0, 4885, 
4894, checkCreateClassLoader(), 0.0, 4885, 
4895, checkDelete(java.lang.String), 1.0, 4885, 
4896, checkExec(java.lang.String), 1.0, 4885, 
4897, checkExit(int), 1.0, 4885, 
4898, checkLink(java.lang.String), 1.0, 4885, 
4899, checkListen(int), 1.0, 4885, 
4900, checkMemberAccess(int, java.lang.Class), 2.0, 4885, 
4901, checkMulticast(java.net.InetAddress, byte), 2.0, 4885, 
4902, checkMulticast(java.net.InetAddress), 1.0, 4885, 
4903, checkPackageAccess(java.lang.String), 1.0, 4885, 
4904, checkPackageDefinition(java.lang.String), 1.0, 4885, 
4905, checkPermission(java.lang.Object, java.security.Permission), 2.0, 4885, 
4906, checkPermission(java.security.Permission), 1.0, 4885, 
4907, checkPrintJobAccess(), 0.0, 4885, 
4908, checkPropertiesAccess(), 0.0, 4885, 
4909, checkPropertyAccess(java.lang.String), 1.0, 4885, 
4910, checkRead(java.io.FileDescriptor), 1.0, 4885, 
4911, checkRead(java.lang.String, java.lang.Object), 2.0, 4885, 
4912, checkRead(java.lang.String), 1.0, 4885, 
4913, checkSecurityAccess(java.lang.String), 1.0, 4885, 
4914, checkSetFactory(), 0.0, 4885, 
4915, checkSystemClipboardAccess(), 0.0, 4885, 
4916, checkTopLevelWindow(java.lang.Object), 1.0, 4885, 
4917, checkWrite(java.io.FileDescriptor), 1.0, 4885, 
4918, checkWrite(java.lang.String), 1.0, 4885, 
4919, getSecurityContext(), 0.0, 4885, 
4921, getFeedBack(), 0.0, 4920, 
4922, close(), 0.0, 4920, 
4923, setVisible(boolean), 1.0, 4920, 
4924, getWindowIcon(), 0.0, 4920, 
4926, main(String[], java.util.Properties, freemind.main.FreeMindStarter, java.lang.Class, java.util.Properties, java.lang.reflect.Method, java.lang.Exception), 1.0, 4925, 
4927, checkJavaVersion(java.lang.String), 0.0, 4925, 
4928, createUserDirectory(java.util.Properties, java.io.File, java.lang.Exception), 1.0, 4925, 
4929, setDefaultLocale(java.util.Locale, java.lang.String, java.util.Properties), 1.0, 4925, 
4930, readUsersPreferences(java.io.InputStream, java.util.Properties, java.io.File, java.util.Properties, java.lang.Exception), 1.0, 4925, 
4931, getUserPreferencesFile(java.lang.String, java.io.File, java.util.Properties, java.io.File), 1.0, 4925, 
4932, getFreeMindDirectory(java.util.Properties), 1.0, 4925, 
4933, readDefaultPreferences(java.net.URL, java.io.InputStream, java.lang.String, java.util.Properties, java.lang.Exception), 0.0, 4925, 
4936, getJFrame(), 0.0, 4935, 
4937, isApplet(), 0.0, 4935, 
4938, getView(), 0.0, 4935, 
4939, setView(freemind.view.mindmapview.MapView), 1.0, 4935, 
4940, getController(), 0.0, 4935, 
4941, setWaitingCursor(boolean), 1.0, 4935, 
4942, getPatternsFile(), 0.0, 4935, 
4943, getFreeMindMenuBar(), 0.0, 4935, 
4944, getResources(), 0.0, 4935, 
4945, getResourceString(java.lang.String), 1.0, 4935, 
4946, getResourceString(java.lang.String, java.lang.String), 2.0, 4935, 
4947, getContentPane(), 0.0, 4935, 
4948, out(java.lang.String), 1.0, 4935, 
4949, err(java.lang.String), 1.0, 4935, 
4950, openDocument(java.net.URL), 1.0, 4935, 
4951, repaint(), 0.0, 4935, 
4952, getResource(java.lang.String), 1.0, 4935, 
4953, getIntProperty(java.lang.String, int), 2.0, 4935, 
4954, getProperties(), 0.0, 4935, 
4955, getProperty(java.lang.String), 1.0, 4935, 
4956, setProperty(java.lang.String, java.lang.String), 2.0, 4935, 
4957, saveProperties(), 0.0, 4935, 
4958, getFreemindDirectory(), 0.0, 4935, 
4959, getLayeredPane(), 0.0, 4935, 
4960, getViewport(), 0.0, 4935, 
4961, setTitle(java.lang.String), 1.0, 4935, 
4962, getWinHeight(), 0.0, 4935, 
4963, getWinWidth(), 0.0, 4935, 
4964, getWinState(), 0.0, 4935, 
4965, getWinX(), 0.0, 4935, 
4966, getWinY(), 0.0, 4935, 
4967, getFreemindVersion(), 0.0, 4935, 
4968, getLogger(java.lang.String), 1.0, 4935, 
4969, insertComponentIntoSplitPane(javax.swing.JComponent), 1.0, 4935, 
4970, removeSplitPane(), 0.0, 4935, 
4971, getFreeMindClassLoader(), 0.0, 4935, 
4972, getFreemindBaseDir(), 0.0, 4935, 
4973, getAdjustableProperty(java.lang.String), 1.0, 4935, 
4974, setDefaultProperty(java.lang.String, java.lang.String), 2.0, 4935, 
4977, VersionInformation(int, java.lang.String, String[], int, java.util.StringTokenizer, java.util.Vector), 1.0, 4975, 
4978, toString(java.lang.StringBuffer), 0.0, 4975, 
4981, testDifferentBase64ers(java.lang.String, java.lang.String, java.lang.String, java.lang.String), 0.0, 4980, 
4983, FreeMindTestBase(), 0.0, 4982, 
4984, FreeMindTestBase(java.lang.String), 1.0, 4982, 
4985, setUp(), 0.0, 4982, 
4986, getFrame(), 0.0, 4982, 
4988, MindMapControllerMock(tests.freemind.FreeMindMainMock, java.lang.String), 2.0, 4987, 
4989, centerNode(freemind.modes.MindMapNode), 1.0, 4987, 
4990, close(boolean, freemind.controller.MapModuleManager), 2.0, 4987, 
4991, createNodeTreeFromXml(java.util.HashMap, java.io.Reader), 2.0, 4987, 
4992, deregisterNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 4987, 
4993, deregisterNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 4987, 
4994, displayNode(freemind.modes.MindMapNode), 1.0, 4987, 
4995, doubleClick(java.awt.event.MouseEvent), 1.0, 4987, 
4996, extendSelection(java.awt.event.MouseEvent), 1.0, 4987, 
4997, fireNodePreDeleteEvent(freemind.modes.MindMapNode), 1.0, 4987, 
4998, firePreSaveEvent(freemind.modes.MindMapNode), 1.0, 4987, 
4999, getAttributeController(), 0.0, 4987, 
5000, getController(), 0.0, 4987, 
5001, getFrame(), 0.0, 4987, 
5002, getHookFactory(), 0.0, 4987, 
5003, getLastCurrentDir(), 0.0, 4987, 
5004, getLeftToolBar(), 0.0, 4987, 
5005, getLinkShortText(freemind.modes.MindMapNode), 1.0, 4987, 
5006, getMap(), 0.0, 4987, 
5007, getMode(), 0.0, 4987, 
5008, getModeToolBar(), 0.0, 4987, 
5009, getNodeFromID(java.lang.String), 1.0, 4987, 
5010, getNodeID(freemind.modes.MindMapNode), 1.0, 4987, 
5011, getPopupForModel(java.lang.Object), 1.0, 4987, 
5012, getPopupMenu(), 0.0, 4987, 
5013, getResource(java.lang.String), 1.0, 4987, 
5014, getSelected(), 0.0, 4987, 
5015, getSelecteds(), 0.0, 4987, 
5016, getSelectedsByDepth(), 0.0, 4987, 
5017, getSelectionColor(), 0.0, 4987, 
5018, getText(java.lang.String), 1.0, 4987, 
5019, getView(), 0.0, 4987, 
5020, isBlocked(), 0.0, 4987, 
5021, load(java.net.URL), 1.0, 4987, 
5022, loadURL(java.lang.String), 1.0, 4987, 
5023, newMap(), 0.0, 4987, 
5024, nodeChanged(freemind.modes.MindMapNode), 1.0, 4987, 
5025, nodeRefresh(freemind.modes.MindMapNode), 1.0, 4987, 
5026, cut(freemind.modes.MindMapNode), 1.0, 4987, 
5027, copy(boolean, freemind.modes.MindMapNode), 2.0, 4987, 
5028, copy(freemind.modes.MindMapNode), 1.0, 4987, 
5029, copy(), 0.0, 4987, 
5030, copySingle(), 0.0, 4987, 
5031, copy(boolean, java.util.List), 2.0, 4987, 
5032, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 4987, 
5033, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 4987, 
5034, open(), 0.0, 4987, 
5035, plainClick(java.awt.event.MouseEvent), 1.0, 4987, 
5036, registerNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 4987, 
5037, registerNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 4987, 
5038, save(java.io.File), 1.0, 4987, 
5039, save(), 0.0, 4987, 
5040, saveAs(), 0.0, 4987, 
5041, select(freemind.view.mindmapview.NodeView), 1.0, 4987, 
5042, select(freemind.modes.MindMapNode), 1.0, 4987, 
5043, setFolded(boolean, freemind.modes.MindMapNode), 2.0, 4987, 
5044, setLastCurrentDir(java.io.File), 1.0, 4987, 
5045, setModel(freemind.modes.MapAdapter), 1.0, 4987, 
5046, setVisible(boolean), 1.0, 4987, 
5047, showPopupMenu(java.awt.event.MouseEvent), 1.0, 4987, 
5048, shutdownController(), 0.0, 4987, 
5049, sortNodesByDepth(java.util.List), 1.0, 4987, 
5050, startupController(), 0.0, 4987, 
5051, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 4987, 
5052, updatePopupMenu(freemind.controller.StructuredMenuHolder), 1.0, 4987, 
5053, getSelectedView(), 0.0, 4987, 
5054, getNodeView(freemind.modes.MindMapNode), 1.0, 4987, 
5055, refreshMap(), 0.0, 4987, 
5056, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 4987, 
5057, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 4987, 
5058, setBackgroundColor(java.awt.Color), 1.0, 4987, 
5059, getFileChooser(javax.swing.filechooser.FileFilter), 1.0, 4987, 
5060, load(java.io.File), 1.0, 4987, 
5062, main(String[], junit.framework.TestResult), 1.0, 5061, 
5063, suite(junit.framework.TestSuite), 0.0, 5061, 
5065, testSetHtml(freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 5064, 
5066, testEndContentMatcher(), 0.0, 5064, 
5067, matchingTest(java.lang.String), 1.0, 5064, 
5068, testNanoXmlContent(freemind.main.XMLElement), 0.0, 5064, 
5069, testXHtmlToHtmlConversion(), 0.0, 5064, 
5070, testWellFormedXml(), 0.0, 5064, 
5071, testBr(java.lang.String, java.lang.String), 0.0, 5064, 
5072, testSpaceHandling(java.lang.String), 0.0, 5064, 
5073, testSpaceHandlingInShtmlIdempotency(java.lang.String, com.lightdev.app.shtm.SHTMLPanel), 0.0, 5064, 
5074, testSpaceRemovalInShtml(java.lang.String, com.lightdev.app.shtm.SHTMLPanel), 0.0, 5064, 
5075, getInputStringWithManySpaces(java.lang.String, java.lang.String, java.lang.String), 1.0, 5064, 
5076, getHtmlBody(java.lang.String, java.lang.String), 1.0, 5064, 
5077, testUnicodeHandling(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String), 0.0, 5064, 
5078, testHtmlBodyExtraction(java.lang.String, java.lang.String), 0.0, 5064, 
5079, testIllegalXmlChars(), 0.0, 5064, 
5080, testSpaceReplacements(), 0.0, 5064, 
5082, testLightBuldSplash(int, freemind.main.IFreeMindSplash), 0.0, 5081, 
5084, testPanel(plugins.script.ScriptEditorPanel), 0.0, 5083, 
5085, testErrorLineNumbers(java.lang.String), 0.0, 5083, 
5087, getAmountOfScripts(), 0.0, 5086, 
5088, getScript(int), 1.0, 5086, 
5089, setScript(plugins.script.ScriptEditorPanel.ScriptHolder, int), 2.0, 5086, 
5092, decorateDialog(plugins.script.ScriptEditorPanel, java.lang.String, freemind.controller.actions.generated.instance.ScriptEditorWindowConfigurationStorage), 2.0, 5086, 
5093, endDialog(boolean), 1.0, 5086, 
5094, isDirty(), 0.0, 5086, 
5095, addNewScript(), 0.0, 5086, 
5098, testNewLines(freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.PatternChild, java.lang.String), 0.0, 5097, 
5100, TransformTest(), 0.0, 5099, 
5101, testExportHtml(java.lang.String, java.util.Properties, java.lang.String), 0.0, 5099, 
5102, testExportHtmlWithImage(java.lang.String, java.lang.String, java.util.Properties), 0.0, 5099, 
5103, testExportHtmlApplet(java.lang.String, java.util.Properties, java.lang.String), 0.0, 5099, 
5104, testExportHtmlFlash(java.lang.String, java.util.Properties, java.lang.String), 0.0, 5099, 
5105, testExportOoo(java.lang.String, java.util.Properties, java.lang.String), 0.0, 5099, 
5106, getProperties(freemind.controller.actions.generated.instance.Plugin, java.lang.String, java.lang.String, org.jibx.runtime.IUnmarshallingContext, java.net.URL, freemind.controller.actions.generated.instance.PluginProperty, java.util.Iterator, java.lang.Object, java.io.InputStream, java.util.Iterator, java.lang.Object, freemind.controller.actions.generated.instance.PluginAction, java.util.Properties), 2.0, 5099, 
5110, testSignedInitialization(plugins.script.SignedScriptHandler, java.io.ByteArrayOutputStream), 0.0, 5109, 
5111, testScriptContents(plugins.script.SignedScriptHandler.ScriptContents), 0.0, 5109, 
5113, FreeMindMainMock(), 0.0, 5112, 
5114, getJFrame(), 0.0, 5112, 
5115, isApplet(), 0.0, 5112, 
5116, getView(), 0.0, 5112, 
5117, setView(freemind.view.mindmapview.MapView), 1.0, 5112, 
5118, getController(), 0.0, 5112, 
5119, setWaitingCursor(boolean), 1.0, 5112, 
5120, getPatternsFile(), 0.0, 5112, 
5121, getFreeMindMenuBar(), 0.0, 5112, 
5122, getResources(), 0.0, 5112, 
5123, getResourceString(java.lang.String), 1.0, 5112, 
5124, getResourceString(java.lang.String, java.lang.String), 2.0, 5112, 
5125, getContentPane(), 0.0, 5112, 
5126, out(java.lang.String), 1.0, 5112, 
5127, err(java.lang.String), 1.0, 5112, 
5128, openDocument(java.net.URL), 1.0, 5112, 
5129, repaint(), 0.0, 5112, 
5130, getResource(java.lang.String), 1.0, 5112, 
5131, getIntProperty(java.lang.String, int), 2.0, 5112, 
5132, getProperties(), 0.0, 5112, 
5133, getProperty(java.lang.String), 1.0, 5112, 
5134, setProperty(java.lang.String, java.lang.String), 2.0, 5112, 
5135, saveProperties(), 0.0, 5112, 
5136, getFreemindDirectory(), 0.0, 5112, 
5137, getLayeredPane(), 0.0, 5112, 
5138, getViewport(), 0.0, 5112, 
5139, setTitle(java.lang.String), 1.0, 5112, 
5140, getWinHeight(), 0.0, 5112, 
5141, getWinWidth(), 0.0, 5112, 
5142, getWinState(), 0.0, 5112, 
5143, getWinX(), 0.0, 5112, 
5144, getWinY(), 0.0, 5112, 
5145, getFreemindVersion(), 0.0, 5112, 
5146, getLogger(java.lang.String), 1.0, 5112, 
5147, getFreeMindClassLoader(), 0.0, 5112, 
5148, getFreemindBaseDir(), 0.0, 5112, 
5149, getAdjustableProperty(java.lang.String), 1.0, 5112, 
5150, setDefaultProperty(java.lang.String, java.lang.String), 2.0, 5112, 
5151, insertComponentIntoSplitPane(javax.swing.JComponent), 1.0, 5112, 
5152, removeSplitPane(), 0.0, 5112, 
5154, MindMapMock(java.lang.String), 1.0, 5153, 
5155, getModeController(), 0.0, 5153, 
5156, nodeChanged(javax.swing.tree.TreeNode), 1.0, 5153, 
5157, nodeRefresh(javax.swing.tree.TreeNode), 1.0, 5153, 
5158, getAsPlainText(java.util.List), 1.0, 5153, 
5159, getAsRTF(java.util.List), 1.0, 5153, 
5160, getAsHTML(java.util.List), 1.0, 5153, 
5162, getFile(), 0.0, 5153, 
5163, getURL(), 0.0, 5153, 
5164, getXml(java.io.Writer), 1.0, 5153, 
5165, getFilteredXml(java.io.Writer), 1.0, 5153, 
5166, getRestoreable(), 0.0, 5153, 
5167, getPathToRoot(javax.swing.tree.TreeNode), 1.0, 5153, 
5168, getBackgroundColor(), 0.0, 5153, 
5169, setBackgroundColor(java.awt.Color), 1.0, 5153, 
5170, getLinkRegistry(), 0.0, 5153, 
5171, destroy(), 0.0, 5153, 
5172, isReadOnly(), 0.0, 5153, 
5173, getRegistry(), 0.0, 5153, 
5174, getFilter(), 0.0, 5153, 
5175, setFilter(freemind.controller.filter.Filter), 1.0, 5153, 
5176, getRoot(), 0.0, 5153, 
5177, getChild(int, java.lang.Object), 2.0, 5153, 
5178, getChildCount(java.lang.Object), 1.0, 5153, 
5179, isLeaf(java.lang.Object), 1.0, 5153, 
5180, valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object), 2.0, 5153, 
5181, getIndexOfChild(java.lang.Object, java.lang.Object), 2.0, 5153, 
5182, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 5153, 
5183, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 5153, 
5184, getRootNode(), 0.0, 5153, 
5185, insertNodeInto(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 5153, 
5186, nodeStructureChanged(javax.swing.tree.TreeNode), 1.0, 5153, 
5187, setSaved(boolean), 1.0, 5153, 
5188, isSaved(), 0.0, 5153, 
5190, testDialog(int, javax.swing.JFrame), 0.0, 5189, 
5192, getText(java.lang.String), 1.0, 5191, 
5195, getProperty(), 0.0, 5194, 
5196, setProperty(java.lang.String), 1.0, 5194, 
5199, getText(java.lang.String), 1.0, 5198, 
5202, getProperty(), 0.0, 5201, 
5203, setProperty(java.lang.String), 1.0, 5201, 
5206, getText(java.lang.String), 1.0, 5205, 
5209, getProperty(), 0.0, 5208, 
5210, setProperty(java.lang.String), 1.0, 5208, 
5213, getText(java.lang.String), 1.0, 5212, 
5216, getProperty(), 0.0, 5215, 
5217, setProperty(java.lang.String), 1.0, 5215, 
5221, startupMapHook(java.sql.Connection, freemind.modes.mindmapmode.MindMapController, plugins.collaboration.database.DatabaseBasics.FormDialog, java.lang.String, freemind.common.NumberProperty, freemind.common.StringProperty, java.util.Vector, java.lang.Thread, freemind.common.StringProperty, java.lang.String, java.lang.Exception), 0.0, 5220, 
5222, loadFrom(freemind.main.XMLElement), 1.0, 5220, 
5223, save(freemind.main.XMLElement), 1.0, 5220, 
5224, shutdownMapHook(), 0.0, 5220, 
5225, onAddChild(freemind.modes.MindMapNode), 1.0, 5220, 
5226, onAddChildren(freemind.modes.MindMapNode), 1.0, 5220, 
5227, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 5220, 
5228, onNewChild(freemind.modes.MindMapNode), 1.0, 5220, 
5229, onRemoveChild(freemind.modes.MindMapNode), 1.0, 5220, 
5230, onRemoveChildren(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 5220, 
5231, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 5220, 
5232, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 5220, 
5233, onUpdateNodeHook(), 0.0, 5220, 
5234, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 5220, 
5235, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 5220, 
5237, isValid(), 0.0, 5236, 
5239, run(), 0.0, 5238, 
5242, startupMapHook(java.sql.Connection, freemind.modes.mindmapmode.MindMapController, freemind.common.StringProperty, plugins.collaboration.database.DatabaseBasics.FormDialog, java.lang.String, java.util.Vector, freemind.common.NumberProperty, freemind.common.StringProperty, plugins.collaboration.database.DatabaseConnectionHook, java.lang.Exception), 0.0, 5241, 
5243, isConnected(java.util.Iterator, java.util.Collection, freemind.extensions.PermanentNodeHook), 0.0, 5241, 
5245, startupMapHook(), 0.0, 5244, 
5246, loadFrom(freemind.main.XMLElement), 1.0, 5244, 
5247, save(freemind.main.XMLElement), 1.0, 5244, 
5248, shutdownMapHook(), 0.0, 5244, 
5249, shutdownConnection(), 0.0, 5244, 
5250, onAddChild(freemind.modes.MindMapNode), 1.0, 5244, 
5251, onAddChildren(freemind.modes.MindMapNode), 1.0, 5244, 
5252, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 5244, 
5253, onNewChild(freemind.modes.MindMapNode), 1.0, 5244, 
5254, onRemoveChild(freemind.modes.MindMapNode), 1.0, 5244, 
5255, onRemoveChildren(freemind.modes.MindMapNode, freemind.modes.MindMapNode), 2.0, 5244, 
5256, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 5244, 
5257, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 5244, 
5258, onUpdateNodeHook(), 0.0, 5244, 
5259, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 5244, 
5260, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 5244, 
5262, DatabaseRegistration(freemind.modes.MindMap, freemind.modes.ModeController), 2.0, 5261, 
5263, register(), 0.0, 5261, 
5264, deRegister(), 0.0, 5261, 
5265, isSelected(javax.swing.JMenuItem, javax.swing.Action, freemind.modes.mindmapmode.actions.NodeHookAction), 2.0, 5261, 
5266, isMaster(freemind.extensions.PermanentNodeHook, java.util.Iterator, java.util.Collection), 0.0, 5261, 
5267, isSlave(java.util.Iterator, freemind.extensions.PermanentNodeHook, java.util.Collection), 0.0, 5261, 
5268, isEnabled(javax.swing.Action, javax.swing.JMenuItem, freemind.modes.mindmapmode.actions.NodeHookAction), 2.0, 5261, 
5270, UpdateThread(java.sql.Connection, freemind.modes.mindmapmode.MindMapController), 2.0, 5269, 
5271, run(java.lang.String, java.lang.Exception), 0.0, 5269, 
5272, commitSuicide(int, java.lang.InterruptedException), 0.0, 5269, 
5273, shutdown(boolean, java.sql.Statement, java.lang.Exception), 1.0, 5269, 
5274, processResults(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, java.sql.ResultSet, long, java.lang.String, java.lang.String, java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.Exception), 1.0, 5269, 
5275, createNewMap(freemind.modes.mindmapmode.MindMapController, java.lang.String, java.util.Iterator, freemind.modes.MapAdapter, java.util.HashMap, freemind.extensions.PermanentNodeHook, plugins.collaboration.database.DatabaseConnectionHook, freemind.modes.mindmapmode.MindMapNodeModel, java.util.Collection, java.io.StringReader), 1.0, 5269, 
5276, executeTransaction(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 5269, 
5277, insertIntoActionTable(java.lang.String), 1.0, 5269, 
5278, query(java.sql.ResultSet, java.sql.Statement, java.lang.String, plugins.collaboration.database.DatabaseBasics.ResultHandler), 2.0, 5269, 
5279, update(java.sql.Statement, java.lang.String, int), 1.0, 5269, 
5280, filterAction(freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.String, java.lang.String, java.lang.String, java.sql.SQLException), 1.0, 5269, 
5281, escapeQuotations(java.lang.String), 1.0, 5269, 
5282, deregisterFilter(), 0.0, 5269, 
5283, registerFilter(), 0.0, 5269, 
5284, setupTables(java.lang.String, java.io.StringWriter, java.lang.String), 1.0, 5269, 
5285, createTables(java.lang.String), 1.0, 5269, 
5286, signalEndOfSession(java.lang.String, java.lang.Exception), 0.0, 5269, 
5288, run(), 0.0, 5287, 
5291, DatabaseBasics(), 0.0, 5290, 
5292, startupMapHook(), 0.0, 5290, 
5293, togglePermanentHook(freemind.modes.mindmapmode.MindMapController, freemind.modes.MindMapNode, java.util.List), 1.0, 5290, 
5294, setPortProperty(freemind.common.NumberProperty), 1.0, 5290, 
5295, getPortProperty(freemind.common.NumberProperty), 0.0, 5290, 
5296, setUpdateThread(plugins.collaboration.database.UpdateThread), 1.0, 5290, 
5297, getUpdateThread(), 0.0, 5290, 
5299, processResults(java.sql.ResultSet), 1.0, 5298, 
5301, isValid(), 0.0, 5300, 
5304, isSuccess(), 0.0, 5303, 
5305, FormDialog(freemind.modes.mindmapmode.MindMapController), 1.0, 5303, 
5306, setUp(java.util.Vector), 1.0, 5303, 
5307, setUp(plugins.collaboration.database.DatabaseBasics.FormDialogValidator, com.jgoodies.forms.layout.FormLayout, java.util.Vector, java.util.Iterator, freemind.common.PropertyControl, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JButton, javax.swing.Action, freemind.common.PropertyBean, javax.swing.Action), 2.0, 5303, 
5308, closeWindow(), 0.0, 5303, 
5309, getText(java.lang.String), 1.0, 5303, 
5310, propertyChange(java.beans.PropertyChangeEvent), 1.0, 5303, 
5312, isValid(), 0.0, 5311, 
5314, actionPerformed(java.awt.event.ActionEvent), 1.0, 5313, 
5317, actionPerformed(java.awt.event.ActionEvent), 1.0, 5316, 
5320, windowClosing(java.awt.event.WindowEvent), 1.0, 5319, 
5322, actionPerformed(java.awt.event.ActionEvent), 1.0, 5321, 
5324, actionPerformed(java.awt.event.ActionEvent), 1.0, 5323, 
5327, MindMapNodeHookAdapter(), 0.0, 5326, 
5328, getMindMapController(), 0.0, 5326, 
5330, PermanentMindMapNodeHookAdapter(), 0.0, 5329, 
5331, getMindMapController(), 0.0, 5329, 
5332, propagate(freemind.modes.MindMapNode, freemind.extensions.PermanentNodeHook), 1.0, 5329, 
5333, setToolTip(java.lang.String, java.lang.String), 2.0, 5329, 
5336, MindMapHookFactory(freemind.main.FreeMindMain), 1.0, 5335, 
5337, getPossibleNodeHooks(), 0.0, 5335, 
5338, getPossibleModeControllerHooks(), 0.0, 5335, 
5339, searchFor(java.lang.Class, java.lang.Class, java.lang.String, java.lang.String, java.util.Vector, java.util.Iterator, java.util.Iterator, freemind.extensions.HookDescriptorPluginAction, java.lang.String, java.lang.ClassNotFoundException), 2.0, 5335, 
5340, actualizePlugins(freemind.controller.actions.generated.instance.Plugin, java.lang.String, freemind.controller.actions.generated.instance.PluginRegistration, freemind.controller.actions.generated.instance.PluginAction, java.net.URL, java.io.InputStream, java.util.Iterator, java.lang.Object, java.util.Iterator, org.jibx.runtime.IUnmarshallingContext, java.lang.Exception), 0.0, 5335, 
5341, createModeControllerHook(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 5335, 
5342, createJavaHook(freemind.extensions.HookDescriptorPluginAction, java.lang.String, java.lang.Class, freemind.extensions.MindMapHook, java.lang.ClassLoader, java.lang.Exception), 2.0, 5335, 
5343, createNodeHook(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 5335, 
5345, decorateAction(javax.swing.AbstractAction, java.lang.String, javax.swing.ImageIcon, java.lang.String, java.lang.String, java.lang.String, freemind.extensions.HookDescriptorPluginAction, java.lang.String), 2.0, 5335, 
5346, getHookMenuPositions(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 5335, 
5347, getInstanciationMethod(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 5335, 
5348, getRegistrations(freemind.controller.actions.generated.instance.Plugin, java.lang.Class, freemind.extensions.HookFactory.RegistrationContainer, boolean, java.lang.ClassLoader, freemind.extensions.HookDescriptorRegistration, java.util.Vector, java.util.Iterator, java.lang.Class, freemind.controller.actions.generated.instance.PluginMode, java.util.Iterator, java.lang.ClassNotFoundException), 0.0, 5335, 
5349, getPluginBaseClass(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 5335, 
5350, getPluginBaseClass(java.lang.Object, freemind.extensions.HookDescriptorPluginAction, java.lang.String), 1.0, 5335, 
5351, getHookDescriptor(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 5335, 
5352, getMenuItem(javax.swing.AbstractAction, java.lang.String, freemind.extensions.HookDescriptorPluginAction), 2.0, 5335, 
5354, getPluginBaseObject(), 0.0, 5353, 
5357, MindMapHookAdapter(), 0.0, 5356, 
5358, getMindMapController(), 0.0, 5356, 
5361, AbstractActorXml(freemind.modes.mindmapmode.MindMapController), 1.0, 5360, 
5362, getNode(java.lang.String), 1.0, 5360, 
5363, getNodeID(freemind.modes.MindMapNode), 1.0, 5360, 
5364, getAttributeController(), 0.0, 5360, 
5365, getAttributeRegistry(), 0.0, 5360, 
5366, createCompoundAction(), 0.0, 5360, 
5368, act(freemind.controller.actions.generated.instance.XmlAction), 1.0, 5367, 
5369, getDoActionClass(), 0.0, 5367, 
5371, ActionPair(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction), 2.0, 5370, 
5372, getDoAction(), 0.0, 5370, 
5373, getUndoAction(), 0.0, 5370, 
5374, reverse(), 0.0, 5370, 
5376, ActionFactory(freemind.controller.Controller), 1.0, 5375, 
5377, registerHandler(freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 5375, 
5378, deregisterHandler(freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 5375, 
5379, registerFilter(freemind.modes.mindmapmode.actions.xml.ActionFilter), 1.0, 5375, 
5380, deregisterFilter(freemind.modes.mindmapmode.actions.xml.ActionFilter), 1.0, 5375, 
5381, startTransaction(java.lang.String, java.util.Iterator, freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 5375, 
5382, endTransaction(java.lang.String, java.util.Iterator, freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 5375, 
5383, executeAction(freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.mindmapmode.actions.xml.ActionFilter, boolean, int, freemind.modes.mindmapmode.actions.xml.ActionHandler, Object[], java.lang.Exception), 1.0, 5375, 
5384, getController(), 0.0, 5375, 
5385, registerActor(freemind.modes.mindmapmode.actions.xml.ActorXml, java.lang.Class), 2.0, 5375, 
5386, deregisterActor(java.lang.Class), 1.0, 5375, 
5387, getActor(freemind.controller.actions.generated.instance.XmlAction, java.util.Iterator, java.lang.Class), 1.0, 5375, 
5388, registerUndoHandler(freemind.modes.mindmapmode.actions.xml.UndoActionHandler), 1.0, 5375, 
5391, actionPerformed(java.awt.event.ActionEvent), 1.0, 5389, 
5392, xmlActionPerformed(java.awt.event.ActionEvent), 1.0, 5389, 
5393, getActionFactory(), 0.0, 5389, 
5394, getMindMapController(), 0.0, 5389, 
5395, addActor(freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 5389, 
5396, getActor(), 0.0, 5389, 
5398, executeAction(freemind.controller.actions.generated.instance.XmlAction), 1.0, 5397, 
5399, startTransaction(java.lang.String), 1.0, 5397, 
5400, endTransaction(java.lang.String), 1.0, 5397, 
5403, executeAction(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 5401, 
5404, startTransaction(java.lang.String), 1.0, 5401, 
5405, endTransaction(java.lang.String), 1.0, 5401, 
5407, PrintActionHandler(freemind.modes.mindmapmode.MindMapController), 1.0, 5406, 
5408, startTransaction(java.lang.String), 1.0, 5406, 
5409, endTransaction(java.lang.String), 1.0, 5406, 
5410, executeAction(freemind.controller.actions.generated.instance.XmlAction, java.lang.String), 1.0, 5406, 
5412, filterAction(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 5411, 
5415, getController(), 0.0, 5414, 
5416, NodeHookUndoableContentActor(freemind.modes.mindmapmode.MindMapController), 1.0, 5414, 
5420, findHook(freemind.modes.MindMapNode, java.lang.String, java.util.Iterator, freemind.extensions.StatefulNodeHook, freemind.extensions.PermanentNodeHook), 2.0, 5414, 
5422, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.HookContentNodeAction, freemind.modes.MindMapNode), 1.0, 5414, 
5423, getDoActionClass(), 0.0, 5414, 
5426, MindMapMouseMotionManager(freemind.modes.mindmapmode.MindMapController), 1.0, 5425, 
5427, mouseDragged(java.awt.event.MouseEvent, freemind.view.mindmapview.MapView, int, int), 1.0, 5425, 
5428, mousePressed(java.awt.event.MouseEvent), 1.0, 5425, 
5429, mouseReleased(java.awt.event.MouseEvent, java.awt.Point, java.awt.Point), 1.0, 5425, 
5431, MindMapNodeDropListener(freemind.modes.mindmapmode.MindMapController), 1.0, 5430, 
5432, isDragAcceptable(java.awt.dnd.DropTargetDragEvent), 1.0, 5430, 
5433, isDropAcceptable(java.awt.dnd.DropTargetDropEvent, freemind.modes.MindMapNode, freemind.modes.MindMapNode), 1.0, 5430, 
5434, drop(java.awt.dnd.DropTargetDropEvent, boolean, int, java.lang.String, freemind.modes.mindmapmode.MindMapMapModel, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.MindMapNode, java.awt.datatransfer.Transferable, freemind.modes.mindmapmode.MindMapNodeModel, int, freemind.modes.MindMapNode, java.lang.String, java.awt.datatransfer.Transferable, java.util.List, freemind.view.mindmapview.MainView, freemind.view.mindmapview.NodeView, java.lang.Exception), 1.0, 5430, 
5435, dragEnter(java.awt.dnd.DropTargetDragEvent), 1.0, 5430, 
5436, dragOver(boolean, java.awt.dnd.DropTargetDragEvent, int, freemind.view.mindmapview.MainView, int), 1.0, 5430, 
5437, dragExit(java.awt.dnd.DropTargetEvent, freemind.view.mindmapview.MainView), 1.0, 5430, 
5438, dragScroll(java.awt.dnd.DropTargetDragEvent), 1.0, 5430, 
5439, dropActionChanged(java.awt.dnd.DropTargetDragEvent), 1.0, 5430, 
5441, MindMapNodeMotionListener(freemind.modes.mindmapmode.MindMapController), 1.0, 5440, 
5442, mouseMoved(java.awt.event.MouseEvent), 1.0, 5440, 
5443, mouseDragged(java.awt.Point, java.awt.event.MouseEvent, freemind.view.mindmapview.NodeMotionListenerView, freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode, java.awt.Point, freemind.view.mindmapview.MapView), 1.0, 5440, 
5447, mouseClicked(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode), 1.0, 5440, 
5448, getNodeView(java.awt.event.MouseEvent), 1.0, 5440, 
5449, mouseEntered(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeMotionListenerView), 1.0, 5440, 
5450, mouseExited(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeMotionListenerView), 1.0, 5440, 
5451, stopDrag(), 0.0, 5440, 
5452, mouseReleased(java.awt.event.MouseEvent, int, freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView, java.awt.Point, int, freemind.modes.MindMapNode, int, freemind.view.mindmapview.NodeMotionListenerView), 1.0, 5440, 
5453, resetPositions(freemind.modes.MindMapNode), 1.0, 5440, 
5454, isActive(), 0.0, 5440, 
5455, setDragStartingPoint(java.awt.Point, freemind.modes.MindMapNode), 2.0, 5440, 
5456, getDragStartingPoint(), 0.0, 5440, 
5458, run(java.awt.Rectangle, boolean), 0.0, 5457, 
5462, SchemeNodeModel(freemind.main.FreeMindMain, freemind.modes.MindMap), 2.0, 5461, 
5463, toString(java.lang.String), 0.0, 5461, 
5464, getCodeMathStyle(java.lang.String, java.util.ListIterator), 0.0, 5461, 
5465, getCodeClassicStyle(java.lang.String, java.util.ListIterator), 0.0, 5461, 
5466, isWriteable(), 0.0, 5461, 
5468, SchemeController(freemind.modes.Mode), 1.0, 5467, 
5469, newModel(freemind.modes.ModeController), 1.0, 5467, 
5470, newNode(freemind.modes.MindMap, java.lang.Object), 2.0, 5467, 
5471, saveAs(javax.swing.JFileChooser, int, java.io.File), 0.0, 5467, 
5472, getPopupMenu(), 0.0, 5467, 
5473, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 5467, 
5474, getHookFactory(), 0.0, 5467, 
5476, EvaluateAction(), 0.0, 5475, 
5477, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.lang.String, java.util.StringTokenizer), 1.0, 5475, 
5479, SchemePopupMenu(freemind.modes.schememode.SchemeController), 1.0, 5478, 
5481, SchemeMapModel(freemind.main.FreeMindMain, freemind.modes.ModeController), 2.0, 5480, 
5482, save(java.io.File, java.io.BufferedWriter, java.lang.Exception), 1.0, 5480, 
5483, load(java.io.File, java.net.URL, java.io.IOException), 1.0, 5480, 
5484, loadMathStyle(freemind.modes.schememode.SchemeNodeModel, freemind.modes.schememode.SchemeNodeModel, java.io.Reader, java.io.StreamTokenizer, java.lang.String), 1.0, 5480, 
5485, getCode(), 0.0, 5480, 
5486, toString(), 0.0, 5480, 
5487, getXml(java.io.Writer), 1.0, 5480, 
5488, getFilteredXml(java.io.Writer), 1.0, 5480, 
5490, SchemeMode(), 0.0, 5489, 
5491, init(freemind.controller.Controller), 1.0, 5489, 
5492, toString(), 0.0, 5489, 
5493, activate(), 0.0, 5489, 
5494, restore(java.lang.String), 1.0, 5489, 
5495, getController(), 0.0, 5489, 
5496, getDefaultModeController(), 0.0, 5489, 
5497, getFrame(), 0.0, 5489, 
5498, createModeController(), 0.0, 5489, 
5500, SchemeToolBar(javax.swing.JButton, freemind.modes.schememode.SchemeController), 1.0, 5499, 
5502, SchemeEdgeModel(freemind.main.FreeMindMain, freemind.modes.MindMapNode), 2.0, 5501, 
5505, FlatNodeTableFilterModel(int, javax.swing.table.TableModel), 2.0, 5504, 
5506, resetFilter(), 0.0, 5504, 
5507, setFilter(java.lang.String), 1.0, 5504, 
5508, updateIndexArray(java.util.ArrayList, int, accessories.plugins.time.TimeList.NodeHolder), 0.0, 5504, 
5509, getRowCount(), 0.0, 5504, 
5510, getColumnCount(), 0.0, 5504, 
5511, getColumnName(int), 1.0, 5504, 
5512, getColumnClass(int), 1.0, 5504, 
5513, getValueAt(int, int, int), 2.0, 5504, 
5515, tableChanged(javax.swing.event.TableModelEvent), 1.0, 5514, 
5518, startupMapHook(java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.Container, javax.swing.JButton, javax.swing.Action, javax.swing.JButton, javax.swing.JButton, javax.swing.JButton), 0.0, 5517, 
5519, getTimePanel(java.awt.GridBagConstraints, java.lang.String), 0.0, 5517, 
5520, propertyChange(java.beans.PropertyChangeEvent), 1.0, 5517, 
5521, actionPerformed(java.awt.event.ActionEvent, Object[], freemind.modes.MindMapNode, freemind.extensions.PermanentNodeHook, freemind.modes.common.plugins.ReminderHookBase, java.util.Iterator, int, java.util.List, freemind.modes.common.plugins.ReminderHookBase, java.lang.String, java.util.Date, java.text.MessageFormat), 1.0, 5517, 
5522, addHook(freemind.modes.MindMapNode, java.util.List), 1.0, 5517, 
5523, disposeDialog(), 0.0, 5517, 
5524, getCalendarDate(int, java.util.Calendar, java.lang.Exception), 0.0, 5517, 
5525, afterMapClose(freemind.view.MapModule, freemind.modes.Mode), 2.0, 5517, 
5529, numberOfOpenMapInformation(int), 1.0, 5517, 
5531, windowClosing(java.awt.event.WindowEvent), 1.0, 5530, 
5533, actionPerformed(java.awt.event.ActionEvent), 1.0, 5532, 
5535, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, freemind.modes.MindMapNode, java.text.DateFormat, java.lang.String), 1.0, 5534, 
5538, actionPerformed(java.awt.event.ActionEvent), 1.0, 5537, 
5541, actionPerformed(java.awt.event.ActionEvent), 1.0, 5540, 
5544, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, freemind.modes.common.plugins.ReminderHookBase, freemind.modes.MindMapNode), 1.0, 5543, 
5547, RemoveReminderHook(), 0.0, 5546, 
5548, invoke(freemind.modes.MindMapNode, java.util.List, freemind.modes.common.plugins.ReminderHookBase), 1.0, 5546, 
5550, JTripleCalendar(java.awt.GridLayout), 0.0, 5549, 
5551, createInfoPanel(accessories.plugins.time.JTripleCalendar.JInfoPanel), 0.0, 5549, 
5552, main(String[], accessories.plugins.time.JTripleCalendar, javax.swing.JFrame), 1.0, 5549, 
5553, propertyChange(java.beans.PropertyChangeEvent, java.util.Calendar), 1.0, 5549, 
5554, getCalendar(), 0.0, 5549, 
5555, getDate(), 0.0, 5549, 
5556, getDayChooser(), 0.0, 5549, 
5557, setDate(java.util.Date), 1.0, 5549, 
5558, setCalendar(java.util.Calendar), 1.0, 5549, 
5559, getYearChooser(), 0.0, 5549, 
5561, JInfoPanel(javax.swing.JPanel), 0.0, 5560, 
5562, setDate(java.util.Calendar, int, int), 1.0, 5560, 
5564, init(), 0.0, 5563, 
5566, setMonthChooser(accessories.plugins.time.JMonthChooser), 1.0, 5565, 
5567, setYearChooser(accessories.plugins.time.JYearChooser), 1.0, 5565, 
5568, JDayChooser(), 0.0, 5565, 
5569, JDayChooser(boolean, int, int, int, java.util.Calendar, int), 1.0, 5565, 
5570, init(javax.swing.JButton, java.util.Date), 0.0, 5565, 
5571, drawDayNames(int, int, int, java.text.DateFormatSymbols), 0.0, 5565, 
5572, initDecorations(int), 0.0, 5565, 
5573, drawWeeks(java.lang.String, java.util.Calendar, int, int), 0.0, 5565, 
5574, drawDays(int, int, java.util.Date, java.util.Calendar, int, int, int, java.util.Calendar, java.util.Calendar, java.awt.Color, java.util.Date), 0.0, 5565, 
5575, getLocale(), 0.0, 5565, 
5576, setLocale(java.util.Locale), 1.0, 5565, 
5577, setDay(int, java.util.Calendar, int, int, int), 1.0, 5565, 
5578, setAlwaysFireDayProperty(boolean), 1.0, 5565, 
5579, getDay(), 0.0, 5565, 
5580, setMonth(boolean, int, int), 1.0, 5565, 
5581, setYear(int), 1.0, 5565, 
5582, setCalendar(java.util.Calendar), 1.0, 5565, 
5583, setFont(java.awt.Font, int), 1.0, 5565, 
5584, setForeground(java.awt.Color, int), 1.0, 5565, 
5585, actionPerformed(java.lang.String, java.awt.event.ActionEvent, javax.swing.JButton, int), 1.0, 5565, 
5586, focusGained(java.awt.event.FocusEvent), 1.0, 5565, 
5587, focusLost(java.awt.event.FocusEvent), 1.0, 5565, 
5588, keyPressed(java.awt.event.KeyEvent, int, int, int, java.util.GregorianCalendar, int, int), 1.0, 5565, 
5589, keyTyped(java.awt.event.KeyEvent), 1.0, 5565, 
5590, keyReleased(java.awt.event.KeyEvent), 1.0, 5565, 
5591, setEnabled(boolean, short), 1.0, 5565, 
5592, isWeekOfYearVisible(), 0.0, 5565, 
5593, setWeekOfYearVisible(boolean), 1.0, 5565, 
5594, getDayPanel(), 0.0, 5565, 
5595, getDecorationBackgroundColor(), 0.0, 5565, 
5596, setDecorationBackgroundColor(java.awt.Color, int), 1.0, 5565, 
5597, getSundayForeground(), 0.0, 5565, 
5598, getWeekdayForeground(), 0.0, 5565, 
5599, setSundayForeground(java.awt.Color), 1.0, 5565, 
5600, setWeekdayForeground(java.awt.Color), 1.0, 5565, 
5601, setFocus(), 0.0, 5565, 
5602, isDecorationBackgroundVisible(), 0.0, 5565, 
5603, setDecorationBackgroundVisible(boolean), 1.0, 5565, 
5604, isDecorationBordersVisible(), 0.0, 5565, 
5605, isDayBordersVisible(), 0.0, 5565, 
5606, setDecorationBordersVisible(boolean), 1.0, 5565, 
5607, setDayBordersVisible(boolean, int), 1.0, 5565, 
5608, updateUI(), 0.0, 5565, 
5609, setSelectableDateRange(java.util.Date, java.util.Date), 2.0, 5565, 
5610, setMaxSelectableDate(java.util.Date), 1.0, 5565, 
5611, setMinSelectableDate(java.util.Date), 1.0, 5565, 
5612, getMaxSelectableDate(), 0.0, 5565, 
5613, getMinSelectableDate(), 0.0, 5565, 
5614, getMaxDayCharacters(), 0.0, 5565, 
5615, setMaxDayCharacters(int), 1.0, 5565, 
5616, main(String[], javax.swing.JFrame), 1.0, 5565, 
5618, paint(java.awt.Graphics), 1.0, 5617, 
5620, DecoratorButton(), 0.0, 5619, 
5621, addMouseListener(java.awt.event.MouseListener), 1.0, 5619, 
5622, isFocusable(), 0.0, 5619, 
5623, paint(java.awt.Graphics), 1.0, 5619, 
5625, JYearChooser(java.util.Calendar), 0.0, 5624, 
5626, setYear(int), 1.0, 5624, 
5627, setValue(int), 1.0, 5624, 
5628, getYear(), 0.0, 5624, 
5629, setDayChooser(accessories.plugins.time.JDayChooser), 1.0, 5624, 
5630, getEndYear(), 0.0, 5624, 
5631, setEndYear(int), 1.0, 5624, 
5632, getStartYear(), 0.0, 5624, 
5633, setStartYear(int), 1.0, 5624, 
5634, main(String[], javax.swing.JFrame), 1.0, 5624, 
5636, ReminderHook(), 0.0, 5635, 
5637, nodeRefresh(freemind.modes.MindMapNode), 1.0, 5635, 
5638, getMindMapController(), 0.0, 5635, 
5641, JMonthChooser(), 0.0, 5640, 
5642, JMonthChooser(boolean), 1.0, 5640, 
5643, initNames(String[], int, java.text.DateFormatSymbols), 0.0, 5640, 
5644, stateChanged(int, int, int, boolean, javax.swing.event.ChangeEvent, javax.swing.SpinnerNumberModel), 1.0, 5640, 
5645, itemStateChanged(java.awt.event.ItemEvent, int), 1.0, 5640, 
5646, setMonth(int, boolean, int), 2.0, 5640, 
5647, setMonth(int), 1.0, 5640, 
5648, getMonth(), 0.0, 5640, 
5649, setDayChooser(accessories.plugins.time.JDayChooser), 1.0, 5640, 
5650, setYearChooser(accessories.plugins.time.JYearChooser), 1.0, 5640, 
5651, getLocale(), 0.0, 5640, 
5652, setLocale(java.util.Locale), 1.0, 5640, 
5653, setEnabled(boolean), 1.0, 5640, 
5654, getComboBox(), 0.0, 5640, 
5655, getSpinner(), 0.0, 5640, 
5656, hasSpinner(), 0.0, 5640, 
5657, setFont(java.awt.Font), 1.0, 5640, 
5658, updateUI(javax.swing.JSpinner), 0.0, 5640, 
5659, main(String[], javax.swing.JFrame), 1.0, 5640, 
5661, getPreferredSize(java.awt.Dimension), 0.0, 5660, 
5663, TableSorter(), 0.0, 5662, 
5664, TableSorter(javax.swing.table.TableModel), 1.0, 5662, 
5665, TableSorter(javax.swing.table.TableModel, javax.swing.table.JTableHeader), 2.0, 5662, 
5666, clearSortingState(), 0.0, 5662, 
5667, getTableModel(), 0.0, 5662, 
5668, setTableModel(javax.swing.table.TableModel), 1.0, 5662, 
5669, getTableHeader(), 0.0, 5662, 
5670, setTableHeader(javax.swing.table.JTableHeader, javax.swing.table.TableCellRenderer), 1.0, 5662, 
5671, isSorting(), 0.0, 5662, 
5672, getDirective(int, int, accessories.plugins.time.TableSorter.Directive), 1.0, 5662, 
5673, getSortingStatus(int), 1.0, 5662, 
5674, sortingStatusChanged(), 0.0, 5662, 
5675, setSortingStatus(int, int, accessories.plugins.time.TableSorter.Directive), 2.0, 5662, 
5676, getHeaderRendererIcon(int, int, accessories.plugins.time.TableSorter.Directive), 2.0, 5662, 
5677, cancelSorting(), 0.0, 5662, 
5678, setColumnComparator(java.util.Comparator, java.lang.Class), 2.0, 5662, 
5679, getComparator(int, java.lang.Class, java.util.Comparator), 1.0, 5662, 
5680, getViewToModel(int, int), 0.0, 5662, 
5681, modelIndex(int), 1.0, 5662, 
5682, getModelToView(int, int), 0.0, 5662, 
5683, getRowCount(), 0.0, 5662, 
5684, getColumnCount(), 0.0, 5662, 
5685, getColumnName(int), 1.0, 5662, 
5686, getColumnClass(int), 1.0, 5662, 
5687, isCellEditable(int, int), 2.0, 5662, 
5688, getValueAt(int, int), 2.0, 5662, 
5691, TimeManagementOrganizer(freemind.modes.MindMap, freemind.modes.ModeController), 2.0, 5690, 
5692, register(), 0.0, 5690, 
5693, deRegister(), 0.0, 5690, 
5694, isEnabled(boolean, javax.swing.JMenuItem, javax.swing.Action, java.util.Iterator, java.lang.String, freemind.modes.MindMapNode), 2.0, 5690, 
5695, getHook(freemind.modes.MindMapNode, java.util.Iterator, freemind.extensions.PermanentNodeHook), 1.0, 5690, 
5697, compare(java.lang.Object, java.lang.Object), 2.0, 5696, 
5700, compare(java.lang.Object, java.lang.Object), 2.0, 5699, 
5703, Row(int), 1.0, 5702, 
5704, compareTo(java.lang.Object, java.lang.Object, accessories.plugins.time.TableSorter.Directive, java.util.Iterator, int, int, java.lang.Object, int, int), 1.0, 5702, 
5706, tableChanged(int, int, javax.swing.event.TableModelEvent), 1.0, 5705, 
5709, mouseClicked(int, java.awt.event.MouseEvent, int, javax.swing.table.JTableHeader, javax.swing.table.TableColumnModel, int), 1.0, 5708, 
5714, getIconWidth(), 0.0, 5711, 
5715, getIconHeight(), 0.0, 5711, 
5717, SortableHeaderRenderer(javax.swing.table.TableCellRenderer), 1.0, 5716, 
5720, Directive(int, int), 2.0, 5719, 
5722, startupMapHook(javax.swing.JPanel, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, int, java.awt.Container, java.lang.String, java.util.Iterator, javax.swing.JMenu, freemind.controller.actions.generated.instance.TimeWindowColumnSetting, javax.swing.JMenuBar, AbstractAction[], java.awt.GridBagLayout, javax.swing.AbstractAction, javax.swing.ListSelectionModel, javax.swing.JButton, javax.swing.JButton, javax.swing.JMenuItem, freemind.controller.actions.generated.instance.WindowConfigurationStorage, javax.swing.JButton, javax.swing.JButton, javax.swing.JButton, javax.swing.JScrollPane, javax.swing.JButton), 0.0, 5721, 
5723, exportSelectedRowsAndClose(int[], freemind.modes.MindMapNode, int, freemind.modes.mindmapmode.MindMapController, int, freemind.modes.MindMap, java.util.Vector, java.util.Iterator, freemind.modes.MindMapNode), 0.0, 5721, 
5724, replace(accessories.plugins.time.TimeList.IReplaceInputInformation, java.lang.String, java.lang.String, javax.swing.text.BadLocationException), 1.0, 5721, 
5726, selectSelectedRows(), 0.0, 5721, 
5727, gotoNodesAndClose(int, int[]), 2.0, 5721, 
5728, selectNodes(int[], int, int, freemind.modes.MindMapNode, java.util.Vector, int), 2.0, 5721, 
5729, getMindMapNode(int, freemind.modes.MindMapNode), 1.0, 5721, 
5730, updateModel(freemind.modes.MindMapNode, javax.swing.table.DefaultTableModel), 0.0, 5721, 
5731, updateModel(java.util.Date, freemind.modes.MindMapNode, javax.swing.table.DefaultTableModel, freemind.modes.common.plugins.ReminderHookBase, freemind.modes.MindMapNode, java.util.Iterator), 2.0, 5721, 
5732, getTimePanel(), 0.0, 5721, 
5733, disposeDialog(int, freemind.controller.actions.generated.instance.TimeWindowColumnSetting, freemind.controller.actions.generated.instance.TimeWindowConfigurationStorage), 0.0, 5721, 
5734, getRegularExpression(java.lang.String), 1.0, 5721, 
5735, getText(javax.swing.text.Document, java.lang.String), 1.0, 5721, 
5736, getPureRegularExpression(java.lang.String), 1.0, 5721, 
5738, windowClosing(java.awt.event.WindowEvent), 1.0, 5737, 
5740, actionPerformed(java.awt.event.ActionEvent), 1.0, 5739, 
5742, keyPressed(java.awt.event.KeyEvent), 1.0, 5741, 
5744, keyPressed(java.awt.event.KeyEvent), 1.0, 5743, 
5746, actionPerformed(java.awt.event.ActionEvent), 1.0, 5745, 
5748, actionPerformed(java.awt.event.ActionEvent), 1.0, 5747, 
5750, actionPerformed(java.awt.event.ActionEvent), 1.0, 5749, 
5752, actionPerformed(java.awt.event.ActionEvent), 1.0, 5751, 
5754, actionPerformed(java.awt.event.ActionEvent), 1.0, 5753, 
5756, actionPerformed(java.awt.event.ActionEvent), 1.0, 5755, 
5758, valueChanged(javax.swing.event.ListSelectionEvent, javax.swing.ListSelectionModel, boolean), 1.0, 5757, 
5761, getNodeText(freemind.modes.MindMapNode), 1.0, 5760, 
5762, valueChanged(javax.swing.event.ListSelectionEvent, javax.swing.ListSelectionModel, int, freemind.modes.MindMapNode), 1.0, 5760, 
5765, getLength(), 0.0, 5764, 
5766, getNodeHolderAt(int), 1.0, 5764, 
5767, changeString(java.lang.String, accessories.plugins.time.TimeList.NodeHolder), 2.0, 5764, 
5769, getLength(), 0.0, 5768, 
5770, getNodeHolderAt(int), 1.0, 5768, 
5771, changeString(java.lang.String, accessories.plugins.time.TimeList.NodeHolder), 2.0, 5768, 
5774, getLength(), 0.0, 5773, 
5775, getNodeHolderAt(int), 1.0, 5773, 
5776, changeString(accessories.plugins.time.TimeList.NodeHolder, java.lang.String), 2.0, 5773, 
5779, getColumnClass(int), 1.0, 5778, 
5781, change(javax.swing.event.DocumentEvent), 1.0, 5780, 
5782, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 5780, 
5783, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 5780, 
5784, changedUpdate(javax.swing.event.DocumentEvent), 1.0, 5780, 
5787, DelayedTextEntry(javax.swing.event.DocumentEvent), 1.0, 5786, 
5788, run(), 0.0, 5786, 
5790, run(java.lang.String, javax.swing.text.Document, javax.swing.text.BadLocationException), 0.0, 5789, 
5793, mouseClicked(java.awt.event.MouseEvent, java.awt.Point, int), 1.0, 5792, 
5796, keyTyped(java.awt.event.KeyEvent), 1.0, 5795, 
5797, keyPressed(java.awt.event.KeyEvent), 1.0, 5795, 
5798, keyReleased(java.awt.event.KeyEvent), 1.0, 5795, 
5801, getCellRenderer(int, int, java.lang.Object), 2.0, 5800, 
5802, isCellEditable(int, int), 2.0, 5800, 
5803, processKeyEvent(EventListener[], java.awt.event.KeyEvent, java.awt.event.KeyListener, int), 1.0, 5800, 
5806, DateRenderer(), 0.0, 5805, 
5807, setValue(java.lang.Object), 1.0, 5805, 
5809, NodeRenderer(), 0.0, 5808, 
5810, setValue(java.lang.Object), 1.0, 5808, 
5812, NotesRenderer(), 0.0, 5811, 
5813, setValue(java.lang.Object), 1.0, 5811, 
5815, NodeHolder(freemind.modes.MindMapNode), 1.0, 5814, 
5816, compareTo(java.lang.Object), 1.0, 5814, 
5817, toString(), 0.0, 5814, 
5818, getUntaggedNodeText(java.lang.String), 0.0, 5814, 
5820, NotesHolder(freemind.modes.MindMapNode), 1.0, 5819, 
5821, compareTo(java.lang.Object), 1.0, 5819, 
5822, toString(), 0.0, 5819, 
5823, getUntaggedNotesText(java.lang.String), 0.0, 5819, 
5825, IconsHolder(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindIcon), 1.0, 5824, 
5826, compareTo(java.lang.Object), 1.0, 5824, 
5827, getIcons(), 0.0, 5824, 
5828, toString(java.lang.String, java.lang.String, java.util.Iterator), 0.0, 5824, 
5830, IconsRenderer(freemind.modes.ModeController), 1.0, 5829, 
5831, setValue(java.lang.Object, freemind.view.mindmapview.MultipleImage, java.util.Iterator, freemind.modes.MindIcon, accessories.plugins.time.TimeList.IconsHolder), 1.0, 5829, 
5833, JCalendar(), 0.0, 5832, 
5834, JCalendar(java.util.Date), 1.0, 5832, 
5835, JCalendar(java.util.Calendar), 1.0, 5832, 
5836, JCalendar(java.util.Locale), 1.0, 5832, 
5837, JCalendar(java.util.Locale, java.util.Date), 2.0, 5832, 
5838, JCalendar(boolean, java.util.Date), 2.0, 5832, 
5839, JCalendar(java.util.Locale, boolean), 2.0, 5832, 
5840, JCalendar(boolean), 1.0, 5832, 
5842, main(String[], javax.swing.JFrame, accessories.plugins.time.JCalendar), 1.0, 5832, 
5843, getCalendar(), 0.0, 5832, 
5844, getDayChooser(), 0.0, 5832, 
5845, getLocale(), 0.0, 5832, 
5846, getMonthChooser(), 0.0, 5832, 
5847, getYearChooser(), 0.0, 5832, 
5848, isWeekOfYearVisible(), 0.0, 5832, 
5849, propertyChange(java.beans.PropertyChangeEvent, java.util.Calendar), 1.0, 5832, 
5850, setBackground(java.awt.Color), 1.0, 5832, 
5851, setCalendar(java.util.Calendar), 1.0, 5832, 
5852, setCalendar(java.util.Calendar, boolean, java.util.Calendar), 2.0, 5832, 
5853, setEnabled(boolean), 1.0, 5832, 
5854, isEnabled(), 0.0, 5832, 
5855, setFont(java.awt.Font), 1.0, 5832, 
5856, setForeground(java.awt.Color), 1.0, 5832, 
5857, setLocale(java.util.Locale, java.util.Locale), 1.0, 5832, 
5858, setWeekOfYearVisible(boolean), 1.0, 5832, 
5859, isDecorationBackgroundVisible(), 0.0, 5832, 
5860, setDecorationBackgroundVisible(boolean), 1.0, 5832, 
5861, isDecorationBordersVisible(), 0.0, 5832, 
5862, setDecorationBordersVisible(boolean), 1.0, 5832, 
5863, getDecorationBackgroundColor(), 0.0, 5832, 
5864, setDecorationBackgroundColor(java.awt.Color), 1.0, 5832, 
5865, getSundayForeground(), 0.0, 5832, 
5866, getWeekdayForeground(), 0.0, 5832, 
5867, setSundayForeground(java.awt.Color), 1.0, 5832, 
5868, setWeekdayForeground(java.awt.Color), 1.0, 5832, 
5869, getDate(), 0.0, 5832, 
5870, setDate(java.util.Date, int, int, int, java.util.Date), 1.0, 5832, 
5871, setSelectableDateRange(java.util.Date, java.util.Date), 2.0, 5832, 
5872, getMaxSelectableDate(), 0.0, 5832, 
5873, getMinSelectableDate(), 0.0, 5832, 
5874, setMaxSelectableDate(java.util.Date), 1.0, 5832, 
5875, setMinSelectableDate(java.util.Date), 1.0, 5832, 
5876, getMaxDayCharacters(), 0.0, 5832, 
5877, setMaxDayCharacters(int), 1.0, 5832, 
5879, JSpinField(), 0.0, 5878, 
5880, JSpinField(int, int), 2.0, 5878, 
5881, adjustWidthToMaximumValue(int, int, javax.swing.JTextField), 0.0, 5878, 
5882, stateChanged(javax.swing.event.ChangeEvent, javax.swing.SpinnerNumberModel, int), 1.0, 5878, 
5884, setValue(int), 1.0, 5878, 
5885, getValue(), 0.0, 5878, 
5886, setMinimum(int), 1.0, 5878, 
5887, getMinimum(), 0.0, 5878, 
5888, setMaximum(int), 1.0, 5878, 
5889, setHorizontalAlignment(int), 1.0, 5878, 
5890, getMaximum(), 0.0, 5878, 
5891, setFont(java.awt.Font), 1.0, 5878, 
5892, setForeground(java.awt.Color), 1.0, 5878, 
5893, caretUpdate(javax.swing.event.CaretEvent, int, java.lang.Exception), 1.0, 5878, 
5894, actionPerformed(java.awt.event.ActionEvent), 1.0, 5878, 
5895, setEnabled(boolean), 1.0, 5878, 
5896, getSpinner(), 0.0, 5878, 
5897, main(String[], javax.swing.JFrame), 1.0, 5878, 
5898, focusGained(java.awt.event.FocusEvent), 1.0, 5878, 
5899, focusLost(java.awt.event.FocusEvent), 1.0, 5878, 
5901, getPreferredSize(java.awt.Dimension), 0.0, 5900, 
5904, CommonNodeKeyListener(freemind.modes.common.CommonNodeKeyListener.EditHandler, freemind.modes.ModeController), 2.0, 5903, 
5905, keyTyped(java.awt.event.KeyEvent), 1.0, 5903, 
5906, keyPressed(boolean, java.awt.event.KeyEvent), 1.0, 5903, 
5907, keyReleased(java.awt.event.KeyEvent), 1.0, 5903, 
5911, CommonToggleFoldedAction(freemind.modes.ControllerAdapter), 1.0, 5910, 
5912, actionPerformed(java.awt.event.ActionEvent), 1.0, 5910, 
5913, toggleFolded(), 0.0, 5910, 
5914, toggleFolded(java.util.ListIterator, boolean, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 5910, 
5915, reset(java.util.ListIterator), 1.0, 5910, 
5916, getFoldingState(freemind.main.Tools.BooleanHolder, boolean, boolean, java.util.ListIterator, freemind.modes.MindMapNode, java.util.ListIterator), 1.0, 5910, 
5918, GotoLinkNodeAction(freemind.modes.ModeController, freemind.modes.MindMapNode, java.lang.String), 2.0, 5917, 
5919, actionPerformed(java.awt.event.ActionEvent), 1.0, 5917, 
5922, ReminderHookBase(), 0.0, 5921, 
5923, loadFrom(java.lang.String, freemind.main.XMLElement, java.util.HashMap), 1.0, 5921, 
5924, save(freemind.main.XMLElement, java.util.HashMap), 1.0, 5921, 
5925, shutdownMapHook(), 0.0, 5921, 
5926, invoke(freemind.modes.MindMapNode), 1.0, 5921, 
5927, scheduleTimer(freemind.modes.MindMapNode), 1.0, 5921, 
5928, scheduleTimer(freemind.modes.MindMapNode, java.util.TimerTask, java.util.Date, java.text.MessageFormat, Object[], java.lang.String), 2.0, 5921, 
5929, getClockIcon(), 0.0, 5921, 
5930, getBellIcon(), 0.0, 5921, 
5931, getFlagIcon(), 0.0, 5921, 
5933, nodeRefresh(freemind.modes.MindMapNode), 1.0, 5921, 
5935, getRemindUserAt(), 0.0, 5921, 
5936, setRemindUserAt(long), 1.0, 5921, 
5937, getStateKey(), 0.0, 5921, 
5939, CheckReminder(), 0.0, 5938, 
5940, run(), 0.0, 5938, 
5942, run(Object[], java.lang.String, int, java.text.MessageFormat), 0.0, 5941, 
5945, TimerBlinkTask(boolean), 1.0, 5944, 
5946, run(), 0.0, 5944, 
5948, run(), 0.0, 5947, 
5953, FilterController(freemind.controller.Controller), 1.0, 5952, 
5954, getConditionRenderer(), 0.0, 5952, 
5955, getFilterToolbar(), 0.0, 5952, 
5956, showFilterToolbar(boolean, freemind.controller.filter.Filter), 1.0, 5952, 
5957, refreshMap(), 0.0, 5952, 
5958, getConditionFactory(), 0.0, 5952, 
5959, getMap(), 0.0, 5952, 
5960, setFilterToolbar(freemind.controller.filter.FilterToolbar), 1.0, 5952, 
5963, afterMapClose(freemind.view.MapModule, freemind.modes.Mode), 2.0, 5952, 
5965, numberOfOpenMapInformation(int), 1.0, 5952, 
5966, createTransparentFilter(), 0.0, 5952, 
5967, saveConditions(), 0.0, 5952, 
5968, getFilterConditionModel(), 0.0, 5952, 
5969, setFilterConditionModel(javax.swing.DefaultComboBoxModel), 1.0, 5952, 
5970, saveConditions(java.lang.String, javax.swing.DefaultComboBoxModel, int, java.io.Writer, freemind.main.XMLElement, freemind.controller.filter.condition.Condition), 2.0, 5952, 
5971, loadConditions(java.lang.String, javax.swing.DefaultComboBoxModel, int, java.util.Vector, freemind.main.XMLElement, java.io.Reader), 2.0, 5952, 
5974, applyFilter(freemind.controller.Controller, freemind.view.mindmapview.MapView, freemind.modes.MindMap, freemind.modes.MindMapNode), 1.0, 5972, 
5975, selectVisibleNode(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MapView, freemind.view.mindmapview.NodeView, java.util.ListIterator, int, java.util.LinkedList), 1.0, 5972, 
5976, getNearestVisibleParent(freemind.view.mindmapview.NodeView), 1.0, 5972, 
5979, isVisible(freemind.modes.MindMapNode, int), 1.0, 5972, 
5980, resetFilter(freemind.modes.MindMapNode), 1.0, 5972, 
5981, addFilterResult(freemind.modes.MindMapNode, int), 2.0, 5972, 
5982, areMatchedShown(), 0.0, 5972, 
5983, areHiddenShown(), 0.0, 5972, 
5984, areAncestorsShown(), 0.0, 5972, 
5985, areDescendantsShown(), 0.0, 5972, 
5986, areEclipsedShown(), 0.0, 5972, 
5987, getCondition(), 0.0, 5972, 
5989, FilterToolbar(freemind.controller.Controller), 1.0, 5988, 
5990, addStandardConditions(javax.swing.DefaultComboBoxModel, freemind.controller.filter.condition.Condition), 0.0, 5988, 
5991, initConditions(java.lang.Exception), 0.0, 5988, 
5992, resetFilter(), 0.0, 5988, 
5993, getSelectedCondition(), 0.0, 5988, 
5994, setMapFilter(freemind.modes.MindMap), 0.0, 5988, 
5995, getFilterDialog(), 0.0, 5988, 
5996, mapChanged(freemind.controller.filter.Filter, freemind.modes.MindMap), 1.0, 5988, 
5997, refreshMap(), 0.0, 5988, 
5998, saveConditions(java.lang.Exception), 0.0, 5988, 
5999, getFilterConditionModel(), 0.0, 5988, 
6000, setFilterConditionModel(javax.swing.ComboBoxModel), 1.0, 5988, 
6002, FilterChangeListener(), 0.0, 6001, 
6003, actionPerformed(java.awt.event.ActionEvent), 1.0, 6001, 
6004, itemStateChanged(java.awt.event.ItemEvent), 1.0, 6001, 
6005, filterChanged(freemind.modes.MindMap), 0.0, 6001, 
6006, propertyChange(java.beans.PropertyChangeEvent), 1.0, 6001, 
6008, EditFilterAction(), 0.0, 6007, 
6009, getFilterDialog(), 0.0, 6007, 
6010, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 6007, 
6012, UnfoldAncestorsAction(), 0.0, 6011, 
6013, unfoldAncestors(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 6011, 
6014, setFolded(boolean, freemind.modes.MindMapNode), 2.0, 6011, 
6015, actionPerformed(java.awt.event.ActionEvent), 1.0, 6011, 
6017, getMaximumSize(), 0.0, 6016, 
6019, FilterInfo(), 0.0, 6018, 
6020, reset(), 0.0, 6018, 
6021, setAncestor(), 0.0, 6018, 
6022, setDescendant(), 0.0, 6018, 
6023, setMatched(), 0.0, 6018, 
6024, add(int), 1.0, 6018, 
6025, get(), 0.0, 6018, 
6026, isAncestor(), 0.0, 6018, 
6027, isMatched(), 0.0, 6018, 
6029, getFileChooser(javax.swing.JFileChooser, freemind.modes.ModeController), 0.0, 6028, 
6030, FilterComposerDialog(freemind.controller.Controller, freemind.controller.filter.FilterToolbar, javax.swing.Box, javax.swing.Box, java.awt.event.ActionListener, javax.swing.Box, freemind.modes.MapRegistry, java.awt.event.ActionListener, javax.swing.JScrollPane, freemind.controller.filter.FilterComposerDialog.CloseAction, javax.swing.JLabel), 2.0, 6028, 
6031, getAttributeValue(java.lang.Object, freemind.modes.MindIcon), 0.0, 6028, 
6032, mapChanged(freemind.modes.MindMap), 1.0, 6028, 
6033, selectCondition(int, int), 0.0, 6028, 
6034, setSelectedItem(java.lang.Object), 1.0, 6028, 
6035, show(), 0.0, 6028, 
6036, initInternalConditionModel(int, int, java.lang.Object), 0.0, 6028, 
6037, applyChanges(), 0.0, 6028, 
6039, AddConditionAction(), 0.0, 6038, 
6040, actionPerformed(java.lang.String, freemind.controller.filter.condition.Condition, java.awt.event.ActionEvent, freemind.common.NamedObject, java.lang.String, java.lang.Object, boolean, javax.swing.DefaultComboBoxModel, java.lang.Object, java.lang.NullPointerException), 1.0, 6038, 
6042, DeleteConditionAction(), 0.0, 6041, 
6043, actionPerformed(int, java.awt.event.ActionEvent, int, javax.swing.DefaultComboBoxModel, int), 1.0, 6041, 
6045, CreateNotSatisfiedConditionAction(), 0.0, 6044, 
6046, actionPerformed(freemind.controller.filter.condition.Condition, java.awt.event.ActionEvent, javax.swing.DefaultComboBoxModel, freemind.controller.filter.condition.Condition, int, int), 1.0, 6044, 
6048, CreateConjunctConditionAction(), 0.0, 6047, 
6049, actionPerformed(Object[], java.awt.event.ActionEvent, javax.swing.DefaultComboBoxModel, freemind.controller.filter.condition.Condition), 1.0, 6047, 
6051, CreateDisjunctConditionAction(), 0.0, 6050, 
6052, actionPerformed(Object[], java.awt.event.ActionEvent, freemind.controller.filter.condition.Condition, javax.swing.DefaultComboBoxModel), 1.0, 6050, 
6054, valueChanged(javax.swing.event.ListSelectionEvent), 1.0, 6053, 
6055, intervalAdded(javax.swing.event.ListDataEvent), 1.0, 6053, 
6056, intervalRemoved(javax.swing.event.ListDataEvent), 1.0, 6053, 
6057, contentsChanged(javax.swing.event.ListDataEvent), 1.0, 6053, 
6060, mouseClicked(java.awt.event.MouseEvent), 1.0, 6059, 
6063, run(), 0.0, 6062, 
6066, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 6065, 
6069, accept(java.io.File, java.lang.String), 1.0, 6068, 
6070, getDescription(), 0.0, 6068, 
6073, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.lang.String, int, javax.swing.JFileChooser, java.io.File, java.lang.Exception), 1.0, 6072, 
6074, handleSavingException(java.lang.Exception), 1.0, 6072, 
6077, actionPerformed(java.awt.event.ActionEvent, java.io.File, int, javax.swing.JFileChooser, java.lang.Exception), 1.0, 6076, 
6078, handleLoadingException(java.lang.Exception), 1.0, 6076, 
6081, itemStateChanged(java.awt.event.ItemEvent, boolean), 1.0, 6080, 
6084, itemStateChanged(java.awt.event.ItemEvent, java.lang.String), 1.0, 6083, 
6087, applyFilter(freemind.controller.Controller), 1.0, 6086, 
6088, isVisible(freemind.modes.MindMapNode), 1.0, 6086, 
6089, areMatchedShown(), 0.0, 6086, 
6090, areHiddenShown(), 0.0, 6086, 
6091, areAncestorsShown(), 0.0, 6086, 
6092, areDescendantsShown(), 0.0, 6086, 
6093, areEclipsedShown(), 0.0, 6086, 
6094, getCondition(), 0.0, 6086, 
6097, JabberSender(plugins.collaboration.jabber.mindmap.MapSharingController, com.echomine.jabber.JabberSession, java.lang.Exception), 2.0, 6096, 
6098, sendMapSharingRequest(java.lang.String, java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.CollaborationAction, java.io.StringWriter, java.lang.Exception), 2.0, 6096, 
6099, sendMapSharingStopRequest(java.lang.String, freemind.controller.actions.generated.instance.CollaborationAction, java.lang.Exception), 0.0, 6096, 
6100, createCollaborationAction(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.CollaborationAction), 2.0, 6096, 
6102, marshal(freemind.controller.actions.generated.instance.XmlAction), 1.0, 6096, 
6103, sendMessage(java.lang.String, freemind.controller.actions.generated.instance.XmlAction, java.lang.String), 2.0, 6096, 
6104, isMapShared(boolean), 1.0, 6096, 
6105, setShareMapUser(java.lang.String), 1.0, 6096, 
6106, filterAction(freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.controller.actions.generated.instance.CompoundAction, com.echomine.common.ParseException), 1.0, 6096, 
6108, MapSharingController(freemind.modes.mindmapmode.MindMapController, plugins.collaboration.jabber.view.MapSharingWizardView), 2.0, 6107, 
6109, addListeners(), 0.0, 6107, 
6110, setMapShareRequestAccepted(boolean, java.lang.String), 2.0, 6107, 
6112, showMapSharingDialogue(), 0.0, 6107, 
6113, stopSharing(), 0.0, 6107, 
6114, setSharingStopped(java.lang.String), 1.0, 6107, 
6115, setState(int), 1.0, 6107, 
6116, getController(), 0.0, 6107, 
6117, setSendingEnabled(boolean), 1.0, 6107, 
6118, isSendingEnabled(), 0.0, 6107, 
6120, mouseClicked(java.awt.event.MouseEvent), 1.0, 6119, 
6121, mouseEntered(java.awt.event.MouseEvent), 1.0, 6119, 
6122, mouseExited(java.awt.event.MouseEvent), 1.0, 6119, 
6123, mousePressed(java.awt.event.MouseEvent), 1.0, 6119, 
6124, mouseReleased(java.awt.event.MouseEvent), 1.0, 6119, 
6127, mouseClicked(java.awt.event.MouseEvent), 1.0, 6126, 
6128, mouseEntered(java.awt.event.MouseEvent), 1.0, 6126, 
6129, mouseExited(java.awt.event.MouseEvent), 1.0, 6126, 
6130, mousePressed(java.awt.event.MouseEvent), 1.0, 6126, 
6131, mouseReleased(java.awt.event.MouseEvent), 1.0, 6126, 
6134, mouseClicked(java.awt.event.MouseEvent), 1.0, 6133, 
6135, mouseEntered(java.awt.event.MouseEvent), 1.0, 6133, 
6136, mouseExited(java.awt.event.MouseEvent), 1.0, 6133, 
6137, mousePressed(java.awt.event.MouseEvent), 1.0, 6133, 
6138, mouseReleased(java.awt.event.MouseEvent), 1.0, 6133, 
6141, mouseClicked(freemind.controller.actions.generated.instance.RevertXmlAction, java.awt.event.MouseEvent, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6140, 
6142, mouseEntered(java.awt.event.MouseEvent), 1.0, 6140, 
6143, mouseExited(java.awt.event.MouseEvent), 1.0, 6140, 
6144, mousePressed(java.awt.event.MouseEvent), 1.0, 6140, 
6145, mouseReleased(java.awt.event.MouseEvent), 1.0, 6140, 
6148, mouseClicked(java.awt.event.MouseEvent), 1.0, 6147, 
6149, mouseEntered(java.awt.event.MouseEvent), 1.0, 6147, 
6150, mouseExited(java.awt.event.MouseEvent), 1.0, 6147, 
6151, mousePressed(java.awt.event.MouseEvent), 1.0, 6147, 
6152, mouseReleased(java.awt.event.MouseEvent), 1.0, 6147, 
6156, getSession(), 0.0, 6154, 
6158, FreeMindJabberMessageListener(plugins.collaboration.jabber.mindmap.MapSharingController), 1.0, 6157, 
6159, messageReceived(com.echomine.jabber.JabberMessageEvent, com.echomine.jabber.JabberChatMessage, com.echomine.jabber.JabberChatMessage, java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CompoundAction, java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.CollaborationAction, java.lang.Exception), 1.0, 6157, 
6160, executeRemoteCommand(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6157, 
6162, run(java.lang.Exception), 0.0, 6161, 
6166, AttributeRegistryTable(freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.EditListAction), 1.0, 6165, 
6167, setModel(javax.swing.table.TableModel, int, int), 1.0, 6165, 
6168, getCellEditor(int, int), 2.0, 6165, 
6169, getCellRenderer(int, int, javax.swing.table.TableCellRenderer, javax.swing.JComponent), 2.0, 6165, 
6172, ButtonEditor(javax.swing.Icon), 1.0, 6171, 
6173, ButtonEditor(javax.swing.Action), 1.0, 6171, 
6175, getCellEditorValue(), 0.0, 6171, 
6176, setAction(javax.swing.Action), 1.0, 6171, 
6178, ButtonRenderer(javax.swing.Icon, java.lang.String), 2.0, 6177, 
6180, setEnabled(boolean), 1.0, 6177, 
6182, ToggleAllAction(), 0.0, 6181, 
6183, actionPerformed(java.lang.Boolean, java.awt.event.ActionEvent, int), 1.0, 6181, 
6185, ReplaceAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6184, 
6188, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.ReplaceAttributeValueElementaryAction), 1.0, 6184, 
6190, getDoActionClass(), 0.0, 6184, 
6192, SetAttributeColumnWidthActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6191, 
6195, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeColumnWidthElementaryAction), 1.0, 6191, 
6197, getDoActionClass(), 0.0, 6191, 
6199, InsertAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6198, 
6202, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.InsertAttributeElementaryAction), 1.0, 6198, 
6204, getDoActionClass(), 0.0, 6198, 
6206, SetAttributeFontSizeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6205, 
6207, createAction(int, freemind.controller.actions.generated.instance.SetAttributeFontSizeElementaryAction), 1.0, 6205, 
6208, createActionPair(int, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6205, 
6209, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeFontSizeElementaryAction), 1.0, 6205, 
6210, act(int), 1.0, 6205, 
6211, getDoActionClass(), 0.0, 6205, 
6213, RegistryAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6212, 
6214, createAction(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.RegistryAttributeValueElementaryAction), 2.0, 6212, 
6215, createActionPair(java.lang.String, java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair), 2.0, 6212, 
6216, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RegistryAttributeValueElementaryAction), 1.0, 6212, 
6217, act(java.lang.String, java.lang.String, freemind.modes.attributes.AttributeRegistryElement), 2.0, 6212, 
6218, getDoActionClass(), 0.0, 6212, 
6220, attributesChanged(javax.swing.event.ChangeEvent), 1.0, 6219, 
6222, UnregistryAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6221, 
6223, createAction(java.lang.String, freemind.controller.actions.generated.instance.UnregistryAttributeElementaryAction), 1.0, 6221, 
6224, createActionPair(java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6221, 
6225, createUndoAction(java.lang.String, java.lang.String, freemind.controller.filter.util.SortedComboBoxModel, int, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CompoundAction), 1.0, 6221, 
6226, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UnregistryAttributeElementaryAction), 1.0, 6221, 
6227, act(java.lang.String, freemind.modes.attributes.AttributeRegistry), 1.0, 6221, 
6228, getDoActionClass(), 0.0, 6221, 
6230, RegistryAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6229, 
6231, createAction(java.lang.String, freemind.controller.actions.generated.instance.RegistryAttributeElementaryAction), 1.0, 6229, 
6232, createActionPair(java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6229, 
6233, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RegistryAttributeElementaryAction), 1.0, 6229, 
6234, act(freemind.modes.attributes.AttributeRegistry, java.lang.String, freemind.modes.attributes.AttributeRegistryElement, int), 1.0, 6229, 
6235, getDoActionClass(), 0.0, 6229, 
6237, applyChanges(int, java.lang.Object), 0.0, 6236, 
6238, resetChanges(int), 0.0, 6236, 
6239, AttributeManagerDialog(freemind.controller.Controller, javax.swing.JScrollPane, javax.swing.Box, javax.swing.JButton, javax.swing.JButton, javax.swing.JButton, javax.swing.JButton), 1.0, 6236, 
6243, numberOfOpenMapInformation(int), 1.0, 6236, 
6244, afterMapClose(freemind.view.MapModule, freemind.modes.Mode), 2.0, 6236, 
6246, ApplyAction(), 0.0, 6245, 
6247, actionPerformed(java.awt.event.ActionEvent), 1.0, 6245, 
6249, SetAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6248, 
6252, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeValueElementaryAction), 1.0, 6248, 
6254, getDoActionClass(), 0.0, 6248, 
6256, SetAttributeVisibleActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6255, 
6257, createAction(boolean, int, freemind.controller.actions.generated.instance.SetAttributeVisibleElementaryAction), 2.0, 6255, 
6258, createActionPair(int, boolean, freemind.modes.mindmapmode.actions.xml.ActionPair, boolean), 2.0, 6255, 
6259, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeVisibleElementaryAction), 1.0, 6255, 
6260, act(int, boolean), 2.0, 6255, 
6261, getDoActionClass(), 0.0, 6255, 
6263, SetAttributeNameActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6262, 
6266, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeNameElementaryAction), 1.0, 6262, 
6268, getDoActionClass(), 0.0, 6262, 
6270, OKAction(), 0.0, 6269, 
6271, actionPerformed(java.awt.event.ActionEvent), 1.0, 6269, 
6273, CancelAction(), 0.0, 6272, 
6274, actionPerformed(java.awt.event.ActionEvent), 1.0, 6272, 
6276, ImportAction(), 0.0, 6275, 
6277, actionPerformed(java.awt.event.ActionEvent), 1.0, 6275, 
6279, EditListAction(), 0.0, 6278, 
6280, actionPerformed(java.awt.event.ActionEvent), 1.0, 6278, 
6281, getRow(), 0.0, 6278, 
6282, setRow(int), 1.0, 6278, 
6285, windowClosing(java.awt.event.WindowEvent), 1.0, 6284, 
6288, itemStateChanged(java.awt.event.ItemEvent), 1.0, 6287, 
6291, componentShown(java.awt.event.ComponentEvent), 1.0, 6290, 
6294, updateButtons(boolean, java.lang.String, int), 0.0, 6292, 
6295, getCurrentText(java.lang.String, javax.swing.text.Document, javax.swing.text.BadLocationException), 0.0, 6292, 
6296, selectText(), 0.0, 6292, 
6298, getIndexOf(java.lang.String, int), 1.0, 6292, 
6300, update(), 0.0, 6299, 
6301, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 6299, 
6302, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 6299, 
6303, changedUpdate(javax.swing.event.DocumentEvent), 1.0, 6299, 
6306, valueChanged(javax.swing.event.ListSelectionEvent, int, int), 1.0, 6305, 
6309, actionPerformed(java.awt.event.ActionEvent), 1.0, 6308, 
6312, actionPerformed(Object[], java.awt.event.ActionEvent, int), 1.0, 6311, 
6315, actionPerformed(Object[], java.awt.event.ActionEvent, int), 1.0, 6314, 
6318, actionPerformed(java.awt.event.ActionEvent), 1.0, 6317, 
6323, mouseClicked(java.awt.event.MouseEvent), 1.0, 6322, 
6325, MindMapModeAttributeController(freemind.modes.mindmapmode.MindMapController), 1.0, 6324, 
6327, endTransaction(java.lang.String), 1.0, 6324, 
6328, startTransaction(java.lang.String), 1.0, 6324, 
6330, performRemoveRow(int, freemind.modes.attributes.NodeAttributeTableModel, freemind.modes.mindmapmode.actions.xml.ActionPair), 2.0, 6324, 
6332, performRemoveAttributeValue(java.lang.String, freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor, java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.MindMapNode, freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Iterator), 2.0, 6324, 
6334, performSetFontSize(freemind.modes.attributes.AttributeRegistry, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 2.0, 6324, 
6335, performSetVisibility(boolean, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 2.0, 6324, 
6336, performSetRestriction(boolean, int, boolean, freemind.modes.mindmapmode.actions.xml.ActionPair), 2.0, 6324, 
6337, performReplaceAtributeName(freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor, java.lang.String, java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.attributes.AttributeRegistryElement, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.attributes.AttributeRegistry, freemind.controller.filter.util.SortedComboBoxModel, freemind.modes.mindmapmode.actions.xml.ActionPair, int, freemind.modes.MindMapNode, int, freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Iterator), 2.0, 6324, 
6338, performRemoveAttribute(java.lang.String, freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor, freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Iterator, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.MindMapNode), 1.0, 6324, 
6339, performRegistryAttribute(java.lang.String, freemind.modes.attributes.AttributeRegistryElement, freemind.modes.mindmapmode.actions.xml.ActionPair, java.util.NoSuchElementException), 1.0, 6324, 
6340, performRegistryAttributeValue(java.lang.String, java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.attributes.AttributeRegistryElement, freemind.modes.mindmapmode.actions.xml.ActionPair, java.util.NoSuchElementException), 2.0, 6324, 
6341, getAttributeRegistry(), 0.0, 6324, 
6342, performRegistrySubtreeAttributes(freemind.modes.mindmapmode.MindMapNodeModel, int, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String, java.lang.String), 1.0, 6324, 
6344, visit(freemind.modes.attributes.NodeAttributeTableModel), 1.0, 6343, 
6346, AttributeRenamer(java.lang.Object, java.lang.Object), 2.0, 6345, 
6347, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6345, 
6350, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6348, 
6352, AttributeRemover(java.lang.Object), 1.0, 6351, 
6353, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6351, 
6355, AttributeValueRemover(java.lang.Object, java.lang.Object), 2.0, 6354, 
6356, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6354, 
6358, Iterator(freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor), 1.0, 6357, 
6359, iterate(freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.ListIterator), 1.0, 6357, 
6361, AssignAttributeDialog(java.awt.Dimension, java.lang.String, freemind.view.mindmapview.MapView, javax.swing.border.Border, javax.swing.JButton, javax.swing.Box, javax.swing.JButton, javax.swing.Box, javax.swing.JButton, javax.swing.Box, javax.swing.Box, javax.swing.JButton, javax.swing.Box, javax.swing.JButton, javax.swing.border.Border, javax.swing.JLabel, javax.swing.border.Border, javax.swing.Box, javax.swing.ButtonGroup, javax.swing.Box), 1.0, 6360, 
6362, mapChanged(freemind.view.mindmapview.MapView, freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 6360, 
6363, selectedAttributeChanged(javax.swing.ComboBoxModel, javax.swing.JComboBox, java.lang.Object, freemind.modes.attributes.AttributeRegistryElement, java.lang.Object, freemind.modes.attributes.AttributeRegistry, java.util.NoSuchElementException), 2.0, 6360, 
6364, attributesChanged(javax.swing.event.ChangeEvent), 1.0, 6360, 
6365, attributesChanged(javax.swing.ComboBoxModel, freemind.modes.attributes.AttributeRegistry, java.lang.Object), 0.0, 6360, 
6369, numberOfOpenMapInformation(int), 1.0, 6360, 
6370, afterMapClose(freemind.modes.Mode, freemind.view.MapModule), 2.0, 6360, 
6372, ClonedComboBoxModel(javax.swing.ComboBoxModel), 1.0, 6371, 
6373, addListDataListener(javax.swing.event.ListDataListener), 1.0, 6371, 
6374, getElementAt(int), 1.0, 6371, 
6375, getSize(), 0.0, 6371, 
6376, removeListDataListener(javax.swing.event.ListDataListener), 1.0, 6371, 
6377, setSelectedItem(java.lang.Object), 1.0, 6371, 
6378, getContentChangedEvent(), 0.0, 6371, 
6379, getSelectedItem(), 0.0, 6371, 
6381, actionPerformed(java.awt.event.ActionEvent, java.util.LinkedList, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, java.util.ListIterator, java.lang.NullPointerException), 1.0, 6380, 
6382, iterate(freemind.view.mindmapview.NodeView, java.awt.Component, int, int), 1.0, 6380, 
6383, performAction(freemind.view.mindmapview.NodeView), 1.0, 6380, 
6384, performAction(freemind.modes.MindMapNode), 1.0, 6380, 
6385, showEmptyStringErrorMessage(), 0.0, 6380, 
6387, performAction(freemind.modes.MindMapNode, freemind.modes.attributes.NodeAttributeTableModel), 1.0, 6386, 
6388, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 6386, 
6391, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 6390, 
6392, performAction(freemind.modes.MindMapNode, freemind.modes.attributes.NodeAttributeTableModel, int), 1.0, 6390, 
6395, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 6394, 
6396, performAction(freemind.modes.MindMapNode, int, freemind.modes.attributes.NodeAttributeTableModel, freemind.modes.attributes.Attribute), 1.0, 6394, 
6399, actionPerformed(java.awt.event.ActionEvent, java.lang.Object, java.lang.Object), 1.0, 6398, 
6400, performAction(freemind.modes.MindMapNode, freemind.modes.attributes.Attribute, int, freemind.modes.attributes.NodeAttributeTableModel), 1.0, 6398, 
6403, itemStateChanged(java.awt.event.ItemEvent), 1.0, 6402, 
6406, itemStateChanged(java.awt.event.ItemEvent), 1.0, 6405, 
6409, actionPerformed(java.awt.event.ActionEvent), 1.0, 6408, 
6412, ImportAttributesDialog(freemind.controller.Controller, java.awt.Component, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, javax.swing.JButton, javax.swing.JButton, javax.swing.Box), 2.0, 6411, 
6413, show(), 0.0, 6411, 
6414, performImport(boolean, javax.swing.tree.DefaultMutableTreeNode, javax.swing.tree.DefaultMutableTreeNode, java.lang.String, java.lang.String, int, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, int, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo), 1.0, 6411, 
6415, createMapSubTrees(java.lang.String, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, javax.swing.tree.DefaultMutableTreeNode, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, freemind.controller.MapModuleManager, freemind.view.MapModule, javax.swing.tree.DefaultMutableTreeNode, freemind.modes.MindMap, java.util.Map.Entry, freemind.modes.MindMap, java.util.Iterator), 1.0, 6411, 
6416, createAttributeSubTrees(freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, freemind.modes.attributes.AttributeRegistry, javax.swing.tree.DefaultMutableTreeNode, int, javax.swing.tree.DefaultMutableTreeNode, freemind.modes.attributes.AttributeRegistryElement), 2.0, 6411, 
6418, valueChanged(int, javax.swing.event.TreeSelectionEvent, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, javax.swing.tree.DefaultMutableTreeNode), 1.0, 6411, 
6419, setParentSelectionType(javax.swing.tree.DefaultMutableTreeNode, javax.swing.tree.DefaultMutableTreeNode, int, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, int, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, javax.swing.tree.TreeNode), 2.0, 6411, 
6420, setSelectionType(javax.swing.tree.TreeNode, int, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, int), 2.0, 6411, 
6422, TreeNodeInfo(java.lang.String), 1.0, 6421, 
6423, getSelected(), 0.0, 6421, 
6424, setSelected(int), 1.0, 6421, 
6425, getInfo(), 0.0, 6421, 
6426, toString(), 0.0, 6421, 
6428, AttributeTreeNodeInfo(boolean, java.lang.String), 2.0, 6427, 
6429, isRestricted(), 0.0, 6427, 
6431, MyRenderer(), 0.0, 6430, 
6434, actionPerformed(java.awt.event.ActionEvent), 1.0, 6433, 
6437, actionPerformed(java.awt.event.ActionEvent), 1.0, 6436, 
6440, RemoveAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6439, 
6441, createAction(int, freemind.modes.attributes.NodeAttributeTableModel, freemind.controller.actions.generated.instance.DeleteAttributeElementaryAction), 2.0, 6439, 
6442, createActionPair(freemind.modes.attributes.NodeAttributeTableModel, int, java.lang.String, java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair), 2.0, 6439, 
6443, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.DeleteAttributeElementaryAction), 1.0, 6439, 
6444, act(freemind.modes.attributes.NodeAttributeTableModel, int), 2.0, 6439, 
6445, getDoActionClass(), 0.0, 6439, 
6447, SetAttributeRestrictedActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6446, 
6448, createAction(int, boolean, freemind.controller.actions.generated.instance.SetAttributeRestrictedElementaryAction), 2.0, 6446, 
6449, createActionPair(boolean, int, boolean, freemind.modes.mindmapmode.actions.xml.ActionPair), 2.0, 6446, 
6450, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeRestrictedElementaryAction), 1.0, 6446, 
6451, act(int, boolean), 2.0, 6446, 
6452, getDoActionClass(), 0.0, 6446, 
6454, UnregistryAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6453, 
6455, createAction(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.UnregistryAttributeValueElementaryAction), 2.0, 6453, 
6456, createActionPair(java.lang.String, java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair), 2.0, 6453, 
6457, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UnregistryAttributeValueElementaryAction), 1.0, 6453, 
6458, act(java.lang.String, java.lang.String), 2.0, 6453, 
6459, getDoActionClass(), 0.0, 6453, 
6462, Preview(freemind.view.mindmapview.MapView, double, java.awt.print.PageFormat), 2.0, 6461, 
6463, paintPaper(java.awt.Graphics, java.awt.print.PageFormat), 2.0, 6461, 
6464, paint(java.awt.Graphics, java.awt.Graphics2D, java.awt.print.PageFormat), 1.0, 6461, 
6465, getPageHeight(java.awt.print.PageFormat), 1.0, 6461, 
6466, getPageWidth(java.awt.print.PageFormat), 1.0, 6461, 
6467, moveIndex(int, int), 1.0, 6461, 
6468, changeZoom(double), 1.0, 6461, 
6469, resize(int), 0.0, 6461, 
6470, getPageFormat(), 0.0, 6461, 
6471, getMinimumSize(), 0.0, 6461, 
6472, getPageIndex(), 0.0, 6461, 
6474, PreviewDialog(freemind.view.mindmapview.MapView, freemind.controller.printpreview.Preview, java.lang.String, javax.swing.JToolBar, javax.swing.JPanel, javax.swing.JScrollPane, javax.swing.JButton, javax.swing.JButton), 2.0, 6473, 
6475, getButton(java.lang.String), 1.0, 6473, 
6476, getButton(javax.swing.AbstractAction, java.lang.String), 2.0, 6473, 
6478, actionPerformed(java.awt.event.ActionEvent), 1.0, 6473, 
6481, actionPerformed(java.awt.event.ActionEvent), 1.0, 6479, 
6482, paintPageIndex(), 0.0, 6479, 
6483, getPageIndexText(), 0.0, 6479, 
6485, run(), 0.0, 6484, 
6488, ZoomAction(freemind.controller.printpreview.Preview, double), 2.0, 6487, 
6489, actionPerformed(java.awt.event.ActionEvent), 1.0, 6487, 
6492, startupMapHook(freemind.modes.attributes.Attribute, freemind.modes.MindMapNode, java.util.Vector, plugins.script.ScriptEditor.NodeScriptModel, int, plugins.script.ScriptEditorPanel), 0.0, 6491, 
6494, AttributeHolder(int, freemind.modes.attributes.Attribute), 2.0, 6493, 
6496, SignedScriptHandler(), 0.0, 6495, 
6497, initializeKeystore(java.io.FileInputStream, char[], java.lang.Exception), 1.0, 6495, 
6499, isScriptSigned(java.lang.String, java.io.OutputStream, java.lang.String, java.util.Iterator, java.security.cert.Certificate, boolean, java.security.cert.CertificateFactory, java.security.Signature, plugins.script.SignedScriptHandler.ScriptContents, java.util.Collection, java.lang.Exception, java.lang.Exception), 2.0, 6495, 
6501, ScriptContents(), 0.0, 6500, 
6502, ScriptContents(java.lang.String, int, java.util.regex.Matcher, int), 1.0, 6500, 
6503, toString(java.lang.String), 0.0, 6500, 
6506, decorateDialog(plugins.script.ScriptEditorPanel, java.lang.String), 2.0, 6504, 
6508, getAmountOfScripts(), 0.0, 6504, 
6509, getScript(int, freemind.modes.attributes.Attribute), 1.0, 6504, 
6510, setScript(int, plugins.script.ScriptEditorPanel.ScriptHolder, plugins.script.ScriptEditor.AttributeHolder), 2.0, 6504, 
6512, endDialog(boolean, plugins.script.ScriptEditor.AttributeHolder, int, int, freemind.modes.attributes.Attribute, java.util.Iterator), 1.0, 6504, 
6513, isDirty(), 0.0, 6504, 
6514, addNewScript(boolean, int, int, int, plugins.script.ScriptEditor.AttributeHolder, java.lang.String, java.util.Iterator), 0.0, 6504, 
6517, checkAccept(int, java.lang.String), 2.0, 6515, 
6519, checkConnect(java.lang.String, int), 2.0, 6515, 
6520, checkListen(int), 1.0, 6515, 
6521, checkMulticast(java.net.InetAddress, byte), 2.0, 6515, 
6522, checkMulticast(java.net.InetAddress), 1.0, 6515, 
6523, checkSetFactory(), 0.0, 6515, 
6524, checkExec(java.lang.String), 1.0, 6515, 
6525, checkLink(java.lang.String, java.util.HashSet), 1.0, 6515, 
6526, checkDelete(java.lang.String), 1.0, 6515, 
6527, checkRead(java.io.FileDescriptor), 1.0, 6515, 
6528, checkRead(java.lang.Object, java.lang.String), 2.0, 6515, 
6529, checkRead(java.lang.String), 1.0, 6515, 
6530, checkWrite(java.io.FileDescriptor), 1.0, 6515, 
6531, checkWrite(java.lang.String), 1.0, 6515, 
6532, getException(int, int), 2.0, 6515, 
6533, checkAccess(java.lang.Thread), 1.0, 6515, 
6534, checkAccess(java.lang.ThreadGroup), 1.0, 6515, 
6535, checkAwtEventQueueAccess(), 0.0, 6515, 
6536, checkCreateClassLoader(), 0.0, 6515, 
6537, checkExit(int), 1.0, 6515, 
6538, checkMemberAccess(int, java.lang.Class), 2.0, 6515, 
6539, checkPackageAccess(java.lang.String), 1.0, 6515, 
6540, checkPackageDefinition(java.lang.String), 1.0, 6515, 
6541, checkPermission(java.lang.Object, java.security.Permission), 2.0, 6515, 
6542, checkPermission(java.security.Permission), 1.0, 6515, 
6543, checkPrintJobAccess(), 0.0, 6515, 
6544, checkPropertiesAccess(), 0.0, 6515, 
6545, checkPropertyAccess(java.lang.String), 1.0, 6515, 
6546, checkSecurityAccess(java.lang.String), 1.0, 6515, 
6547, checkSystemClipboardAccess(), 0.0, 6515, 
6548, checkTopLevelWindow(java.lang.Object), 1.0, 6515, 
6550, startupMapHook(freemind.modes.MindMapNode, freemind.main.Tools.BooleanHolder, java.lang.String), 0.0, 6549, 
6552, performScriptOperation(freemind.main.Tools.BooleanHolder, freemind.modes.MindMapNode, int, java.util.Iterator, plugins.script.ScriptingRegistration, boolean, java.lang.String, java.lang.String, freemind.modes.MindMapNode, freemind.modes.attributes.NodeAttributeTableModel), 2.0, 6549, 
6553, findLineNumberInString(int, java.lang.String, java.util.regex.Matcher, java.util.regex.Pattern), 2.0, 6549, 
6556, gotoLine(int), 1.0, 6555, 
6558, gotoLine(int), 1.0, 6557, 
6561, gotoLine(int), 1.0, 6560, 
6564, evaluate(groovy.lang.Script, java.lang.String, java.io.InputStream), 2.0, 6563, 
6567, addAction(javax.swing.AbstractAction, javax.swing.JMenu, javax.swing.JMenuItem), 2.0, 6565, 
6568, updateFields(int, plugins.script.ScriptEditorPanel.ScriptHolder), 0.0, 6565, 
6569, select(int), 1.0, 6565, 
6570, storeCurrent(int), 0.0, 6565, 
6571, disposeDialog(boolean, freemind.controller.actions.generated.instance.ScriptEditorWindowConfigurationStorage, int), 1.0, 6565, 
6572, getPrintStream(), 0.0, 6565, 
6573, getErrorHandler(), 0.0, 6565, 
6575, write(int), 1.0, 6574, 
6576, write(byte[]), 1.0, 6574, 
6579, RunAction(java.lang.String), 1.0, 6578, 
6580, actionPerformed(java.awt.event.ActionEvent), 1.0, 6578, 
6582, SignAction(java.lang.String), 1.0, 6581, 
6583, actionPerformed(java.awt.event.ActionEvent, int, plugins.script.ScriptEditorPanel.ScriptHolder, java.lang.String), 1.0, 6581, 
6585, CancelAction(java.lang.String), 1.0, 6584, 
6586, actionPerformed(java.awt.event.ActionEvent), 1.0, 6584, 
6588, ExitAction(java.lang.String), 1.0, 6587, 
6589, actionPerformed(java.awt.event.ActionEvent), 1.0, 6587, 
6591, NewScriptAction(java.lang.String), 1.0, 6590, 
6592, actionPerformed(java.awt.event.ActionEvent, int), 1.0, 6590, 
6594, ScriptHolder(java.lang.String, java.lang.String), 2.0, 6593, 
6595, getScript(), 0.0, 6593, 
6596, getScriptName(), 0.0, 6593, 
6597, setScript(java.lang.String), 1.0, 6593, 
6598, setScriptName(java.lang.String), 1.0, 6593, 
6600, getAmountOfScripts(), 0.0, 6599, 
6601, getScript(int), 1.0, 6599, 
6602, setScript(plugins.script.ScriptEditorPanel.ScriptHolder, int), 2.0, 6599, 
6605, decorateDialog(java.lang.String, plugins.script.ScriptEditorPanel), 2.0, 6599, 
6606, endDialog(boolean), 1.0, 6599, 
6607, isDirty(), 0.0, 6599, 
6608, addNewScript(), 0.0, 6599, 
6610, windowClosing(java.awt.event.WindowEvent), 1.0, 6609, 
6612, actionPerformed(java.awt.event.ActionEvent), 1.0, 6611, 
6614, valueChanged(javax.swing.event.ListSelectionEvent), 1.0, 6613, 
6617, caretUpdate(javax.swing.event.CaretEvent, int, int, javax.swing.text.BadLocationException), 1.0, 6616, 
6620, gotoLine(int, javax.swing.text.Element, javax.swing.text.Element), 1.0, 6619, 
6623, ScriptingRegistration(freemind.modes.MindMap, freemind.modes.ModeController), 2.0, 6622, 
6624, register(), 0.0, 6622, 
6625, deRegister(), 0.0, 6622, 
6626, act(freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode), 2.0, 6622, 
6627, getScriptCookies(), 0.0, 6622, 
6629, ScriptingPluginPropertyContributor(freemind.modes.mindmapmode.MindMapController), 1.0, 6628, 
6630, getControls(freemind.common.TextTranslator, java.util.Vector), 1.0, 6628, 
6632, PatternScriptModel(java.lang.String), 1.0, 6631, 
6633, decorateDialog(java.lang.String, plugins.script.ScriptEditorPanel), 2.0, 6631, 
6634, endDialog(boolean), 1.0, 6631, 
6636, getAmountOfScripts(), 0.0, 6631, 
6637, getScript(int), 1.0, 6631, 
6638, isDirty(), 0.0, 6631, 
6639, setScript(plugins.script.ScriptEditorPanel.ScriptHolder, int), 2.0, 6631, 
6641, getScript(), 0.0, 6631, 
6642, addNewScript(), 0.0, 6631, 
6644, startEditor(plugins.script.ScriptingRegistration.PatternScriptModel, java.lang.String, plugins.script.ScriptEditorPanel), 1.0, 6643, 
6647, gotoLine(int), 1.0, 6646, 
6651, CompileXsdStart(java.io.InputStream), 1.0, 6650, 
6652, main(String[], de.foltin.CompileXsdStart), 1.0, 6650, 
6653, print(java.util.HashMap, java.lang.String, java.io.FileOutputStream, java.lang.String, java.util.Iterator, java.io.File, java.util.Iterator, java.lang.String), 0.0, 6650, 
6654, generate(javax.xml.parsers.SAXParserFactory, javax.xml.parsers.SAXParser), 0.0, 6650, 
6656, createClass(java.lang.String, java.util.HashMap), 1.0, 6650, 
6658, firstLetterCapitalized(java.lang.String), 1.0, 6650, 
6659, getNameFromXml(java.lang.String, java.lang.String, java.util.StringTokenizer), 1.0, 6650, 
6660, getType(java.lang.String), 1.0, 6650, 
6662, ElementTypes(int), 1.0, 6661, 
6663, getId(), 0.0, 6661, 
6665, XsdHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6664, 
6666, getClassName(), 0.0, 6664, 
6667, getClassMap(java.lang.String), 0.0, 6664, 
6668, appendToClassMap(java.lang.String, java.lang.String, java.util.HashMap), 2.0, 6664, 
6669, addArrayListImport(), 0.0, 6664, 
6670, getExtendsClassName(), 0.0, 6664, 
6671, startElement(org.xml.sax.Attributes, java.lang.String), 2.0, 6664, 
6673, createElementHandler(), 0.0, 6664, 
6675, startClass(java.lang.String, org.xml.sax.Attributes, java.util.HashMap, java.lang.String), 1.0, 6664, 
6677, ExtensionHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6676, 
6678, startElement(de.foltin.CompileXsdStart.ComplexTypeHandler, de.foltin.CompileXsdStart.XsdHandler, java.lang.String, org.xml.sax.Attributes, java.lang.String), 2.0, 6676, 
6680, SchemaHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6679, 
6682, ChoiceHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6681, 
6683, createElementHandler(), 0.0, 6681, 
6684, isSingleChoice(), 0.0, 6681, 
6685, startElement(org.xml.sax.Attributes, java.lang.String), 2.0, 6681, 
6688, ChoiceElementHandler(de.foltin.CompileXsdStart.XsdHandler, de.foltin.CompileXsdStart.ChoiceHandler), 1.0, 6687, 
6689, startElement(java.lang.String, org.xml.sax.Attributes, java.lang.String, java.lang.String, java.lang.String), 2.0, 6687, 
6691, GroupHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6690, 
6694, SequenceHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6693, 
6695, createElementHandler(), 0.0, 6693, 
6697, SequenceElementHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6696, 
6698, startElement(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, org.xml.sax.Attributes, java.lang.String, java.lang.String, java.lang.String, java.lang.String), 2.0, 6696, 
6700, ComplexTypeHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6699, 
6701, startElement(java.lang.String, org.xml.sax.Attributes), 2.0, 6699, 
6704, ComplexContentHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6703, 
6706, AttributeHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6705, 
6707, startElement(java.lang.String, java.lang.String, org.xml.sax.Attributes, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String), 2.0, 6705, 
6710, ManagePatternsPopupDialog(freemind.modes.mindmapmode.MindMapController, java.util.List, javax.swing.JFrame, java.lang.Exception), 2.0, 6709, 
6711, initialize(java.util.List, javax.swing.JPanel, freemind.controller.actions.generated.instance.ManageStyleEditorWindowConfigurationStorage, freemind.controller.actions.generated.instance.Pattern, int, java.util.Iterator, javax.swing.Action), 1.0, 6709, 
6712, getDialogTitle(), 0.0, 6709, 
6713, close(freemind.controller.actions.generated.instance.ManageStyleEditorWindowConfigurationStorage), 0.0, 6709, 
6714, okPressed(), 0.0, 6709, 
6715, cancelPressed(), 0.0, 6709, 
6716, getJContentPane(javax.swing.JScrollPane, java.util.List, java.awt.event.ActionListener, javax.swing.JMenuItem, javax.swing.JMenuItem, java.awt.event.ActionListener, javax.swing.JMenuItem, javax.swing.JMenuBar, javax.swing.JMenuItem, javax.swing.JMenu, freemind.controller.StructuredMenuHolder, javax.swing.JMenuItem, java.awt.event.ActionListener, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem), 1.0, 6709, 
6717, addPattern(int, java.awt.event.ActionEvent, freemind.controller.actions.generated.instance.Pattern), 1.0, 6709, 
6718, duplicatePattern(java.awt.event.ActionEvent, freemind.controller.actions.generated.instance.Pattern, int, freemind.controller.actions.generated.instance.Pattern, freemind.common.XmlBindingTools), 1.0, 6709, 
6719, insertPatternFromNode(int, java.awt.event.ActionEvent, freemind.controller.actions.generated.instance.Pattern), 1.0, 6709, 
6720, applyToNode(java.awt.event.ActionEvent, freemind.controller.actions.generated.instance.Pattern, java.util.Iterator, int, freemind.modes.MindMapNode), 1.0, 6709, 
6721, searchForNameForNewPattern(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Pattern, java.util.Iterator, int, java.util.Vector), 0.0, 6709, 
6722, removePattern(java.awt.event.ActionEvent, int), 1.0, 6709, 
6723, getJOKButton(), 0.0, 6709, 
6724, getJCancelButton(), 0.0, 6709, 
6725, getResult(), 0.0, 6709, 
6726, getText(java.lang.String), 1.0, 6709, 
6727, getPatternList(), 0.0, 6709, 
6728, writePatternBackToModel(java.lang.String, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern, java.lang.String, freemind.controller.actions.generated.instance.Pattern), 0.0, 6709, 
6729, keyPressed(java.awt.event.KeyEvent), 1.0, 6709, 
6730, keyReleased(java.awt.event.KeyEvent), 1.0, 6709, 
6731, keyTyped(java.awt.event.KeyEvent), 1.0, 6709, 
6732, getLastSelectedPattern(), 0.0, 6709, 
6733, setLastSelectedPattern(freemind.controller.actions.generated.instance.Pattern), 1.0, 6709, 
6735, valueChanged(javax.swing.event.ListSelectionEvent, javax.swing.JList, int, freemind.controller.actions.generated.instance.Pattern), 1.0, 6734, 
6738, PatternListModel(java.util.List), 1.0, 6737, 
6739, getSize(), 0.0, 6737, 
6740, getElementAt(int), 1.0, 6737, 
6741, getPatternAt(int), 1.0, 6737, 
6742, getPatternList(), 0.0, 6737, 
6743, removePattern(int), 1.0, 6737, 
6744, addPattern(freemind.controller.actions.generated.instance.Pattern, int), 2.0, 6737, 
6745, printPatterns(java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, int), 0.0, 6737, 
6746, getPatternByName(java.lang.String, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern), 1.0, 6737, 
6747, add(int, java.lang.Object, freemind.controller.actions.generated.instance.Pattern, java.lang.String), 2.0, 6737, 
6748, remove(int), 1.0, 6737, 
6750, windowClosing(java.awt.event.WindowEvent), 1.0, 6749, 
6752, actionPerformed(java.awt.event.ActionEvent), 1.0, 6751, 
6754, mouseDragged(java.awt.event.MouseEvent), 1.0, 6753, 
6755, mouseMoved(java.awt.event.MouseEvent), 1.0, 6753, 
6758, actionPerformed(java.awt.event.ActionEvent), 1.0, 6757, 
6761, actionPerformed(java.awt.event.ActionEvent), 1.0, 6760, 
6764, actionPerformed(java.awt.event.ActionEvent), 1.0, 6763, 
6767, actionPerformed(java.awt.event.ActionEvent), 1.0, 6766, 
6770, actionPerformed(java.awt.event.ActionEvent), 1.0, 6769, 
6773, mouseReleased(java.awt.event.MouseEvent), 1.0, 6772, 
6774, mousePressed(java.awt.event.MouseEvent), 1.0, 6772, 
6775, showPopup(javax.swing.JList, java.awt.event.MouseEvent), 2.0, 6772, 
6777, actionPerformed(java.awt.event.ActionEvent), 1.0, 6776, 
6779, actionPerformed(java.awt.event.ActionEvent), 1.0, 6778, 
6782, initialize(java.lang.String, javax.swing.JPanel, javax.swing.Action), 1.0, 6780, 
6783, close(freemind.controller.actions.generated.instance.WindowConfigurationStorage), 0.0, 6780, 
6784, okPressed(), 0.0, 6780, 
6785, cancelPressed(), 0.0, 6780, 
6786, getJContentPane(), 0.0, 6780, 
6787, getStylePatternFrame(), 0.0, 6780, 
6788, getJOKButton(), 0.0, 6780, 
6789, getJCancelButton(), 0.0, 6780, 
6790, getResult(), 0.0, 6780, 
6791, getText(java.lang.String), 1.0, 6780, 
6792, getPattern(), 0.0, 6780, 
6793, getPattern(freemind.controller.actions.generated.instance.Pattern), 1.0, 6780, 
6794, keyPressed(java.awt.event.KeyEvent), 1.0, 6780, 
6795, keyReleased(java.awt.event.KeyEvent), 1.0, 6780, 
6796, keyTyped(java.awt.event.KeyEvent), 1.0, 6780, 
6798, windowClosing(java.awt.event.WindowEvent), 1.0, 6797, 
6800, actionPerformed(java.awt.event.ActionEvent), 1.0, 6799, 
6802, actionPerformed(java.awt.event.ActionEvent), 1.0, 6801, 
6804, actionPerformed(java.awt.event.ActionEvent), 1.0, 6803, 
6806, ArrayListTransferHandler(java.lang.ClassNotFoundException), 0.0, 6805, 
6807, importData(java.awt.datatransfer.Transferable, javax.swing.JComponent, java.util.ArrayList, int, int, accessories.plugins.dialogs.ManagePatternsPopupDialog.PatternListModel, javax.swing.JList, int, java.io.IOException, java.awt.datatransfer.UnsupportedFlavorException), 2.0, 6805, 
6809, hasLocalArrayListFlavor(DataFlavor[], int), 1.0, 6805, 
6810, canImport(DataFlavor[], javax.swing.JComponent), 2.0, 6805, 
6811, createTransferable(Object[], java.util.ArrayList, javax.swing.JComponent, java.lang.Object, int, java.lang.String), 1.0, 6805, 
6812, getSourceActions(javax.swing.JComponent), 1.0, 6805, 
6814, ArrayListTransferable(java.util.ArrayList), 1.0, 6813, 
6815, getTransferData(java.awt.datatransfer.DataFlavor), 1.0, 6813, 
6816, getTransferDataFlavors(), 0.0, 6813, 
6817, isDataFlavorSupported(java.awt.datatransfer.DataFlavor), 1.0, 6813, 
6819, EnterPasswordDialog(), 0.0, 6818, 
6821, initialize(), 0.0, 6818, 
6822, close(), 0.0, 6818, 
6823, okPressed(), 0.0, 6818, 
6824, checkEqualAndMinimumSize(char[], char[], int), 0.0, 6818, 
6825, cancelPressed(), 0.0, 6818, 
6826, getJContentPane(java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints), 0.0, 6818, 
6827, getJPasswordField(), 0.0, 6818, 
6828, getJPasswordField1(), 0.0, 6818, 
6829, getJOKButton(), 0.0, 6818, 
6830, getJCancelButton(), 0.0, 6818, 
6831, getResult(), 0.0, 6818, 
6832, getPassword(), 0.0, 6818, 
6834, windowClosing(java.awt.event.WindowEvent), 1.0, 6833, 
6836, actionPerformed(java.awt.event.ActionEvent), 1.0, 6835, 
6838, actionPerformed(java.awt.event.ActionEvent), 1.0, 6837, 
6841, CommonToggleChildrenFoldedAction(freemind.modes.viewmodes.ViewControllerAdapter), 1.0, 6840, 
6842, actionPerformed(java.awt.event.ActionEvent, freemind.view.mindmapview.NodeView), 1.0, 6840, 
6844, ViewControllerAdapter(freemind.modes.Mode), 1.0, 6843, 
6845, doubleClick(java.awt.event.MouseEvent), 1.0, 6843, 
6846, plainClick(java.awt.event.MouseEvent), 1.0, 6843, 
6847, extendSelection(boolean, java.lang.String, boolean, boolean, java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView, boolean), 1.0, 6843, 
6848, setFolded(boolean, freemind.modes.MindMapNode), 2.0, 6843, 
6849, startupController(), 0.0, 6843, 
6850, shutdownController(), 0.0, 6843, 
6851, setAllActions(boolean), 1.0, 6843, 
6852, createXMLElement(), 0.0, 6843, 
6858, SortedMapListModel(), 0.0, 6857, 
6859, getSize(), 0.0, 6857, 
6860, getElementAt(int), 1.0, 6857, 
6861, add(java.lang.Object), 1.0, 6857, 
6862, addAll(Object[], java.util.Collection), 1.0, 6857, 
6863, clear(int), 0.0, 6857, 
6864, contains(java.lang.Object), 1.0, 6857, 
6865, firstElement(), 0.0, 6857, 
6866, iterator(), 0.0, 6857, 
6867, lastElement(), 0.0, 6857, 
6868, getIndexOf(java.lang.Object, int, java.util.Iterator), 1.0, 6857, 
6869, replace(java.lang.Object, java.lang.Object, boolean, boolean), 2.0, 6857, 
6870, remove(java.lang.Object), 1.0, 6857, 
6872, SortedMapVector(), 0.0, 6871, 
6873, add(int, java.lang.Comparable, java.lang.Object), 2.0, 6871, 
6874, capacity(), 0.0, 6871, 
6875, clear(), 0.0, 6871, 
6876, getValue(int), 1.0, 6871, 
6877, getValue(java.lang.Comparable, int), 1.0, 6871, 
6878, getKey(int), 1.0, 6871, 
6879, containsKey(java.lang.Comparable, int), 1.0, 6871, 
6880, indexOf(java.lang.Comparable, int), 1.0, 6871, 
6881, findElement(java.lang.Comparable), 1.0, 6871, 
6883, remove(java.lang.Comparable, int), 1.0, 6871, 
6884, remove(int), 1.0, 6871, 
6885, size(), 0.0, 6871, 
6887, MapElement(java.lang.Object, java.lang.Comparable), 2.0, 6886, 
6888, getValue(), 0.0, 6886, 
6889, setValue(java.lang.Object), 1.0, 6886, 
6890, getKey(), 0.0, 6886, 
6892, clear(), 0.0, 6891, 
6893, contains(java.lang.Object), 1.0, 6891, 
6894, add(java.lang.Object), 1.0, 6891, 
6895, replace(java.lang.Object, java.lang.Object), 2.0, 6891, 
6896, remove(java.lang.Object), 1.0, 6891, 
6897, getIndexOf(java.lang.Object), 1.0, 6891, 
6899, setExtensionList(freemind.controller.filter.util.SortedListModel, int, int), 1.0, 6898, 
6900, ExtendedComboBoxModel(), 0.0, 6898, 
6901, ExtendedComboBoxModel(Object[]), 1.0, 6898, 
6902, ExtendedComboBoxModel(java.util.Vector), 1.0, 6898, 
6903, getElementAt(int, int), 1.0, 6898, 
6904, getSize(), 0.0, 6898, 
6905, getExtensionSize(), 0.0, 6898, 
6906, getOwnSize(), 0.0, 6898, 
6907, getModel(), 0.0, 6898, 
6908, insertElementAt(java.lang.Object, int), 2.0, 6898, 
6909, removeAllElements(), 0.0, 6898, 
6910, removeElement(java.lang.Object), 1.0, 6898, 
6911, removeElementAt(int), 1.0, 6898, 
6912, addSortedElement(java.lang.Object), 1.0, 6898, 
6913, getIndexOf(java.lang.Object, int, int), 1.0, 6898, 
6915, intervalAdded(javax.swing.event.ListDataEvent, int), 1.0, 6914, 
6916, intervalRemoved(javax.swing.event.ListDataEvent, int), 1.0, 6914, 
6917, contentsChanged(javax.swing.event.ListDataEvent, int), 1.0, 6914, 
6920, setSelectedItem(java.lang.Object), 1.0, 6919, 
6921, getSelectedItem(), 0.0, 6919, 
6924, startupMapHook(plugins.collaboration.jabber.mindmap.MapSharingController), 0.0, 6923, 
6927, WindowClosingAdapter(boolean), 1.0, 6926, 
6928, WindowClosingAdapter(), 0.0, 6926, 
6929, windowClosing(java.awt.event.WindowEvent), 1.0, 6926, 
6933, init(java.awt.CardLayout, com.jgoodies.forms.layout.FormLayout, java.lang.String, com.jgoodies.forms.builder.DefaultFormBuilder, freemind.common.PropertyControl, java.util.Iterator, javax.swing.JPanel), 0.0, 6931, 
6934, addListeners(java.util.Iterator, freemind.common.PropertyControl, freemind.common.PropertyBean), 0.0, 6931, 
6935, getControls(java.util.Vector, java.util.Vector, freemind.modes.mindmapmode.MindMapController, freemind.modes.MindIcon, java.util.Enumeration, java.util.Vector, freemind.modes.mindmapmode.actions.IconAction, freemind.main.FreeMind, int, java.util.Vector), 0.0, 6931, 
6936, getPatternNames(freemind.controller.actions.generated.instance.Pattern, java.util.Iterator, java.util.Vector), 0.0, 6931, 
6937, getText(java.lang.String), 1.0, 6931, 
6938, setPattern(freemind.common.ThreeCheckBoxProperty, freemind.controller.actions.generated.instance.Pattern, java.util.Iterator, freemind.main.FreeMind, freemind.modes.MindIcon), 1.0, 6931, 
6941, transformEdgeWidth(java.lang.String, java.lang.Integer, java.util.HashMap, java.lang.String, java.util.Iterator, int), 1.0, 6931, 
6942, transformStringToWidth(java.lang.String, java.util.HashMap, int), 1.0, 6931, 
6943, getEdgeWidthTransformation(java.util.HashMap), 0.0, 6931, 
6944, getResultPattern(freemind.controller.actions.generated.instance.Pattern), 0.0, 6931, 
6945, getResultPattern(freemind.controller.actions.generated.instance.Pattern), 1.0, 6931, 
6948, propertyChange(java.beans.PropertyChangeEvent, freemind.common.ThreeCheckBoxProperty, freemind.common.PropertyControl), 1.0, 6931, 
6949, setPatternList(java.util.List, java.util.Vector), 1.0, 6931, 
6951, StylePatternFrameType(), 0.0, 6950, 
6953, propertyChange(java.beans.PropertyChangeEvent, java.util.Iterator, freemind.common.ThreeCheckBoxProperty), 1.0, 6952, 
6956, transform(java.lang.String), 1.0, 6955, 
6958, transform(java.lang.String), 1.0, 6957, 
6961, transform(java.lang.String), 1.0, 6960, 
6964, transform(java.lang.String), 1.0, 6963, 
6969, setProperties(java.util.Iterator, freemind.common.PropertyControl, freemind.common.PropertyBean, java.lang.String, java.lang.String), 0.0, 6967, 
6970, getOptionProperties(freemind.common.PropertyBean, java.lang.String, freemind.common.PropertyControl, java.util.Properties, java.util.Iterator), 0.0, 6967, 
6971, buildPanel(com.jgoodies.forms.layout.FormLayout, java.lang.String, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JPanel, javax.swing.JScrollPane, java.awt.CardLayout, com.jgoodies.forms.layout.FormLayout, freemind.preferences.layout.OptionPanel.ChangeTabAction, javax.swing.JButton, java.util.Iterator, javax.swing.JButton, freemind.common.PropertyControl, javax.swing.JButton, freemind.preferences.layout.OptionPanel.NewTabProperty, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JSplitPane), 0.0, 6967, 
6972, getText(java.lang.String), 1.0, 6967, 
6973, checkConnectionToFreeMindMain(), 0.0, 6967, 
6975, getTabButton(java.lang.String), 1.0, 6967, 
6976, getAllButtons(), 0.0, 6967, 
6977, getControls(java.lang.String, java.lang.String, String[], freemind.modes.ModeController, java.util.Vector, int, freemind.modes.IconInformation, java.util.Vector, java.lang.String, freemind.modes.mindmapmode.MindMapController, java.util.Vector, java.util.Iterator, java.util.Iterator, int, java.util.Vector, java.lang.String, freemind.preferences.layout.OptionPanel.KeyProperty, freemind.preferences.FreemindPropertyContributor, LookAndFeelInfo[]), 0.0, 6967, 
6978, closeWindow(freemind.controller.actions.generated.instance.OptionPanelWindowConfigurationStorage), 0.0, 6967, 
6979, addContributor(freemind.preferences.FreemindPropertyContributor), 1.0, 6967, 
6980, removeContributor(freemind.preferences.FreemindPropertyContributor), 1.0, 6967, 
6982, writeProperties(java.util.Properties), 1.0, 6981, 
6984, actionPerformed(java.awt.event.ActionEvent), 1.0, 6983, 
6987, actionPerformed(java.awt.event.ActionEvent), 1.0, 6986, 
6991, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, java.util.Collection, javax.swing.JButton), 1.0, 6989, 
6993, NewTabProperty(java.lang.String), 1.0, 6992, 
6994, NewTabProperty(java.lang.String, java.lang.String), 2.0, 6992, 
6995, getDescription(), 0.0, 6992, 
6996, getLabel(), 0.0, 6992, 
6997, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder), 2.0, 6992, 
6998, setEnabled(boolean), 1.0, 6992, 
7001, disableModifiers(), 0.0, 6999, 
7002, getDescription(), 0.0, 6999, 
7003, getLabel(), 0.0, 6999, 
7004, setValue(java.lang.String), 1.0, 6999, 
7005, getValue(), 0.0, 6999, 
7006, layout(freemind.common.TextTranslator, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JLabel), 2.0, 6999, 
7007, setEnabled(boolean), 1.0, 6999, 
7008, setLabelText(java.lang.String), 1.0, 6999, 
7009, setImageIcon(javax.swing.ImageIcon), 1.0, 6999, 
7011, actionPerformed(java.util.Vector, java.awt.event.ActionEvent, freemind.preferences.layout.GrabKeyDialog), 1.0, 7010, 
7014, getText(java.lang.String), 1.0, 7013, 
7017, addTranslation(freemind.preferences.layout.KeyEventTranslator.Key, freemind.preferences.layout.KeyEventTranslator.Key), 2.0, 7016, 
7018, translateKeyEvent(char, int, java.awt.event.KeyEvent, freemind.preferences.layout.KeyEventTranslator.Key, int, int, freemind.preferences.layout.KeyEventTranslator.Key), 1.0, 7016, 
7019, parseKey(int, int, java.lang.String, int, int, java.lang.String, java.lang.Exception), 1.0, 7016, 
7021, getSymbolicModifierName(int), 1.0, 7016, 
7022, modifiersToString(java.lang.StringBuffer, int), 1.0, 7016, 
7023, getModifierString(java.awt.event.InputEvent, java.lang.StringBuffer), 1.0, 7016, 
7026, hashCode(), 0.0, 7024, 
7027, equals(java.lang.Object, freemind.preferences.layout.KeyEventTranslator.Key), 1.0, 7024, 
7028, toString(), 0.0, 7024, 
7030, processKeyEvent(int, char, java.awt.event.KeyEvent), 1.0, 7029, 
7031, numericKeypadKey(), 0.0, 7029, 
7033, VariableSizeCardLayout(), 0.0, 7032, 
7034, VariableSizeCardLayout(int, int), 2.0, 7032, 
7035, preferredLayoutSize(java.awt.Dimension, int, int, java.awt.Container, java.awt.Component, java.awt.Insets, int, int), 1.0, 7032, 
7037, toString(java.lang.String, java.awt.event.KeyEvent), 1.0, 7036, 
7040, getShortcut(), 0.0, 7036, 
7041, isOK(), 0.0, 7036, 
7042, isManagingFocus(), 0.0, 7036, 
7043, getFocusTraversalKeysEnabled(), 0.0, 7036, 
7044, processKeyEvent(java.awt.event.KeyEvent), 1.0, 7036, 
7046, getSymbolicName(Field[], int, int, java.lang.reflect.Field, java.lang.String, java.lang.Exception), 1.0, 7036, 
7047, updateAssignedTo(java.lang.String, freemind.preferences.layout.GrabKeyDialog.KeyBinding, java.lang.String), 1.0, 7036, 
7048, getKeyBinding(freemind.preferences.layout.GrabKeyDialog.KeyBinding, java.lang.String, java.util.Enumeration, java.lang.String, java.lang.String), 1.0, 7036, 
7049, getText(java.lang.String), 1.0, 7036, 
7050, getModifierMask(), 0.0, 7036, 
7051, isMacOS(), 0.0, 7036, 
7053, getLength(), 0.0, 7052, 
7054, insert(int, java.lang.String), 2.0, 7052, 
7056, isManagingFocus(), 0.0, 7055, 
7057, getFocusTraversalKeysEnabled(), 0.0, 7055, 
7060, isAssigned(), 0.0, 7058, 
7062, getFocusTraversalKeysEnabled(), 0.0, 7061, 
7063, processKeyEvent(java.awt.event.KeyEvent, java.awt.event.KeyEvent, java.lang.String, java.lang.StringBuffer, freemind.preferences.layout.KeyEventTranslator.Key), 1.0, 7061, 
7066, actionPerformed(java.awt.event.ActionEvent), 1.0, 7065, 
7067, canClose(freemind.preferences.layout.GrabKeyDialog.KeyBinding, int, java.lang.String), 0.0, 7065, 
7071, LatexNodeHook(), 0.0, 7070, 
7072, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 7070, 
7073, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 7070, 
7074, deleteViewer(freemind.view.mindmapview.NodeView, java.awt.Container, int, int, java.awt.Component), 1.0, 7070, 
7075, invoke(freemind.modes.MindMapNode, java.util.Iterator, freemind.view.mindmapview.NodeView), 1.0, 7070, 
7076, createViewer(freemind.view.mindmapview.NodeView, plugins.latex.JZoomedHotEqn), 1.0, 7070, 
7077, getContent(java.lang.String), 1.0, 7070, 
7078, setContent(java.lang.String, java.lang.String, plugins.latex.JZoomedHotEqn, java.util.Iterator), 2.0, 7070, 
7079, loadFrom(freemind.main.XMLElement), 1.0, 7070, 
7080, save(freemind.main.XMLElement), 1.0, 7070, 
7081, shutdownMapHook(plugins.latex.JZoomedHotEqn, java.util.Iterator), 0.0, 7070, 
7083, JZoomedHotEqn(plugins.latex.LatexNodeHook), 1.0, 7082, 
7084, getPreferredSize(java.awt.Dimension), 0.0, 7082, 
7085, paint(java.awt.Graphics, java.awt.Graphics2D, java.awt.geom.AffineTransform), 1.0, 7082, 
7087, mouseClicked(java.awt.event.MouseEvent), 1.0, 7082, 
7088, edit(javax.swing.JTextArea, javax.swing.JScrollPane, java.lang.String, javax.swing.JDialog), 0.0, 7082, 
7089, setModel(plugins.latex.LatexNodeHook), 1.0, 7082, 
7092, EnterPasswordDialog(), 0.0, 7091, 
7094, initialize(), 0.0, 7091, 
7095, close(), 0.0, 7091, 
7096, okPressed(), 0.0, 7091, 
7097, checkEqualAndMinimumSize(char[], char[], int), 0.0, 7091, 
7098, cancelPressed(), 0.0, 7091, 
7099, getJContentPane(java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints), 0.0, 7091, 
7100, getJPasswordField(), 0.0, 7091, 
7101, getJPasswordField1(), 0.0, 7091, 
7102, getJOKButton(), 0.0, 7091, 
7103, getJCancelButton(), 0.0, 7091, 
7104, getResult(), 0.0, 7091, 
7105, getPassword(), 0.0, 7091, 
7107, windowClosing(java.awt.event.WindowEvent), 1.0, 7106, 
7109, actionPerformed(java.awt.event.ActionEvent), 1.0, 7108, 
7111, actionPerformed(java.awt.event.ActionEvent), 1.0, 7110, 
7113, actionPerformed(java.awt.event.ActionEvent), 1.0, 7112, 
7115, PersistentEditableComboBox(freemind.modes.ModeController, java.lang.String, String[], int, java.lang.String, java.lang.String), 2.0, 7114, 
7116, addActionListener(java.awt.event.ActionListener), 1.0, 7114, 
7117, addUrl(boolean, java.lang.String, int, java.lang.String, java.lang.StringBuffer), 2.0, 7114, 
7118, getText(), 0.0, 7114, 
7119, setText(java.lang.String), 1.0, 7114, 
7121, actionPerformed(java.awt.event.ActionEvent), 1.0, 7120, 
7125, canSelect(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 7123, 
7126, calculateIndex(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 7123, 
7127, getPosition(int, javax.swing.JLabel), 1.0, 7123, 
7128, getPositionFromIndex(int), 1.0, 7123, 
7129, setSelectedPosition(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 7123, 
7130, getSelectedPosition(), 0.0, 7123, 
7131, select(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position, int, freemind.modes.IconInformation, java.lang.String), 1.0, 7123, 
7132, unhighlight(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 7123, 
7133, highlight(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 7123, 
7134, cursorLeft(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 7123, 
7135, cursorRight(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 7123, 
7136, cursorUp(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 7123, 
7137, cursorDown(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 7123, 
7138, addIcon(int), 1.0, 7123, 
7139, getResult(), 0.0, 7123, 
7140, getModifiers(int), 0.0, 7123, 
7141, keyPressed(int, java.awt.event.KeyEvent), 1.0, 7123, 
7142, getKeyStrokeForEvent(java.awt.event.KeyEvent), 1.0, 7123, 
7143, findIndexByKeyEvent(java.awt.event.KeyEvent, int, freemind.modes.IconInformation, javax.swing.KeyStroke), 1.0, 7123, 
7144, close(), 0.0, 7123, 
7145, keyReleased(java.awt.event.KeyEvent), 1.0, 7123, 
7146, keyTyped(java.awt.event.KeyEvent), 1.0, 7123, 
7147, mouseClicked(java.awt.event.MouseEvent), 1.0, 7123, 
7148, mouseEntered(java.awt.event.MouseEvent), 1.0, 7123, 
7149, mouseExited(java.awt.event.MouseEvent), 1.0, 7123, 
7150, mousePressed(java.awt.event.MouseEvent), 1.0, 7123, 
7151, mouseReleased(java.awt.event.MouseEvent), 1.0, 7123, 
7153, windowClosing(java.awt.event.WindowEvent), 1.0, 7152, 
7155, Position(int, int), 2.0, 7154, 
7156, getX(), 0.0, 7154, 
7157, getY(), 0.0, 7154, 
7158, toString(), 0.0, 7154, 
7161, MapSharingWizardView(), 0.0, 7160, 
7162, addCloseButtonMouseListener(java.awt.event.MouseListener), 1.0, 7160, 
7163, addNextButtonMouseListener(java.awt.event.MouseListener), 1.0, 7160, 
7164, addBackButtonMouseListener(java.awt.event.MouseListener), 1.0, 7160, 
7165, addAcceptButtonMouseListener(java.awt.event.MouseListener), 1.0, 7160, 
7166, addDeclineButtonMouseListener(java.awt.event.MouseListener), 1.0, 7160, 
7167, buildShareMapSelectionGui(javax.swing.JPanel, javax.swing.SpringLayout, javax.swing.ButtonGroup), 0.0, 7160, 
7168, buildConnectToServerGui(javax.swing.JLabel, javax.swing.JLabel, javax.swing.SpringLayout, javax.swing.JLabel, javax.swing.JPanel), 0.0, 7160, 
7169, buildSelectUserGui(javax.swing.JPanel, javax.swing.SpringLayout), 0.0, 7160, 
7170, buildNotificationMessageGui(java.lang.String, java.lang.String, javax.swing.SpringLayout), 2.0, 7160, 
7171, buildMapShareAcceptDeclineGui(java.lang.String, javax.swing.SpringLayout), 1.0, 7160, 
7172, addWizardButtons(javax.swing.JPanel, boolean), 2.0, 7160, 
7173, addCloseButton(javax.swing.JPanel), 1.0, 7160, 
7174, addAcceptDeclineButtons(javax.swing.JPanel), 1.0, 7160, 
7175, removeUIs(), 0.0, 7160, 
7176, showMapSharingSelectionDialog(), 0.0, 7160, 
7177, showConnectToServerDialog(), 0.0, 7160, 
7178, showSelectUserDialog(), 0.0, 7160, 
7179, showAwaitMapSharingMessage(), 0.0, 7160, 
7180, showSharingAcceptedMessage(java.lang.String, java.lang.String), 1.0, 7160, 
7181, showSharingDeclinedMessage(java.lang.String, java.lang.String), 1.0, 7160, 
7182, showSharingStoppedMessage(java.lang.String, java.lang.String), 1.0, 7160, 
7183, showMapShareAcceptDeclineMessage(java.lang.String, java.lang.String), 1.0, 7160, 
7184, isShareMapSelected(), 0.0, 7160, 
7185, isWaitForMapSharingSelected(), 0.0, 7160, 
7186, getServername(), 0.0, 7160, 
7187, getUsername(), 0.0, 7160, 
7188, getPassword(), 0.0, 7160, 
7189, getMapShareUserName(), 0.0, 7160, 
7191, printSizes(java.awt.Component), 1.0, 7190, 
7197, getControls(freemind.common.TextTranslator), 1.0, 7196, 
7202, startupMapHook(java.net.URL, java.lang.ClassLoader, java.lang.String, javax.help.HelpBroker, javax.help.HelpSet, java.lang.Exception), 0.0, 7201, 
7205, XmlExporter(), 0.0, 7204, 
7208, ExportDialog(java.io.File, freemind.modes.ModeController, java.awt.GridBagConstraints, javax.swing.JButton, java.lang.String, java.lang.String, javax.swing.JButton, javax.swing.JLabel, javax.swing.JLabel, javax.swing.JButton, javax.swing.JButton, java.awt.GridBagLayout), 2.0, 7207, 
7211, ExportListener(accessories.plugins.util.xslt.ExportDialog), 1.0, 7210, 
7212, ExportListener(accessories.plugins.util.xslt.ExportDialog, boolean), 2.0, 7210, 
7213, actionPerformed(java.awt.event.ActionEvent), 1.0, 7210, 
7215, FileChooseListener(), 0.0, 7214, 
7217, actionPerformed(freemind.main.ExampleFileFilter, javax.swing.JFileChooser, java.awt.event.ActionEvent, java.lang.StringBuffer, java.lang.Object, int, int, java.lang.Exception), 1.0, 7214, 
7221, toString(), 0.0, 7219, 
7222, rename(), 0.0, 7219, 
7223, getModel(), 0.0, 7219, 
7224, getView(), 0.0, 7219, 
7225, getMode(), 0.0, 7219, 
7226, setName(java.lang.String), 1.0, 7219, 
7227, getModeController(), 0.0, 7219, 
7228, getName(), 0.0, 7219, 
7229, getDisplayName(), 0.0, 7219, 
7230, setDisplayName(java.lang.String), 1.0, 7219, 
