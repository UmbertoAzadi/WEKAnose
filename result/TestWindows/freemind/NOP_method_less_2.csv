3, setExtensionList(freemind.controller.filter.util.SortedListModel, int, int), 1.0, 2, 
4, ExtendedComboBoxModel(), 0.0, 2, 
5, ExtendedComboBoxModel(Object[]), 1.0, 2, 
6, ExtendedComboBoxModel(java.util.Vector), 1.0, 2, 
7, getElementAt(int, int), 1.0, 2, 
8, getSize(), 0.0, 2, 
9, getExtensionSize(), 0.0, 2, 
10, getOwnSize(), 0.0, 2, 
11, getModel(), 0.0, 2, 
13, removeAllElements(), 0.0, 2, 
14, removeElement(java.lang.Object), 1.0, 2, 
15, removeElementAt(int), 1.0, 2, 
16, addSortedElement(java.lang.Object), 1.0, 2, 
17, getIndexOf(java.lang.Object, int, int), 1.0, 2, 
19, intervalAdded(javax.swing.event.ListDataEvent, int), 1.0, 18, 
20, intervalRemoved(javax.swing.event.ListDataEvent, int), 1.0, 18, 
21, contentsChanged(javax.swing.event.ListDataEvent, int), 1.0, 18, 
24, clear(), 0.0, 23, 
25, contains(java.lang.Object), 1.0, 23, 
26, add(java.lang.Object), 1.0, 23, 
28, remove(java.lang.Object), 1.0, 23, 
29, getIndexOf(java.lang.Object), 1.0, 23, 
31, SortedMapVector(), 0.0, 30, 
33, capacity(), 0.0, 30, 
34, clear(), 0.0, 30, 
35, getValue(int), 1.0, 30, 
36, getValue(java.lang.Comparable, int), 1.0, 30, 
37, getKey(int), 1.0, 30, 
38, containsKey(java.lang.Comparable, int), 1.0, 30, 
39, indexOf(java.lang.Comparable, int), 1.0, 30, 
40, findElement(java.lang.Comparable), 1.0, 30, 
42, remove(java.lang.Comparable, int), 1.0, 30, 
43, remove(int), 1.0, 30, 
44, size(), 0.0, 30, 
47, getValue(), 0.0, 45, 
48, setValue(java.lang.Object), 1.0, 45, 
49, getKey(), 0.0, 45, 
51, setSelectedItem(java.lang.Object), 1.0, 50, 
52, getSelectedItem(), 0.0, 50, 
54, SortedMapListModel(), 0.0, 53, 
55, getSize(), 0.0, 53, 
56, getElementAt(int), 1.0, 53, 
57, add(java.lang.Object), 1.0, 53, 
58, addAll(Object[], java.util.Collection), 1.0, 53, 
59, clear(int), 0.0, 53, 
60, contains(java.lang.Object), 1.0, 53, 
61, firstElement(), 0.0, 53, 
62, iterator(), 0.0, 53, 
63, lastElement(), 0.0, 53, 
64, getIndexOf(java.lang.Object, java.util.Iterator, int), 1.0, 53, 
66, remove(java.lang.Object), 1.0, 53, 
69, WindowClosingAdapter(boolean), 1.0, 68, 
70, WindowClosingAdapter(), 0.0, 68, 
71, windowClosing(java.awt.event.WindowEvent), 1.0, 68, 
74, columnWidthChanged(freemind.modes.attributes.ColumnWidthChangeEvent), 1.0, 73, 
76, getRowCount(), 0.0, 75, 
77, getColumnWidth(int), 1.0, 75, 
81, getNode(), 0.0, 75, 
82, fireTableDataChanged(), 0.0, 75, 
85, allocateAttributes(int), 1.0, 83, 
86, NodeAttributeTableModel(freemind.modes.MindMapNode), 1.0, 83, 
87, getRowCount(), 0.0, 83, 
89, getName(int, freemind.modes.attributes.Attribute), 1.0, 83, 
90, getValue(int, freemind.modes.attributes.Attribute), 1.0, 83, 
91, getAttributeController(), 0.0, 83, 
93, enableStateIcon(), 0.0, 83, 
94, disableStateIcon(), 0.0, 83, 
96, addRowNoUndo(freemind.modes.attributes.Attribute, int), 1.0, 83, 
99, removeRow(int, java.lang.Object), 1.0, 83, 
100, save(freemind.main.XMLElement, int), 1.0, 83, 
102, saveLayout(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 83, 
103, initializeNodeAttributeLayoutXMLElement(freemind.main.XMLElement), 1.0, 83, 
104, getNode(), 0.0, 83, 
105, getAttribute(int), 1.0, 83, 
106, getColumnCount(), 0.0, 83, 
108, getColumnName(int), 1.0, 83, 
109, getColumnClass(int), 1.0, 83, 
110, getColumnWidth(int), 1.0, 83, 
112, getLayout(), 0.0, 83, 
113, getAttributes(), 0.0, 83, 
116, isVisible(), 0.0, 114, 
117, getValues(), 0.0, 114, 
118, addValue(java.lang.String), 1.0, 114, 
119, removeAllValues(), 0.0, 114, 
120, removeValue(java.lang.String), 1.0, 114, 
121, isRestricted(), 0.0, 114, 
122, getKey(), 0.0, 114, 
123, setKey(java.lang.String), 1.0, 114, 
124, save(freemind.main.XMLElement, freemind.main.XMLElement, int), 0.0, 114, 
125, setVisibility(boolean), 1.0, 114, 
126, setRestriction(boolean), 1.0, 114, 
127, getRestriction(), 0.0, 114, 
128, setRestrictionModel(java.lang.Boolean), 1.0, 114, 
129, getVisibilityModel(), 0.0, 114, 
130, setVisibilityModel(java.lang.Boolean), 1.0, 114, 
133, getRegistry(), 0.0, 132, 
134, getKey(), 0.0, 132, 
135, add(java.lang.Object), 1.0, 132, 
136, _add(java.lang.Object), 1.0, 132, 
137, remove(java.lang.Object), 1.0, 132, 
138, _remove(java.lang.Object), 1.0, 132, 
144, getColumnNumber(), 0.0, 142, 
146, AttributeRegistry(), 0.0, 145, 
147, size(), 0.0, 145, 
148, AttributeRegistry(freemind.modes.MapRegistry), 1.0, 145, 
149, getKey(int), 1.0, 145, 
150, getElement(int), 1.0, 145, 
151, getAttributeController(), 0.0, 145, 
152, removeAtribute(java.lang.Object), 1.0, 145, 
153, containsElement(java.lang.String), 1.0, 145, 
154, getCombinedModel(), 0.0, 145, 
155, getComboBoxModel(), 0.0, 145, 
156, getListBoxModel(), 0.0, 145, 
157, getDefaultComboBoxModel(java.lang.Comparable, freemind.modes.attributes.AttributeRegistryElement, java.util.NoSuchElementException), 1.0, 145, 
158, getElement(java.lang.Comparable, freemind.modes.attributes.AttributeRegistryElement), 1.0, 145, 
159, getVisibleElementsNumber(), 0.0, 145, 
160, addChangeListener(javax.swing.event.ChangeListener), 1.0, 145, 
161, removeChangeListener(javax.swing.event.ChangeListener), 1.0, 145, 
162, addAttributesListener(freemind.modes.mindmapmode.attributeactors.AttributesListener), 1.0, 145, 
163, removeAttributesListener(freemind.modes.mindmapmode.attributeactors.AttributesListener), 1.0, 145, 
164, fireAttributeLayoutChanged(), 0.0, 145, 
165, fireStateChanged(int, Object[]), 0.0, 145, 
166, fireAttributesChanged(int, Object[]), 0.0, 145, 
167, indexOf(java.lang.String), 1.0, 145, 
169, getTableModel(), 0.0, 145, 
171, getRestriction(int), 1.0, 145, 
172, isRestricted(java.lang.String), 1.0, 145, 
175, getValues(int), 1.0, 145, 
176, isRestricted(), 0.0, 145, 
177, setRestricted(boolean), 1.0, 145, 
178, getFontSize(), 0.0, 145, 
179, setFontSize(int), 1.0, 145, 
180, save(boolean, java.io.Writer, freemind.main.XMLElement, int, freemind.modes.attributes.AttributeRegistryElement, freemind.main.XMLElement), 1.0, 145, 
181, resetChanges(int, freemind.modes.attributes.AttributeRegistryElement), 0.0, 145, 
182, applyChanges(int, freemind.modes.attributes.AttributeRegistryElement), 0.0, 145, 
184, getElements(), 0.0, 145, 
185, decrementVisibleElementsNumber(), 0.0, 145, 
186, incrementVisibleElementsNumber(), 0.0, 145, 
187, registry(java.lang.String, freemind.modes.attributes.Attribute, java.lang.String, freemind.modes.attributes.AttributeRegistryElement, freemind.modes.attributes.AttributeRegistryElement, int, java.util.NoSuchElementException), 1.0, 145, 
188, registry(java.lang.String, int, freemind.modes.attributes.AttributeRegistryElement), 1.0, 145, 
189, setAttributeLayoutChanged(), 0.0, 145, 
190, unregistry(java.lang.String, int), 1.0, 145, 
191, getAttributeViewType(), 0.0, 145, 
192, setAttributeViewType(java.lang.String), 1.0, 145, 
194, AttributeTableLayoutModel(), 0.0, 193, 
195, getColumnWidth(int), 1.0, 193, 
197, setListenerList(javax.swing.event.EventListenerList), 1.0, 193, 
198, getListenerList(), 0.0, 193, 
199, addColumnWidthChangeListener(freemind.modes.attributes.ColumnWidthChangeListener), 1.0, 193, 
200, removeColumnWidthChangeListener(freemind.modes.attributes.ColumnWidthChangeListener), 1.0, 193, 
201, fireColumnWidthChanged(int, Object[], int), 1.0, 193, 
213, performRemoveAttribute(java.lang.String), 1.0, 202, 
214, performRegistryAttribute(java.lang.String), 1.0, 202, 
216, performRegistrySubtreeAttributes(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 202, 
218, Attribute(java.lang.String), 1.0, 217, 
220, Attribute(freemind.modes.attributes.Attribute), 1.0, 217, 
221, getName(), 0.0, 217, 
222, setName(java.lang.String), 1.0, 217, 
223, getValue(), 0.0, 217, 
224, setValue(java.lang.String), 1.0, 217, 
225, toString(), 0.0, 217, 
227, AttributeRegistryComboBoxColumnModel(freemind.modes.attributes.AttributeRegistry), 1.0, 226, 
228, setSelectedItem(java.lang.Object), 1.0, 226, 
229, getSelectedItem(), 0.0, 226, 
230, getSize(), 0.0, 226, 
231, getElementAt(int), 1.0, 226, 
232, tableChanged(javax.swing.event.TableModelEvent), 1.0, 226, 
233, clear(), 0.0, 226, 
234, contains(java.lang.Object), 1.0, 226, 
235, add(java.lang.Object, java.lang.String), 1.0, 226, 
237, remove(java.lang.Object), 1.0, 226, 
238, getIndexOf(java.lang.Object), 1.0, 226, 
240, AttributeRegistryTableModel(freemind.modes.attributes.AttributeRegistry), 1.0, 239, 
241, getRowCount(), 0.0, 239, 
242, getColumnCount(), 0.0, 239, 
245, getColumnClass(int), 1.0, 239, 
247, getColumnName(int), 1.0, 239, 
248, fireTableRowsDeleted(), 0.0, 239, 
253, fireVisibilityUpdated(int), 1.0, 239, 
254, fireRestrictionsUpdated(int), 1.0, 239, 
257, getDestinationLabel(), 0.0, 256, 
258, getReferenceText(), 0.0, 256, 
259, getTarget(), 0.0, 256, 
260, getSource(), 0.0, 256, 
261, getUniqueID(), 0.0, 256, 
263, MindIcon(java.lang.String), 1.0, 262, 
265, toString(), 0.0, 262, 
266, getName(), 0.0, 262, 
267, setName(java.lang.String), 1.0, 262, 
268, getDescription(java.lang.String), 0.0, 262, 
269, getIconFileName(), 0.0, 262, 
270, getIconBaseFileName(), 0.0, 262, 
271, getIconsPath(), 0.0, 262, 
272, getIcon(java.net.URL, java.io.File, javax.swing.ImageIcon, java.lang.Exception), 0.0, 262, 
273, setIcon(javax.swing.ImageIcon), 1.0, 262, 
274, getAllIconNames(java.lang.String, java.util.StringTokenizer, java.util.Vector), 0.0, 262, 
275, factory(java.lang.String, freemind.modes.MindIcon), 1.0, 262, 
277, compareTo(java.lang.Object, int, int, freemind.modes.MindIcon), 1.0, 262, 
278, getNumber(), 0.0, 262, 
279, getRendererComponent(), 0.0, 262, 
280, getKeystrokeResourceName(), 0.0, 262, 
281, getKeyStroke(), 0.0, 262, 
283, nodeViewCreated(freemind.modes.NodeViewEvent), 1.0, 282, 
284, nodeViewRemoved(freemind.modes.NodeViewEvent), 1.0, 282, 
287, getModeController(), 0.0, 285, 
288, save(java.io.File), 1.0, 285, 
289, load(java.net.URL), 1.0, 285, 
290, load(java.io.File, java.net.URISyntaxException), 1.0, 285, 
291, tryToLock(java.io.File), 1.0, 285, 
292, destroy(), 0.0, 285, 
293, removeNodes(freemind.modes.MindMapNode, java.util.Iterator, freemind.extensions.PermanentNodeHook, freemind.modes.MindMapNode), 1.0, 285, 
294, getFrame(), 0.0, 285, 
295, isSaved(), 0.0, 285, 
296, isReadOnly(), 0.0, 285, 
297, setSaved(boolean, boolean), 1.0, 285, 
298, getNumberOfChangesSinceLastSave(), 0.0, 285, 
299, getRootNode(), 0.0, 285, 
300, setRoot(freemind.modes.MindMapNode), 1.0, 285, 
301, getFile(), 0.0, 285, 
302, getURL(), 0.0, 285, 
303, setFile(java.io.File), 1.0, 285, 
304, getText(java.lang.String), 1.0, 285, 
305, getAsPlainText(java.util.List), 1.0, 285, 
306, getAsRTF(java.util.List), 1.0, 285, 
307, getAsHTML(java.util.List), 1.0, 285, 
308, getRestoreable(), 0.0, 285, 
309, getLinkRegistry(), 0.0, 285, 
310, nodeChanged(javax.swing.tree.TreeNode), 1.0, 285, 
311, nodeRefresh(javax.swing.tree.TreeNode), 1.0, 285, 
312, nodeChangedInternal(javax.swing.tree.TreeNode), 1.0, 285, 
321, getRegistry(), 0.0, 285, 
322, getFilter(), 0.0, 285, 
323, setFilter(freemind.controller.filter.Filter), 1.0, 285, 
325, NodeViewEvent(freemind.modes.MindMapNode), 1.0, 324, 
327, XMLElementAdapter(freemind.modes.ModeController), 1.0, 326, 
329, createAnotherElement(), 0.0, 326, 
334, createEncryptedNode(java.lang.String), 1.0, 326, 
335, getFrame(), 0.0, 326, 
336, getUserObject(), 0.0, 326, 
337, setUserObject(java.lang.Object), 1.0, 326, 
338, getMapChild(), 0.0, 326, 
339, setName(java.lang.String), 1.0, 326, 
340, addChild(java.lang.String, freemind.main.XMLElement, freemind.modes.attributes.AttributeTableLayoutModel, freemind.modes.NodeAdapter, java.lang.String, freemind.modes.attributes.Attribute, freemind.modes.CloudAdapter, java.lang.Object, freemind.modes.attributes.AttributeRegistry, freemind.main.XMLElement, freemind.extensions.PermanentNodeHook, freemind.modes.EdgeAdapter, freemind.modes.ArrowLinkAdapter, java.lang.Exception), 1.0, 326, 
343, copyAttributesToNode(freemind.modes.NodeAdapter, java.util.Iterator, java.lang.String), 1.0, 326, 
344, completeElement(), 0.0, 326, 
345, processUnfinishedLinks(java.lang.String, freemind.modes.NodeAdapter, freemind.modes.MindMapLinkRegistry, java.util.Iterator, int, java.lang.String, java.lang.String, freemind.modes.ArrowLinkAdapter), 1.0, 326, 
347, getMap(), 0.0, 326, 
348, getIDToTarget(), 0.0, 326, 
349, setIDToTarget(java.util.HashMap), 1.0, 326, 
351, HistoryInformation(long), 0.0, 350, 
353, getCreatedAt(), 0.0, 350, 
354, getLastModifiedAt(), 0.0, 350, 
355, setCreatedAt(java.util.Date), 1.0, 350, 
356, setLastModifiedAt(java.util.Date), 1.0, 350, 
358, ModesCreator(freemind.controller.Controller), 1.0, 357, 
359, getAllModes(java.lang.String, java.lang.String, java.lang.String, java.util.StringTokenizer), 0.0, 357, 
360, getMode(freemind.modes.Mode, java.lang.String, java.lang.String, java.lang.Exception), 1.0, 357, 
363, addIcon(freemind.modes.MindIcon), 1.0, 361, 
364, getIcons(), 0.0, 361, 
365, getAttributes(), 0.0, 361, 
367, registryAttributes(freemind.modes.MindMapNode, int, freemind.modes.attributes.NodeAttributeTableModel), 1.0, 361, 
368, registryNodeIcons(freemind.modes.MindMapNode, java.util.Iterator, java.util.List, freemind.modes.MindIcon), 1.0, 361, 
369, getMap(), 0.0, 361, 
370, getModeController(), 0.0, 361, 
371, save(java.io.Writer), 1.0, 361, 
373, getStartInclination(), 0.0, 372, 
374, getEndInclination(), 0.0, 372, 
375, setStartInclination(java.awt.Point), 1.0, 372, 
376, setEndInclination(java.awt.Point), 1.0, 372, 
377, getStartArrow(), 0.0, 372, 
378, getEndArrow(), 0.0, 372, 
380, showControlPoints(boolean), 1.0, 372, 
381, getShowControlPointsFlag(), 0.0, 372, 
382, save(), 0.0, 372, 
384, registerLinkTarget(freemind.modes.MindMapNode), 1.0, 383, 
386, deregisterLinkTarget(freemind.modes.MindMapNode), 1.0, 383, 
387, getLabel(freemind.modes.MindMapNode), 1.0, 383, 
388, getTargetForID(java.lang.String), 1.0, 383, 
389, generateUniqueID(java.lang.String), 1.0, 383, 
390, registerLink(freemind.modes.MindMapLink), 1.0, 383, 
391, deregisterLink(freemind.modes.MindMapLink), 1.0, 383, 
392, getLinkForID(java.lang.String), 1.0, 383, 
393, generateUniqueLinkID(java.lang.String), 1.0, 383, 
394, cutNode(freemind.modes.MindMapNode), 1.0, 383, 
395, clearCuttedNodeBuffer(), 0.0, 383, 
396, getCuttedLinks(java.lang.String), 1.0, 383, 
397, getAllLinks(freemind.modes.MindMapNode), 1.0, 383, 
398, getAllLinksIntoMe(freemind.modes.MindMapNode), 1.0, 383, 
399, getAllLinksFromMe(freemind.modes.MindMapNode), 1.0, 383, 
400, registerLocalHyperlinkId(java.lang.String), 1.0, 383, 
401, isTargetOfLocalHyperlinks(java.lang.String), 1.0, 383, 
405, setMap(freemind.modes.MindMap), 1.0, 402, 
406, getText(java.lang.String), 0.0, 402, 
407, setText(java.lang.String), 1.0, 402, 
408, getXmlText(), 0.0, 402, 
409, setXmlText(java.lang.String), 1.0, 402, 
410, makeValidXml(java.lang.String), 1.0, 402, 
411, getXmlNoteText(), 0.0, 402, 
412, getNoteText(), 0.0, 402, 
413, setXmlNoteText(java.lang.String), 1.0, 402, 
414, setNoteText(java.lang.String), 1.0, 402, 
415, getPlainTextContent(), 0.0, 402, 
416, getLink(), 0.0, 402, 
417, getShortText(java.lang.String, freemind.modes.ModeController), 1.0, 402, 
418, setLink(java.lang.String), 1.0, 402, 
419, getFilterInfo(), 0.0, 402, 
420, getFrame(), 0.0, 402, 
421, getViewers(), 0.0, 402, 
422, addViewer(freemind.view.mindmapview.NodeView), 1.0, 402, 
423, removeViewer(freemind.view.mindmapview.NodeView), 1.0, 402, 
424, getPath(javax.swing.tree.TreePath, java.util.Vector), 0.0, 402, 
425, getEdge(), 0.0, 402, 
426, setEdge(freemind.modes.MindMapEdge), 1.0, 402, 
427, getCloud(), 0.0, 402, 
428, setCloud(freemind.modes.MindMapCloud), 1.0, 402, 
429, changeChildCloudIterativeLevels(int, java.util.ListIterator, freemind.modes.NodeAdapter, freemind.modes.MindMapCloud), 1.0, 402, 
430, getStyle(java.lang.String, java.lang.String), 0.0, 402, 
431, hasStyle(), 0.0, 402, 
432, getColor(), 0.0, 402, 
433, setStyle(java.lang.String), 1.0, 402, 
434, setColor(java.awt.Color), 1.0, 402, 
435, getBackgroundColor(), 0.0, 402, 
436, setBackgroundColor(java.awt.Color), 1.0, 402, 
437, establishOwnFont(), 0.0, 402, 
438, setBold(boolean), 1.0, 402, 
439, toggleBold(), 0.0, 402, 
440, setItalic(boolean), 1.0, 402, 
441, toggleItalic(), 0.0, 402, 
442, setUnderlined(boolean), 1.0, 402, 
443, setFont(java.awt.Font), 1.0, 402, 
444, getParentNode(), 0.0, 402, 
445, setFontSize(int), 1.0, 402, 
446, getFont(), 0.0, 402, 
447, getFontSize(), 0.0, 402, 
448, getFontFamilyName(), 0.0, 402, 
449, isBold(), 0.0, 402, 
450, isItalic(), 0.0, 402, 
451, isUnderlined(), 0.0, 402, 
452, isFolded(), 0.0, 402, 
453, getIcons(), 0.0, 402, 
454, getMap(), 0.0, 402, 
456, removeIcon(int, int), 1.0, 402, 
457, hasFoldedStrictDescendant(java.util.ListIterator, freemind.modes.NodeAdapter), 0.0, 402, 
458, setFolded(boolean), 1.0, 402, 
459, shallowCopy(java.lang.String, freemind.modes.MindMapNode, java.util.HashMap, java.io.StringWriter, java.lang.Exception), 0.0, 402, 
460, toString(), 0.0, 402, 
461, isDescendantOf(freemind.modes.MindMapNode), 1.0, 402, 
462, isRoot(), 0.0, 402, 
463, hasChildren(), 0.0, 402, 
464, getChildPosition(freemind.modes.MindMapNode, int, java.util.ListIterator), 1.0, 402, 
465, childrenUnfolded(), 0.0, 402, 
466, childrenFolded(), 0.0, 402, 
467, getChildren(), 0.0, 402, 
468, children(), 0.0, 402, 
469, getAllowsChildren(), 0.0, 402, 
470, getChildAt(int), 1.0, 402, 
471, getChildCount(), 0.0, 402, 
472, getIndex(javax.swing.tree.TreeNode), 1.0, 402, 
473, getParent(), 0.0, 402, 
474, isLeaf(), 0.0, 402, 
475, isLeft(), 0.0, 402, 
476, setLeft(freemind.modes.NodeAdapter, boolean, int), 1.0, 402, 
477, isNewChildLeft(int, int), 0.0, 402, 
479, remove(int, javax.swing.tree.MutableTreeNode), 1.0, 402, 
480, remove(javax.swing.tree.MutableTreeNode, int), 1.0, 402, 
483, removeFromParent(), 0.0, 402, 
484, setParent(javax.swing.tree.MutableTreeNode), 1.0, 402, 
485, setParent(freemind.modes.MindMapNode), 1.0, 402, 
486, setUserObject(java.lang.Object), 1.0, 402, 
487, addToPathVector(java.util.Vector), 1.0, 402, 
488, getNodeLevel(freemind.modes.MindMapNode, int), 0.0, 402, 
489, addHook(freemind.extensions.PermanentNodeHook), 1.0, 402, 
490, invokeHook(freemind.extensions.NodeHook, java.lang.Exception), 1.0, 402, 
491, createActivatedHooks(), 0.0, 402, 
492, createToolTip(), 0.0, 402, 
493, createHooks(), 0.0, 402, 
494, createStateIcons(), 0.0, 402, 
495, createIcons(), 0.0, 402, 
496, getHooks(), 0.0, 402, 
497, getActivatedHooks(), 0.0, 402, 
498, removeHook(freemind.extensions.PermanentNodeHook), 1.0, 402, 
499, getToolTip(), 0.0, 402, 
501, getObjectId(freemind.modes.ModeController), 1.0, 402, 
503, getModeController(), 0.0, 402, 
505, getShiftY(), 0.0, 402, 
506, hasOneVisibleChild(int, java.util.ListIterator), 0.0, 402, 
507, calcShiftY(java.lang.NullPointerException), 0.0, 402, 
508, setShiftY(int), 1.0, 402, 
509, setAdditionalInfo(java.lang.String), 1.0, 402, 
510, getAdditionalInfo(), 0.0, 402, 
512, getStateIcons(), 0.0, 402, 
513, getHistoryInformation(), 0.0, 402, 
514, setHistoryInformation(freemind.modes.HistoryInformation), 1.0, 402, 
515, getHGap(), 0.0, 402, 
516, setHGap(int), 1.0, 402, 
517, getVGap(), 0.0, 402, 
518, setVGap(int), 1.0, 402, 
519, isVisible(freemind.controller.filter.Filter), 0.0, 402, 
520, getAttributes(), 0.0, 402, 
521, createAttributeTableModel(java.util.Iterator, freemind.view.mindmapview.NodeView), 0.0, 402, 
522, getAttributeTableLength(), 0.0, 402, 
523, getAttribute(int), 1.0, 402, 
524, getAttributeKeyList(java.util.Vector, java.util.Iterator, freemind.modes.attributes.Attribute), 0.0, 402, 
525, getAttributePosition(java.lang.String, int, freemind.modes.attributes.Attribute, java.util.Iterator), 1.0, 402, 
526, getAttribute(java.lang.String, int), 1.0, 402, 
528, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 402, 
529, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 402, 
530, getListeners(), 0.0, 402, 
531, acceptViewVisitor(freemind.view.mindmapview.NodeViewVisitor, java.util.Iterator), 1.0, 402, 
536, ControllerAdapter(freemind.modes.Mode), 1.0, 535, 
537, setModel(freemind.modes.MapAdapter), 1.0, 535, 
539, createXMLElement(), 0.0, 535, 
540, newModel(freemind.modes.ModeController), 1.0, 535, 
541, getFileFilter(), 0.0, 535, 
542, nodeChanged(freemind.modes.MindMapNode), 1.0, 535, 
543, nodeRefresh(freemind.modes.MindMapNode), 1.0, 535, 
545, refreshMap(freemind.modes.MindMapNode), 0.0, 535, 
546, refreshMapFrom(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 535, 
547, nodeStructureChanged(freemind.modes.MindMapNode), 1.0, 535, 
548, updateNode(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.ModeController.NodeSelectionListener), 1.0, 535, 
549, onSelectHook(freemind.view.mindmapview.NodeView, java.util.Iterator, java.util.Iterator, freemind.extensions.PermanentNodeHook, freemind.modes.ModeController.NodeSelectionListener), 1.0, 535, 
550, onDeselectHook(freemind.view.mindmapview.NodeView, java.util.Iterator, java.util.Iterator, freemind.extensions.PermanentNodeHook, java.util.HashSet, freemind.modes.ModeController.NodeSelectionListener, java.lang.RuntimeException), 1.0, 535, 
551, onViewCreatedHook(freemind.view.mindmapview.NodeView, java.util.Iterator, freemind.extensions.PermanentNodeHook), 1.0, 535, 
552, onViewRemovedHook(freemind.view.mindmapview.NodeView, java.util.Iterator, freemind.extensions.PermanentNodeHook), 1.0, 535, 
553, registerNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 535, 
554, deregisterNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 535, 
555, registerNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 535, 
556, deregisterNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 535, 
557, getNodeLifetimeListeners(), 0.0, 535, 
558, fireNodePreDeleteEvent(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.ModeController.NodeLifetimeListener), 1.0, 535, 
560, fireRecursiveNodeCreateEvent(freemind.modes.MindMapNode, java.util.Iterator, java.util.Iterator, freemind.modes.NodeAdapter, freemind.modes.ModeController.NodeLifetimeListener), 1.0, 535, 
561, firePreSaveEvent(freemind.modes.MindMapNode, java.util.Iterator, java.util.HashSet, freemind.modes.ModeController.NodeSelectionListener), 1.0, 535, 
562, getText(java.lang.String), 1.0, 535, 
563, newMap(freemind.modes.MapAdapter, freemind.modes.ModeController), 0.0, 535, 
564, newMap(freemind.modes.MindMap), 1.0, 535, 
565, load(java.net.URL, freemind.modes.MapAdapter, freemind.modes.ModeController), 1.0, 535, 
566, load(java.io.File, freemind.modes.ModeController, freemind.modes.MapAdapter), 1.0, 535, 
567, save(), 0.0, 535, 
568, loadURL(java.net.URL, java.lang.String, freemind.controller.MapModuleManager, java.lang.String, java.net.URL, java.lang.String, java.lang.String, java.lang.String, freemind.modes.ModeController, java.net.MalformedURLException, java.lang.Exception), 1.0, 535, 
571, getSelecteds(java.util.LinkedList, java.util.ListIterator, freemind.view.mindmapview.NodeView), 0.0, 535, 
572, select(freemind.view.mindmapview.NodeView), 1.0, 535, 
573, getSelectedsByDepth(java.util.List), 0.0, 535, 
574, sortNodesByDepth(java.util.List), 1.0, 535, 
575, save(java.io.File), 1.0, 535, 
581, open(File[], javax.swing.JFileChooser, int, int, java.io.File, java.lang.Exception), 0.0, 535, 
582, getFileChooser(java.io.File, javax.swing.filechooser.FileFilter, javax.swing.JFileChooser), 1.0, 535, 
583, getFileChooser(), 0.0, 535, 
584, getMapsParentFile(), 0.0, 535, 
585, handleLoadingException(java.lang.Exception, java.lang.String, int), 1.0, 535, 
586, saveAs(boolean, java.io.File, int, java.lang.String, java.lang.String, int, javax.swing.JFileChooser, java.lang.Exception), 0.0, 535, 
587, getFileNameProposal(), 0.0, 535, 
589, setVisible(boolean, freemind.view.mindmapview.NodeView), 1.0, 535, 
590, setAllActions(boolean), 1.0, 535, 
591, showPopupMenu(java.awt.event.MouseEvent, javax.swing.JPopupMenu), 1.0, 535, 
592, getPopupForModel(java.lang.Object), 1.0, 535, 
593, getLeftToolBar(), 0.0, 535, 
594, getModeToolBar(), 0.0, 535, 
595, isBlocked(), 0.0, 535, 
596, setBlocked(boolean), 1.0, 535, 
597, getMode(), 0.0, 535, 
598, setMode(freemind.modes.Mode), 1.0, 535, 
599, getMap(), 0.0, 535, 
600, getRootNode(), 0.0, 535, 
601, getResource(java.lang.String), 1.0, 535, 
602, getController(), 0.0, 535, 
603, getFrame(), 0.0, 535, 
604, getModeController(), 0.0, 535, 
605, getModel(), 0.0, 535, 
606, getView(), 0.0, 535, 
607, updateMapModuleName(), 0.0, 535, 
608, getNodeFromID(java.lang.String, freemind.modes.NodeAdapter), 1.0, 535, 
609, getNodeID(freemind.modes.MindMapNode), 1.0, 535, 
610, getSelected(freemind.view.mindmapview.NodeView), 0.0, 535, 
611, getSelectedView(), 0.0, 535, 
613, copy(), 0.0, 535, 
614, copySingle(java.util.ArrayList), 0.0, 535, 
617, getSelectionColor(), 0.0, 535, 
618, updatePopupMenu(freemind.controller.StructuredMenuHolder), 1.0, 535, 
619, shutdownController(), 0.0, 535, 
620, startupController(freemind.modes.ControllerAdapter.FileOpener, java.awt.dnd.DropTarget), 0.0, 535, 
622, getLinkShortText(freemind.modes.MindMapNode, java.lang.String, freemind.modes.MindMapNode, java.lang.Exception), 1.0, 535, 
623, displayNode(freemind.modes.MindMapNode), 1.0, 535, 
625, centerNode(freemind.view.mindmapview.NodeView), 1.0, 535, 
626, centerNode(freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode), 1.0, 535, 
627, getLastCurrentDir(), 0.0, 535, 
628, setLastCurrentDir(java.io.File), 1.0, 535, 
629, getAttributeController(), 0.0, 535, 
630, getNodeView(freemind.modes.MindMapNode), 1.0, 535, 
633, loadURL(java.lang.String), 0.0, 535, 
634, getRegisteredMouseWheelEventHandler(), 0.0, 535, 
636, nodesDepthComparator(), 0.0, 635, 
639, popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent), 1.0, 638, 
640, popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent), 1.0, 638, 
641, popupMenuCanceled(javax.swing.event.PopupMenuEvent), 1.0, 638, 
644, OpenAction(freemind.modes.ControllerAdapter), 1.0, 643, 
645, actionPerformed(java.awt.event.ActionEvent), 1.0, 643, 
647, SaveAction(freemind.modes.ControllerAdapter), 1.0, 646, 
648, actionPerformed(boolean, java.awt.event.ActionEvent, java.lang.String), 1.0, 646, 
650, SaveAsAction(freemind.modes.ControllerAdapter), 1.0, 649, 
651, actionPerformed(java.awt.event.ActionEvent), 1.0, 649, 
653, EditAttributesAction(), 0.0, 652, 
654, actionPerformed(boolean, java.awt.event.ActionEvent, java.awt.Component, freemind.view.mindmapview.attributeview.AttributeView), 1.0, 652, 
656, isDragAcceptable(DataFlavor[], java.awt.dnd.DropTargetDragEvent, int), 1.0, 655, 
657, isDropAcceptable(DataFlavor[], java.awt.dnd.DropTargetDropEvent, int), 1.0, 655, 
658, drop(java.awt.dnd.DropTargetDropEvent, java.io.File, java.lang.Object, java.util.Iterator, java.lang.Exception), 1.0, 655, 
659, dragEnter(java.awt.dnd.DropTargetDragEvent), 1.0, 655, 
660, dragOver(java.awt.dnd.DropTargetDragEvent), 1.0, 655, 
661, dragExit(java.awt.dnd.DropTargetEvent), 1.0, 655, 
662, dragScroll(java.awt.dnd.DropTargetDragEvent), 1.0, 655, 
663, dropActionChanged(java.awt.dnd.DropTargetDragEvent), 1.0, 655, 
667, calcIterativeLevel(freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.MindMapCloud), 1.0, 665, 
668, setTarget(freemind.modes.MindMapNode), 1.0, 665, 
669, getExteriorColor(), 0.0, 665, 
670, getIterativeLevel(), 0.0, 665, 
671, changeIterativeLevel(int), 1.0, 665, 
672, save(freemind.main.XMLElement), 0.0, 665, 
673, getStandardColor(), 0.0, 665, 
674, setStandardColor(java.awt.Color), 1.0, 665, 
675, getStandardStyle(), 0.0, 665, 
676, setStandardStyle(java.lang.String), 1.0, 665, 
677, getStandardColorPropertyString(), 0.0, 665, 
678, getStandardStylePropertyString(), 0.0, 665, 
683, StylePattern(), 0.0, 682, 
685, StylePattern(freemind.modes.MindMapNode), 1.0, 682, 
686, toString(), 0.0, 682, 
687, getAppliesToEdge(), 0.0, 682, 
688, getAppliesToNode(), 0.0, 682, 
689, getAppliesToNodeFont(), 0.0, 682, 
690, getAppliesToNodeIcon(), 0.0, 682, 
691, getAppliesToChildren(), 0.0, 682, 
692, getName(), 0.0, 682, 
693, setName(java.lang.String), 1.0, 682, 
694, getRecursive(), 0.0, 682, 
695, setRecursive(boolean), 1.0, 682, 
696, getText(), 0.0, 682, 
697, setText(java.lang.String), 1.0, 682, 
698, getNodeColor(), 0.0, 682, 
699, setNodeColor(java.awt.Color), 1.0, 682, 
700, getNodeBackgroundColor(), 0.0, 682, 
701, setNodeBackgroundColor(java.awt.Color), 1.0, 682, 
702, getNodeStyle(), 0.0, 682, 
703, setNodeStyle(java.lang.String), 1.0, 682, 
704, getNodeFontFamily(), 0.0, 682, 
705, setNodeFontFamily(java.lang.String), 1.0, 682, 
706, getNodeFontSize(), 0.0, 682, 
707, setNodeFontSize(java.lang.Integer), 1.0, 682, 
708, getNodeIcon(), 0.0, 682, 
709, setNodeIcon(freemind.modes.MindIcon), 1.0, 682, 
710, getEdgeColor(), 0.0, 682, 
711, setEdgeColor(java.awt.Color), 1.0, 682, 
712, getEdgeStyle(), 0.0, 682, 
713, setEdgeStyle(java.lang.String), 1.0, 682, 
714, getEdgeWidth(), 0.0, 682, 
715, setEdgeWidth(java.lang.Integer), 1.0, 682, 
716, getChildrenStylePattern(), 0.0, 682, 
717, setChildrenStylePattern(freemind.modes.StylePattern), 1.0, 682, 
718, loadPatterns(java.io.File), 1.0, 682, 
719, loadPatterns(java.util.List, java.io.Reader, java.util.Enumeration, freemind.main.XMLElement), 1.0, 682, 
721, getNodeFontBold(), 0.0, 682, 
722, setNodeFontBold(java.lang.Boolean), 1.0, 682, 
723, getNodeFontItalic(), 0.0, 682, 
724, setNodeFontItalic(java.lang.Boolean), 1.0, 682, 
726, getText(), 0.0, 725, 
727, setText(java.lang.String), 1.0, 725, 
728, getXmlText(), 0.0, 725, 
729, setXmlText(java.lang.String), 1.0, 725, 
730, getXmlNoteText(), 0.0, 725, 
731, setXmlNoteText(java.lang.String), 1.0, 725, 
732, getNoteText(), 0.0, 725, 
733, setNoteText(java.lang.String), 1.0, 725, 
734, getObjectId(freemind.modes.ModeController), 1.0, 725, 
735, childrenFolded(), 0.0, 725, 
736, childrenUnfolded(), 0.0, 725, 
737, getChildren(), 0.0, 725, 
738, hasChildren(), 0.0, 725, 
739, getFilterInfo(), 0.0, 725, 
740, getChildPosition(freemind.modes.MindMapNode), 1.0, 725, 
741, getNodeLevel(), 0.0, 725, 
742, getLink(), 0.0, 725, 
743, getShortText(freemind.modes.ModeController), 1.0, 725, 
744, getEdge(), 0.0, 725, 
745, getColor(), 0.0, 725, 
746, getStyle(), 0.0, 725, 
747, setStyle(java.lang.String), 1.0, 725, 
748, hasStyle(), 0.0, 725, 
749, getParentNode(), 0.0, 725, 
750, isBold(), 0.0, 725, 
751, isItalic(), 0.0, 725, 
752, isUnderlined(), 0.0, 725, 
753, getFont(), 0.0, 725, 
754, getFontSize(), 0.0, 725, 
755, getFontFamilyName(), 0.0, 725, 
756, getViewers(), 0.0, 725, 
757, addViewer(freemind.view.mindmapview.NodeView), 1.0, 725, 
758, removeViewer(freemind.view.mindmapview.NodeView), 1.0, 725, 
759, toString(), 0.0, 725, 
760, getPlainTextContent(), 0.0, 725, 
761, getPath(), 0.0, 725, 
762, isDescendantOf(freemind.modes.MindMapNode), 1.0, 725, 
763, isRoot(), 0.0, 725, 
764, isFolded(), 0.0, 725, 
765, isLeft(), 0.0, 725, 
766, setLeft(boolean), 1.0, 725, 
767, setFolded(boolean), 1.0, 725, 
768, setFont(java.awt.Font), 1.0, 725, 
769, setShiftY(int), 1.0, 725, 
770, getShiftY(), 0.0, 725, 
771, calcShiftY(), 0.0, 725, 
772, setVGap(int), 1.0, 725, 
773, getVGap(), 0.0, 725, 
774, setHGap(int), 1.0, 725, 
775, getHGap(), 0.0, 725, 
776, setLink(java.lang.String), 1.0, 725, 
777, setFontSize(int), 1.0, 725, 
778, setColor(java.awt.Color), 1.0, 725, 
779, getIcons(), 0.0, 725, 
781, removeIcon(int), 1.0, 725, 
782, getCloud(), 0.0, 725, 
783, setCloud(freemind.modes.MindMapCloud), 1.0, 725, 
784, getBackgroundColor(), 0.0, 725, 
785, setBackgroundColor(java.awt.Color), 1.0, 725, 
786, getHooks(), 0.0, 725, 
787, getActivatedHooks(), 0.0, 725, 
788, addHook(freemind.extensions.PermanentNodeHook), 1.0, 725, 
789, invokeHook(freemind.extensions.NodeHook), 1.0, 725, 
790, removeHook(freemind.extensions.PermanentNodeHook), 1.0, 725, 
792, getToolTip(), 0.0, 725, 
793, setAdditionalInfo(java.lang.String), 1.0, 725, 
794, getAdditionalInfo(), 0.0, 725, 
795, shallowCopy(), 0.0, 725, 
797, getStateIcons(), 0.0, 725, 
799, getHistoryInformation(), 0.0, 725, 
800, setHistoryInformation(freemind.modes.HistoryInformation), 1.0, 725, 
801, isVisible(), 0.0, 725, 
802, hasOneVisibleChild(), 0.0, 725, 
803, getMap(), 0.0, 725, 
804, getAttributes(), 0.0, 725, 
805, createAttributeTableModel(), 0.0, 725, 
806, getAttributeKeyList(), 0.0, 725, 
807, getAttributeTableLength(), 0.0, 725, 
808, getAttribute(int), 1.0, 725, 
809, getAttribute(java.lang.String), 1.0, 725, 
810, getAttributePosition(java.lang.String), 1.0, 725, 
812, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 725, 
813, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 725, 
814, acceptViewVisitor(freemind.view.mindmapview.NodeViewVisitor), 1.0, 725, 
815, getListeners(), 0.0, 725, 
816, isNewChildLeft(), 0.0, 725, 
817, isWriteable(), 0.0, 725, 
819, loadPatterns(java.io.File), 1.0, 818, 
820, loadPatterns(java.io.Reader, freemind.controller.actions.generated.instance.Patterns), 1.0, 818, 
822, createPatternFromNode(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.PatternNodeFontItalic, freemind.controller.actions.generated.instance.PatternNodeFontSize, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.PatternNodeBackgroundColor, freemind.controller.actions.generated.instance.PatternIcon, freemind.controller.actions.generated.instance.PatternNodeFontBold), 1.0, 818, 
825, addSeparatorIfNecessary(java.lang.String), 1.0, 818, 
826, getPatternFromString(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Pattern), 1.0, 818, 
827, getPatternsFromString(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Patterns), 1.0, 818, 
832, init(freemind.controller.Controller), 1.0, 831, 
833, toString(), 0.0, 831, 
834, activate(), 0.0, 831, 
835, restore(java.lang.String), 1.0, 831, 
836, createModeController(), 0.0, 831, 
837, getDefaultModeController(), 0.0, 831, 
838, getController(), 0.0, 831, 
839, toLocalizedString(), 0.0, 831, 
842, updateStandards(java.lang.String, java.lang.String), 0.0, 840, 
843, getFrame(), 0.0, 840, 
844, getColor(), 0.0, 840, 
845, setColor(java.awt.Color), 1.0, 840, 
846, getWidth(), 0.0, 840, 
847, getRealWidth(), 0.0, 840, 
848, setWidth(int), 1.0, 840, 
849, getStyle(), 0.0, 840, 
850, setStyle(java.lang.String), 1.0, 840, 
851, toString(), 0.0, 840, 
852, setTarget(freemind.modes.MindMapNode), 1.0, 840, 
853, getTarget(), 0.0, 840, 
854, clone(freemind.modes.LineAdapter, java.lang.CloneNotSupportedException), 0.0, 840, 
855, setStandardColor(java.awt.Color), 1.0, 840, 
856, getStandardColor(), 0.0, 840, 
857, setStandardStyle(java.lang.String), 1.0, 840, 
858, getStandardStyle(), 0.0, 840, 
859, getStandardStylePropertyString(), 0.0, 840, 
860, getStandardColorPropertyString(), 0.0, 840, 
862, load(java.net.URL), 1.0, 861, 
863, load(java.io.File), 1.0, 861, 
864, loadURL(java.lang.String), 1.0, 861, 
865, save(java.io.File), 1.0, 861, 
866, newMap(), 0.0, 861, 
867, save(), 0.0, 861, 
868, saveAs(), 0.0, 861, 
869, open(), 0.0, 861, 
872, startupController(), 0.0, 861, 
873, shutdownController(), 0.0, 861, 
874, doubleClick(java.awt.event.MouseEvent), 1.0, 861, 
875, plainClick(java.awt.event.MouseEvent), 1.0, 861, 
876, setVisible(boolean), 1.0, 861, 
877, isBlocked(), 0.0, 861, 
878, getNodeFromID(java.lang.String), 1.0, 861, 
879, getNodeID(freemind.modes.MindMapNode), 1.0, 861, 
880, select(freemind.view.mindmapview.NodeView), 1.0, 861, 
881, getSelected(), 0.0, 861, 
882, getSelectedView(), 0.0, 861, 
883, getSelecteds(), 0.0, 861, 
884, getSelectedsByDepth(), 0.0, 861, 
885, sortNodesByDepth(java.util.List), 1.0, 861, 
886, extendSelection(java.awt.event.MouseEvent), 1.0, 861, 
887, nodeChanged(freemind.modes.MindMapNode), 1.0, 861, 
888, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 861, 
889, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 861, 
890, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 861, 
891, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 861, 
892, registerNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 861, 
893, deregisterNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 861, 
894, firePreSaveEvent(freemind.modes.MindMapNode), 1.0, 861, 
895, registerNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 861, 
896, deregisterNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 861, 
897, fireNodePreDeleteEvent(freemind.modes.MindMapNode), 1.0, 861, 
899, displayNode(freemind.modes.MindMapNode), 1.0, 861, 
900, centerNode(freemind.modes.MindMapNode), 1.0, 861, 
901, getLinkShortText(freemind.modes.MindMapNode), 1.0, 861, 
902, getModeToolBar(), 0.0, 861, 
903, getLeftToolBar(), 0.0, 861, 
904, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 861, 
905, updatePopupMenu(freemind.controller.StructuredMenuHolder), 1.0, 861, 
906, getPopupMenu(), 0.0, 861, 
907, showPopupMenu(java.awt.event.MouseEvent), 1.0, 861, 
908, getPopupForModel(java.lang.Object), 1.0, 861, 
909, getFrame(), 0.0, 861, 
910, getView(), 0.0, 861, 
911, getMap(), 0.0, 861, 
912, setModel(freemind.modes.MapAdapter), 1.0, 861, 
913, getMode(), 0.0, 861, 
914, getController(), 0.0, 861, 
915, getHookFactory(), 0.0, 861, 
916, getSelectionColor(), 0.0, 861, 
917, getText(java.lang.String), 1.0, 861, 
918, getResource(java.lang.String), 1.0, 861, 
919, getLastCurrentDir(), 0.0, 861, 
920, setLastCurrentDir(java.io.File), 1.0, 861, 
921, getAttributeController(), 0.0, 861, 
922, nodeRefresh(freemind.modes.MindMapNode), 1.0, 861, 
923, getNodeView(freemind.modes.MindMapNode), 1.0, 861, 
924, refreshMap(), 0.0, 861, 
926, copy(), 0.0, 861, 
927, copySingle(), 0.0, 861, 
929, getFileChooser(javax.swing.filechooser.FileFilter), 1.0, 861, 
931, save(), 0.0, 930, 
932, hasStyle(), 0.0, 930, 
934, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 933, 
935, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 933, 
936, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 933, 
937, onSaveNode(freemind.modes.MindMapNode), 1.0, 933, 
939, onCreateNodeHook(freemind.modes.MindMapNode), 1.0, 938, 
940, onPreDeleteNode(freemind.modes.MindMapNode), 1.0, 938, 
943, getColor(), 0.0, 942, 
944, getStyle(), 0.0, 942, 
945, getWidth(), 0.0, 942, 
946, getRealWidth(), 0.0, 942, 
947, toString(), 0.0, 942, 
948, setTarget(freemind.modes.MindMapNode), 1.0, 942, 
949, clone(), 0.0, 942, 
951, LinkRegistryAdapter(), 0.0, 950, 
952, generateUniqueID(java.lang.String), 1.0, 950, 
953, generateUniqueLinkID(java.lang.String), 1.0, 950, 
955, registerLinkTarget(freemind.modes.MindMapNode), 1.0, 950, 
957, _registerLinkTarget(freemind.modes.MindMapNode), 1.0, 950, 
959, getState(freemind.modes.MindMapNode), 1.0, 950, 
960, getTargetForID(java.lang.String, java.lang.Object), 1.0, 950, 
961, getAssignedLinksVector(java.util.Vector, freemind.modes.LinkRegistryAdapter.ID_Registered, java.lang.String), 1.0, 950, 
962, deregisterLinkTarget(freemind.modes.MindMapNode, java.util.Vector, int, freemind.modes.LinkRegistryAdapter.ID_BasicState), 1.0, 950, 
963, registerLink(java.lang.String, freemind.modes.MindMapLink, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.Vector, freemind.modes.LinkRegistryAdapter.ID_Registered, int), 1.0, 950, 
964, deregisterLink(freemind.modes.MindMapLink, freemind.modes.MindMapNode, freemind.modes.LinkRegistryAdapter.ID_Registered, int, freemind.modes.MindMapNode, java.util.Vector), 1.0, 950, 
965, getLinkForID(java.lang.String), 1.0, 950, 
966, getAllSources(freemind.modes.MindMapNode, int, java.util.Vector, java.util.Vector, freemind.modes.LinkRegistryAdapter.ID_BasicState), 1.0, 950, 
967, getAllLinks(freemind.modes.MindMapNode, java.util.Vector), 1.0, 950, 
968, getAllLinksIntoMe(freemind.modes.MindMapNode, java.util.Vector, java.util.Vector, freemind.modes.LinkRegistryAdapter.ID_BasicState), 1.0, 950, 
969, getAllLinksFromMe(freemind.modes.MindMapNode, java.util.Vector, freemind.modes.MindMapLink, java.util.Vector, java.util.Collection, int, java.util.Iterator), 1.0, 950, 
970, getLabel(freemind.modes.MindMapNode, freemind.modes.LinkRegistryAdapter.ID_BasicState), 1.0, 950, 
971, cutNode(java.util.Vector, freemind.modes.MindMapNode, freemind.modes.MindMapLink, java.util.Vector, java.lang.String, int, freemind.modes.LinkRegistryAdapter.ID_BasicState, freemind.modes.MindMapNode, java.util.ListIterator), 1.0, 950, 
972, clearCuttedNodeBuffer(), 0.0, 950, 
973, getCuttedLinks(java.util.Vector, java.lang.String), 1.0, 950, 
974, registerLocalHyperlinkId(java.lang.String), 1.0, 950, 
975, isTargetOfLocalHyperlinks(java.lang.String), 1.0, 950, 
977, getID(), 0.0, 976, 
978, toString(), 0.0, 976, 
981, getTarget(), 0.0, 980, 
984, NodeDownAction(freemind.modes.mindmapmode.MindMapController), 1.0, 983, 
985, actionPerformed(java.awt.event.ActionEvent), 1.0, 983, 
987, getID(), 0.0, 986, 
988, toString(), 0.0, 986, 
992, getTarget(), 0.0, 991, 
994, ID_UsedStateAdapter(), 0.0, 991, 
995, clone(freemind.modes.LinkRegistryAdapter.ID_UsedStateAdapter), 1.0, 991, 
999, getRootNode(), 0.0, 998, 
1000, getModeController(), 0.0, 998, 
1001, nodeChanged(javax.swing.tree.TreeNode), 1.0, 998, 
1002, nodeRefresh(javax.swing.tree.TreeNode), 1.0, 998, 
1003, getAsPlainText(java.util.List), 1.0, 998, 
1004, getAsRTF(java.util.List), 1.0, 998, 
1005, getAsHTML(java.util.List), 1.0, 998, 
1006, getFile(), 0.0, 998, 
1007, getURL(), 0.0, 998, 
1008, getXml(java.io.Writer), 1.0, 998, 
1009, getFilteredXml(java.io.Writer), 1.0, 998, 
1010, getRestoreable(), 0.0, 998, 
1011, getPathToRoot(javax.swing.tree.TreeNode), 1.0, 998, 
1012, getLinkRegistry(), 0.0, 998, 
1013, destroy(), 0.0, 998, 
1014, isReadOnly(), 0.0, 998, 
1015, isSaved(), 0.0, 998, 
1016, getRegistry(), 0.0, 998, 
1017, getFilter(), 0.0, 998, 
1018, setFilter(freemind.controller.filter.Filter), 1.0, 998, 
1019, nodeStructureChanged(javax.swing.tree.TreeNode), 1.0, 998, 
1020, setSaved(boolean), 1.0, 998, 
1023, getColor(), 0.0, 1021, 
1024, getRealColor(), 0.0, 1021, 
1025, getWidth(), 0.0, 1021, 
1026, getRealWidth(), 0.0, 1021, 
1027, setWidth(int), 1.0, 1021, 
1028, getStyle(), 0.0, 1021, 
1029, hasStyle(), 0.0, 1021, 
1030, getSource(), 0.0, 1021, 
1031, save(freemind.main.XMLElement), 0.0, 1021, 
1032, getStandardColor(), 0.0, 1021, 
1033, setStandardColor(java.awt.Color), 1.0, 1021, 
1034, getStandardStyle(), 0.0, 1021, 
1035, setStandardStyle(java.lang.String), 1.0, 1021, 
1036, getStandardColorPropertyString(), 0.0, 1021, 
1037, getStandardStylePropertyString(), 0.0, 1021, 
1043, getStartInclination(), 0.0, 1041, 
1044, getEndInclination(), 0.0, 1041, 
1045, getStartArrow(), 0.0, 1041, 
1046, getEndArrow(), 0.0, 1041, 
1047, setStartInclination(java.awt.Point), 1.0, 1041, 
1048, setEndInclination(java.awt.Point), 1.0, 1041, 
1049, setStartArrow(java.lang.String), 1.0, 1041, 
1050, setEndArrow(java.lang.String), 1.0, 1041, 
1051, clone(freemind.modes.ArrowLinkAdapter), 0.0, 1041, 
1052, showControlPoints(boolean), 1.0, 1041, 
1053, getShowControlPointsFlag(), 0.0, 1041, 
1054, save(freemind.main.XMLElement), 0.0, 1041, 
1056, getExteriorColor(), 0.0, 1055, 
1057, getIterativeLevel(), 0.0, 1055, 
1058, changeIterativeLevel(int), 1.0, 1055, 
1059, save(), 0.0, 1055, 
1062, getDestinationLabel(), 0.0, 1060, 
1063, getReferenceText(), 0.0, 1060, 
1064, getSource(), 0.0, 1060, 
1065, setSource(freemind.modes.MindMapNode), 1.0, 1060, 
1066, setDestinationLabel(java.lang.String), 1.0, 1060, 
1067, setReferenceText(java.lang.String), 1.0, 1060, 
1068, getUniqueID(), 0.0, 1060, 
1069, setUniqueID(java.lang.String), 1.0, 1060, 
1070, getStandardColor(), 0.0, 1060, 
1071, setStandardColor(java.awt.Color), 1.0, 1060, 
1072, getStandardStyle(), 0.0, 1060, 
1073, setStandardStyle(java.lang.String), 1.0, 1060, 
1074, getStandardColorPropertyString(), 0.0, 1060, 
1075, getStandardStylePropertyString(), 0.0, 1060, 
1080, getDescription(), 0.0, 1079, 
1081, getIcon(), 0.0, 1079, 
1082, getKeystrokeResourceName(), 0.0, 1079, 
1083, getKeyStroke(), 0.0, 1079, 
1088, updateIcon(), 0.0, 1085, 
1089, setFolded(java.lang.String, freemind.modes.ControllerAdapter, boolean, String[], freemind.modes.NodeAdapter, java.util.HashMap, java.lang.String, freemind.modes.common.dialogs.EnterPasswordDialog, freemind.main.Tools.SingleDesEncrypter, freemind.modes.MapAdapter, int, freemind.main.XMLParseException), 1.0, 1085, 
1090, setAdditionalInfo(java.lang.String), 1.0, 1085, 
1093, save(), 0.0, 1091, 
1095, BrowseController(freemind.modes.Mode), 1.0, 1094, 
1096, newModel(freemind.modes.ModeController), 1.0, 1094, 
1097, plainClick(freemind.view.mindmapview.MainView, java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 1094, 
1098, doubleClick(), 0.0, 1094, 
1100, getPopupMenu(), 0.0, 1094, 
1101, getPopupForModel(java.lang.Object, java.util.HashSet, javax.swing.JPopupMenu, freemind.modes.browsemode.BrowseArrowLinkModel, java.util.Vector, freemind.modes.browsemode.BrowseArrowLinkModel, int), 1.0, 1094, 
1102, getGotoLinkNodeAction(freemind.modes.MindMapNode), 1.0, 1094, 
1103, getModeToolBar(), 0.0, 1094, 
1104, getToolBar(), 0.0, 1094, 
1105, load(java.net.URL, freemind.modes.ModeController), 1.0, 1094, 
1106, load(java.io.File, freemind.modes.ModeController), 1.0, 1094, 
1107, newMap(freemind.modes.MindMap), 1.0, 1094, 
1108, setNoteIcon(freemind.modes.MindMapNode, java.util.ListIterator, java.lang.String), 1.0, 1094, 
1109, setAllActions(boolean), 1.0, 1094, 
1110, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 1094, 
1111, getHookFactory(), 0.0, 1094, 
1112, createXMLElement(), 0.0, 1094, 
1114, FollowLinkAction(), 0.0, 1113, 
1115, actionPerformed(java.awt.event.ActionEvent), 1.0, 1113, 
1118, save(), 0.0, 1116, 
1119, setColor(java.awt.Color), 1.0, 1116, 
1120, setStyle(java.lang.String), 1.0, 1116, 
1122, BrowseHookFactory(), 0.0, 1121, 
1123, getPossibleNodeHooks(), 0.0, 1121, 
1124, getPossibleModeControllerHooks(), 0.0, 1121, 
1125, createModeControllerHook(java.lang.String), 1.0, 1121, 
1126, createNodeHook(freemind.extensions.NodeHook, java.lang.String), 1.0, 1121, 
1127, getHookMenuPositions(java.lang.String), 1.0, 1121, 
1128, getInstanciationMethod(java.lang.String), 1.0, 1121, 
1129, getRegistrations(), 0.0, 1121, 
1130, getPluginBaseClass(java.lang.String), 1.0, 1121, 
1134, save(), 0.0, 1131, 
1135, isWriteable(), 0.0, 1131, 
1137, BrowseXMLElement(freemind.modes.ModeController), 1.0, 1136, 
1139, createAnotherElement(), 0.0, 1136, 
1144, createEncryptedNode(java.lang.String, freemind.modes.NodeAdapter), 1.0, 1136, 
1147, BrowsePopupMenu(freemind.modes.browsemode.BrowseController), 1.0, 1145, 
1149, BrowseMode(), 0.0, 1148, 
1150, init(freemind.controller.Controller), 1.0, 1148, 
1151, toString(), 0.0, 1148, 
1152, activate(), 0.0, 1148, 
1153, restore(java.lang.String, java.lang.Exception), 1.0, 1148, 
1154, getController(), 0.0, 1148, 
1155, getDefaultModeController(), 0.0, 1148, 
1156, createModeController(), 0.0, 1148, 
1159, clone(), 0.0, 1157, 
1160, save(), 0.0, 1157, 
1161, toString(), 0.0, 1157, 
1166, getLinkRegistry(), 0.0, 1163, 
1167, toString(), 0.0, 1163, 
1168, getFile(), 0.0, 1163, 
1169, setFile(), 0.0, 1163, 
1170, getURL(), 0.0, 1163, 
1171, setURL(java.net.URL), 1.0, 1163, 
1172, save(java.io.File), 1.0, 1163, 
1173, isSaved(), 0.0, 1163, 
1174, load(java.net.URL, freemind.modes.browsemode.BrowseNodeModel), 1.0, 1163, 
1175, loadTree(java.io.InputStreamReader, freemind.modes.browsemode.BrowseNodeModel, java.net.URL, java.util.HashMap, java.security.AccessControlException), 1.0, 1163, 
1176, setLinkInclinationChanged(), 0.0, 1163, 
1177, getXml(java.io.Writer), 1.0, 1163, 
1178, getFilteredXml(java.io.Writer), 1.0, 1163, 
1180, NodeNoteViewer(freemind.modes.ControllerAdapter), 1.0, 1179, 
1181, getNoteViewerComponent(java.lang.String), 1.0, 1179, 
1182, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 1179, 
1183, onSelectHook(freemind.view.mindmapview.NodeView, java.lang.String), 1.0, 1179, 
1184, onSaveNode(freemind.modes.MindMapNode), 1.0, 1179, 
1185, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 1179, 
1188, BrowseReminderHook(), 0.0, 1187, 
1189, nodeRefresh(freemind.modes.MindMapNode), 1.0, 1187, 
1192, BrowseToolBar(freemind.modes.ControllerAdapter), 1.0, 1191, 
1193, setURLField(java.lang.String), 1.0, 1191, 
1195, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.lang.Exception), 1.0, 1194, 
1199, AddLocalLinkAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1198, 
1200, actionPerformed(freemind.modes.MindMapNode, java.awt.event.ActionEvent, java.lang.String, java.util.List, freemind.modes.MindMapNode, int), 1.0, 1198, 
1202, CopySingleAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1201, 
1203, actionPerformed(java.awt.event.ActionEvent, java.awt.datatransfer.Transferable), 1.0, 1201, 
1205, PasteAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1204, 
1206, actionPerformed(java.awt.event.ActionEvent), 1.0, 1204, 
1207, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.PasteNodeAction), 1.0, 1204, 
1208, getDoActionClass(), 0.0, 1204, 
1212, addMindMapNodesFlavor(freemind.controller.actions.generated.instance.CutNodeAction, java.lang.String, freemind.controller.actions.generated.instance.TransferableContent, java.util.ListIterator, freemind.modes.NodeAdapter, java.util.List, java.io.IOException), 0.0, 1204, 
1214, getFlavorHandlers(DataFlavorHandler[]), 0.0, 1204, 
1220, getTransferableContent(java.lang.String, java.awt.datatransfer.Transferable, java.util.Iterator, java.util.List, freemind.controller.actions.generated.instance.TransferableContent, java.io.File, freemind.controller.actions.generated.instance.TransferableFile, java.io.IOException), 1.0, 1204, 
1221, getTransferable(java.util.Vector, freemind.controller.actions.generated.instance.TransferableContent, freemind.controller.actions.generated.instance.TransferableFile, java.awt.datatransfer.Transferable, java.util.Iterator), 1.0, 1204, 
1222, addUndoAction(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CutNodeAction), 1.0, 1204, 
1225, getNode(freemind.modes.MindMapNode), 0.0, 1223, 
1229, getDataFlavor(), 0.0, 1227, 
1232, getDataFlavor(), 0.0, 1230, 
1236, getDataFlavor(), 0.0, 1234, 
1240, getDataFlavor(), 0.0, 1238, 
1244, getDataFlavor(), 0.0, 1242, 
1247, getDataFlavor(), 0.0, 1245, 
1250, NewPreviousSiblingAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1249, 
1251, actionPerformed(java.awt.event.ActionEvent), 1.0, 1249, 
1253, nodeChanged(freemind.modes.MindMapNode), 1.0, 1252, 
1254, nodeRefresh(freemind.modes.MindMapNode), 1.0, 1252, 
1255, nodeStructureChanged(freemind.modes.MindMapNode), 1.0, 1252, 
1261, deleteNode(freemind.modes.MindMapNode), 1.0, 1252, 
1262, cut(), 0.0, 1252, 
1263, cut(java.util.List), 1.0, 1252, 
1266, toggleFolded(), 0.0, 1252, 
1271, blendNodeColor(freemind.modes.MindMapNode), 1.0, 1252, 
1275, removeLastIcon(freemind.modes.MindMapNode), 1.0, 1252, 
1276, removeAllIcons(freemind.modes.MindMapNode), 1.0, 1252, 
1286, removeReference(freemind.modes.MindMapLink), 1.0, 1252, 
1299, invokeHook(freemind.extensions.ModeControllerHook), 1.0, 1252, 
1301, getActionFactory(), 0.0, 1252, 
1302, marshall(freemind.controller.actions.generated.instance.XmlAction), 1.0, 1252, 
1303, unMarshall(java.lang.String), 1.0, 1252, 
1304, isUndoAction(), 0.0, 1252, 
1305, getRootNode(), 0.0, 1252, 
1308, load(java.lang.String), 1.0, 1252, 
1309, registerMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 1252, 
1310, deRegisterMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 1252, 
1315, clearNodeContents(freemind.modes.MindMapNode), 1.0, 1252, 
1317, ToggleFoldedAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1316, 
1318, actionPerformed(java.awt.event.ActionEvent), 1.0, 1316, 
1319, toggleFolded(), 0.0, 1316, 
1320, toggleFolded(freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.CompoundAction, java.util.ListIterator, boolean), 1.0, 1316, 
1323, act(freemind.controller.actions.generated.instance.XmlAction, boolean, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.FoldAction), 1.0, 1316, 
1324, getDoActionClass(), 0.0, 1316, 
1327, ItalicAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1326, 
1328, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.ItalicNodeAction, freemind.modes.NodeAdapter), 1.0, 1326, 
1329, getDoActionClass(), 0.0, 1326, 
1336, handleMouseWheelEvent(java.awt.event.MouseWheelEvent), 1.0, 1335, 
1338, SetLinkByTextFieldAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1337, 
1339, actionPerformed(java.lang.String, java.awt.event.ActionEvent), 1.0, 1337, 
1341, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.AddLinkXmlAction, freemind.modes.NodeAdapter), 1.0, 1337, 
1342, getDoActionClass(), 0.0, 1337, 
1346, ChangeArrowLinkEndPoints(freemind.modes.mindmapmode.MindMapController), 1.0, 1345, 
1349, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapArrowLink, freemind.controller.actions.generated.instance.ArrowLinkPointXmlAction), 1.0, 1345, 
1350, getDoActionClass(), 0.0, 1345, 
1351, actionPerformed(java.awt.event.ActionEvent), 1.0, 1345, 
1353, getLinkRegistry(), 0.0, 1345, 
1355, ExportBranchAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1354, 
1356, actionPerformed(javax.swing.JFileChooser, java.io.File, java.net.URL, freemind.modes.ModeController, freemind.modes.mindmapmode.MindMapNodeModel, java.awt.event.ActionEvent, java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel, int, java.lang.String, java.lang.String, int, freemind.modes.mindmapmode.MindMapMapModel, int, freemind.modes.MindMapNode, java.net.MalformedURLException), 1.0, 1354, 
1358, UndoAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1357, 
1360, isUndoAction(), 0.0, 1357, 
1361, xmlActionPerformed(java.awt.event.ActionEvent, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 1357, 
1362, informUndoPartner(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 1357, 
1363, undoDoAction(freemind.controller.actions.generated.instance.UndoXmlAction, freemind.controller.actions.generated.instance.UndoXmlAction, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.String, java.lang.String), 1.0, 1357, 
1364, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UndoXmlAction), 1.0, 1357, 
1365, getDoActionClass(), 0.0, 1357, 
1366, setEnabled(boolean), 1.0, 1357, 
1367, add(freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.mindmapmode.actions.xml.ActionPair, int, long, freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.NumberFormatException), 1.0, 1357, 
1368, startActionFrame(), 0.0, 1357, 
1369, clear(), 0.0, 1357, 
1370, print(int, java.util.Iterator, freemind.modes.mindmapmode.actions.xml.ActionPair), 0.0, 1357, 
1372, run(), 0.0, 1371, 
1376, actionPerformed(java.awt.event.ActionEvent), 1.0, 1374, 
1377, addLastIcon(java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 1374, 
1378, removeIcon(boolean, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1374, 
1379, toggleIcon(java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 1374, 
1380, removeAllIcons(java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 1374, 
1389, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, java.lang.String, int, freemind.controller.actions.generated.instance.AddIconAction, freemind.modes.MindIcon), 1.0, 1374, 
1390, getDoActionClass(), 0.0, 1374, 
1392, getMindIcon(), 0.0, 1374, 
1393, getKeyStroke(java.lang.String, java.lang.String), 0.0, 1374, 
1394, getDescription(), 0.0, 1374, 
1395, getIcon(), 0.0, 1374, 
1396, getKeystrokeResourceName(), 0.0, 1374, 
1398, CutAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1397, 
1399, actionPerformed(java.awt.event.ActionEvent, java.awt.datatransfer.Transferable, int), 1.0, 1397, 
1400, getCutNodeAction(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CutNodeAction), 1.0, 1397, 
1401, cut(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.CompoundAction, java.util.List, freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate, java.awt.datatransfer.Transferable, java.util.Iterator, freemind.controller.actions.generated.instance.CutNodeAction, freemind.controller.actions.generated.instance.XmlAction, java.awt.datatransfer.Transferable), 1.0, 1397, 
1402, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CutNodeAction, freemind.modes.MindMapNode), 1.0, 1397, 
1403, getDoActionClass(), 0.0, 1397, 
1405, UnderlinedAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1404, 
1406, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.UnderlinedNodeAction), 1.0, 1404, 
1407, getDoActionClass(), 0.0, 1404, 
1414, JoinNodesAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1413, 
1415, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMapNode, java.util.ArrayList), 1.0, 1413, 
1419, FontFamilyAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1418, 
1420, actionPerformed(java.lang.String), 1.0, 1418, 
1422, getDoActionClass(), 0.0, 1418, 
1426, act(java.lang.String, freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.FontNodeAction), 1.0, 1418, 
1428, EdgeColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1427, 
1429, actionPerformed(java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, java.util.ListIterator, java.awt.Color), 1.0, 1427, 
1431, act(freemind.controller.actions.generated.instance.XmlAction, java.awt.Color, java.awt.Color, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.EdgeColorFormatAction), 1.0, 1427, 
1433, getDoActionClass(), 0.0, 1427, 
1435, FontSizeAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1434, 
1436, actionPerformed(java.lang.String), 1.0, 1434, 
1438, getDoActionClass(), 0.0, 1434, 
1442, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.FontSizeNodeAction, freemind.modes.MindMapNode, int, java.lang.NumberFormatException), 1.0, 1434, 
1446, createRemoveAllIconsXmlAction(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.RemoveAllIconsXmlAction), 1.0, 1443, 
1447, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.RemoveAllIconsXmlAction), 1.0, 1443, 
1448, removeAllIcons(freemind.modes.MindMapNode), 1.0, 1443, 
1449, getDoActionClass(), 0.0, 1443, 
1450, getDescription(), 0.0, 1443, 
1451, getIcon(), 0.0, 1443, 
1452, getKeyStroke(), 0.0, 1443, 
1453, getKeystrokeResourceName(), 0.0, 1443, 
1455, SelectAllAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1454, 
1460, ModeControllerActionHandler(freemind.modes.mindmapmode.actions.xml.ActionFactory), 1.0, 1459, 
1461, executeAction(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 1459, 
1462, startTransaction(java.lang.String), 1.0, 1459, 
1463, endTransaction(java.lang.String), 1.0, 1459, 
1465, EditAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1464, 
1466, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMapNode), 1.0, 1464, 
1467, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.EditNodeAction, freemind.modes.NodeAdapter), 1.0, 1464, 
1468, getDoActionClass(), 0.0, 1464, 
1472, getMindMapController(), 0.0, 1464, 
1474, stopEditing(), 0.0, 1464, 
1476, cancel(), 0.0, 1475, 
1477, ok(java.lang.String), 1.0, 1475, 
1481, cancel(), 0.0, 1480, 
1482, ok(java.lang.String), 1.0, 1480, 
1486, cancel(), 0.0, 1485, 
1487, ok(java.lang.String), 1.0, 1485, 
1491, CloudColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1490, 
1492, actionPerformed(java.awt.Color, java.awt.event.ActionEvent, java.awt.Color, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1490, 
1495, act(java.awt.Color, freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, java.awt.Color, freemind.controller.actions.generated.instance.CloudColorXmlAction), 1.0, 1490, 
1496, getDoActionClass(), 0.0, 1490, 
1499, cancel(java.util.Vector), 0.0, 1498, 
1500, ok(java.lang.String), 1.0, 1498, 
1501, endEdit(), 0.0, 1498, 
1505, setRemoveAction(freemind.modes.mindmapmode.actions.RemoveArrowLinkAction), 1.0, 1504, 
1506, AddArrowLinkAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1504, 
1507, actionPerformed(java.awt.event.ActionEvent, int, java.util.List), 1.0, 1504, 
1508, act(freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.AddArrowLinkXmlAction, java.lang.String, freemind.modes.mindmapmode.MindMapArrowLinkModel), 1.0, 1504, 
1509, getDoActionClass(), 0.0, 1504, 
1513, getLinkRegistry(), 0.0, 1504, 
1515, ImportFolderStructureAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1514, 
1516, actionPerformed(java.awt.event.ActionEvent, javax.swing.JFileChooser, int, freemind.main.FreeMindMain, java.io.File, java.lang.Exception), 1.0, 1514, 
1517, getFrame(), 0.0, 1514, 
1521, getHookName(), 0.0, 1520, 
1523, SelectBranchAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1522, 
1524, actionPerformed(java.awt.event.ActionEvent), 1.0, 1522, 
1526, UsePlainTextAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1525, 
1532, actionPerformed(java.awt.event.ActionEvent), 1.0, 1530, 
1535, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.ArrowLinkArrowXmlAction, freemind.modes.MindMapLink), 1.0, 1530, 
1536, getDoActionClass(), 0.0, 1530, 
1539, getLinkRegistry(), 0.0, 1530, 
1541, NodeUpAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1540, 
1542, actionPerformed(java.awt.event.ActionEvent), 1.0, 1540, 
1546, getSortedSiblings(freemind.modes.MindMapNode, java.util.Vector, java.util.Iterator), 1.0, 1540, 
1547, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, java.util.Iterator, freemind.controller.actions.generated.instance.MoveNodesAction, java.util.Vector, freemind.controller.actions.generated.instance.NodeListMember), 1.0, 1540, 
1548, getDoActionClass(), 0.0, 1540, 
1554, BoldAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1553, 
1555, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.BoldNodeAction), 1.0, 1553, 
1556, getDoActionClass(), 0.0, 1553, 
1567, actionPerformed(java.awt.event.ActionEvent, freemind.extensions.ModeControllerHook, freemind.extensions.HookFactory), 1.0, 1565, 
1568, getHookName(), 0.0, 1565, 
1570, getController(), 0.0, 1569, 
1572, actionPerformed(java.awt.event.ActionEvent), 1.0, 1569, 
1578, getInstanciationMethod(java.lang.String, freemind.extensions.HookInstanciationMethod, freemind.extensions.HookFactory), 1.0, 1569, 
1579, getHookFactory(freemind.extensions.HookFactory), 0.0, 1569, 
1582, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.NodeListMember, freemind.modes.MindMapNode, java.util.Vector, freemind.controller.actions.generated.instance.HookNodeAction, java.util.Iterator), 1.0, 1569, 
1583, getDoActionClass(), 0.0, 1569, 
1584, getHookName(), 0.0, 1569, 
1587, ToggleChildrenFoldedAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1586, 
1588, actionPerformed(java.awt.event.ActionEvent, freemind.view.mindmapview.MapView, freemind.modes.MindMapNode), 1.0, 1586, 
1590, MoveNodeAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1589, 
1591, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.MoveNodeXmlAction), 1.0, 1589, 
1592, getDoActionClass(), 0.0, 1589, 
1600, getDoActionClass(), 0.0, 1597, 
1604, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.EdgeStyleFormatAction, freemind.modes.MindMapEdge, java.lang.String), 1.0, 1597, 
1606, RedoAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1605, 
1607, informUndoPartner(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 1605, 
1609, CopyAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1608, 
1610, actionPerformed(java.awt.event.ActionEvent, java.awt.datatransfer.Transferable), 1.0, 1608, 
1612, NodeBackgroundColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1611, 
1613, actionPerformed(java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, java.util.ListIterator, java.awt.Color), 1.0, 1611, 
1616, act(freemind.controller.actions.generated.instance.XmlAction, java.awt.Color, freemind.modes.MindMapNode, java.awt.Color, freemind.controller.actions.generated.instance.NodeBackgroundColorFormatAction), 1.0, 1611, 
1617, getDoActionClass(), 0.0, 1611, 
1619, RemoveNodeBackgroundColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1618, 
1624, NewChildAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1623, 
1625, actionPerformed(java.awt.event.ActionEvent), 1.0, 1623, 
1626, act(freemind.controller.actions.generated.instance.XmlAction, java.util.Iterator, java.lang.String, freemind.extensions.PermanentNodeHook, freemind.controller.actions.generated.instance.NewNodeAction, int, freemind.modes.NodeAdapter, freemind.modes.MindMapNode, java.lang.String), 1.0, 1623, 
1627, getDoActionClass(), 0.0, 1623, 
1634, setName(java.lang.String), 1.0, 1632, 
1637, addActor(freemind.modes.mindmapmode.actions.NodeActorXml), 1.0, 1632, 
1638, setSingleNodeOperation(freemind.modes.mindmapmode.actions.SingleNodeOperation), 1.0, 1632, 
1639, xmlActionPerformed(freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.CompoundAction, java.awt.event.ActionEvent, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 1632, 
1640, execute(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 1632, 
1641, act(freemind.controller.actions.generated.instance.XmlAction), 1.0, 1632, 
1642, getNodeFromID(java.lang.String), 1.0, 1632, 
1643, getNodeID(freemind.modes.MindMapNode), 1.0, 1632, 
1647, getDoActionClass(), 0.0, 1644, 
1651, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.NodeStyleFormatAction, java.lang.String), 1.0, 1644, 
1656, getDoActionClass(), 0.0, 1653, 
1660, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.EdgeWidthFormatAction, int, freemind.modes.EdgeAdapter, freemind.modes.MindMapNode), 1.0, 1653, 
1665, NodeColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1664, 
1666, actionPerformed(java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, java.awt.Color, java.util.ListIterator), 1.0, 1664, 
1669, act(freemind.controller.actions.generated.instance.XmlAction, java.awt.Color, freemind.modes.MindMapNode, java.awt.Color, freemind.controller.actions.generated.instance.NodeColorFormatAction), 1.0, 1664, 
1670, getDoActionClass(), 0.0, 1664, 
1672, RemoveIconAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1671, 
1674, getDoActionClass(), 0.0, 1671, 
1676, removeLastIcon(freemind.modes.MindMapNode), 1.0, 1671, 
1677, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RemoveIconXmlAction, freemind.modes.MindMapNode, int), 1.0, 1671, 
1678, setIconAction(freemind.modes.mindmapmode.actions.IconAction), 1.0, 1671, 
1679, getDescription(), 0.0, 1671, 
1680, getIcon(), 0.0, 1671, 
1681, getKeyStroke(), 0.0, 1671, 
1682, getKeystrokeResourceName(), 0.0, 1671, 
1685, actionPerformed(java.awt.event.ActionEvent), 1.0, 1683, 
1686, removeReference(freemind.modes.MindMapLink), 1.0, 1683, 
1687, getActionPair(freemind.modes.MindMapLink), 1.0, 1683, 
1688, getArrowLink(), 0.0, 1683, 
1689, setArrowLink(freemind.modes.mindmapmode.MindMapArrowLinkModel), 1.0, 1683, 
1690, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapLink, freemind.controller.actions.generated.instance.RemoveArrowLinkXmlAction), 1.0, 1683, 
1691, getDoActionClass(), 0.0, 1683, 
1692, getLinkRegistry(), 0.0, 1683, 
1693, createRemoveArrowLinkXmlAction(java.lang.String, freemind.controller.actions.generated.instance.RemoveArrowLinkXmlAction), 1.0, 1683, 
1694, createAddArrowLinkXmlAction(freemind.modes.MindMapLink, freemind.controller.actions.generated.instance.AddArrowLinkXmlAction, freemind.modes.MindMapArrowLink), 1.0, 1683, 
1696, NewSiblingAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1695, 
1697, actionPerformed(java.awt.event.ActionEvent), 1.0, 1695, 
1699, CompoundActionHandler(freemind.modes.mindmapmode.MindMapController), 1.0, 1698, 
1700, act(Object[], freemind.controller.actions.generated.instance.XmlAction, freemind.modes.mindmapmode.actions.xml.ActorXml, freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.XmlAction, int, java.lang.Object), 1.0, 1698, 
1701, getDoActionClass(), 0.0, 1698, 
1702, actionPerformed(java.awt.event.ActionEvent), 1.0, 1698, 
1704, CloudAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1703, 
1705, getDoActionClass(), 0.0, 1703, 
1710, act(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.AddCloudXmlAction, java.awt.Color), 1.0, 1703, 
1713, DeleteChildAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1712, 
1714, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, int, freemind.modes.MindMapNode), 1.0, 1712, 
1715, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.DeleteNodeAction), 1.0, 1712, 
1716, deleteWithoutUndo(freemind.modes.MindMapNode, long, long, freemind.modes.MindMapNode, freemind.extensions.PermanentNodeHook), 1.0, 1712, 
1717, getDoActionClass(), 0.0, 1712, 
1718, deleteNode(freemind.controller.actions.generated.instance.PasteNodeAction, freemind.controller.actions.generated.instance.DeleteNodeAction, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.lang.String, java.awt.datatransfer.Transferable, freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate), 1.0, 1712, 
1719, getDeleteNodeAction(java.lang.String, freemind.controller.actions.generated.instance.DeleteNodeAction), 1.0, 1712, 
1722, actionPerformed(java.awt.event.ActionEvent, java.awt.Color, java.awt.Color), 1.0, 1720, 
1725, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapLink, freemind.controller.actions.generated.instance.ArrowLinkColorXmlAction), 1.0, 1720, 
1726, getDoActionClass(), 0.0, 1720, 
1728, getLinkRegistry(), 0.0, 1720, 
1730, ImportExplorerFavoritesAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1729, 
1731, actionPerformed(java.awt.event.ActionEvent, java.io.File, javax.swing.JFileChooser, int), 1.0, 1729, 
1738, edgeWidthStringToInt(java.lang.String), 1.0, 1734, 
1739, edgeWidthIntToString(int), 1.0, 1734, 
1740, getPattern(), 0.0, 1734, 
1744, UseRichFormattingAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1743, 
1751, RevertAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1750, 
1752, actionPerformed(freemind.controller.actions.generated.instance.RevertXmlAction, freemind.controller.actions.generated.instance.RevertXmlAction, java.awt.event.ActionEvent, java.io.File, java.io.IOException), 1.0, 1750, 
1753, openXmlInsteadOfMap(freemind.controller.actions.generated.instance.RevertXmlAction, freemind.controller.actions.generated.instance.RevertXmlAction, java.lang.String, java.io.IOException), 1.0, 1750, 
1754, createRevertXmlAction(int, java.io.File, java.io.FileReader, java.lang.StringBuffer, java.lang.String), 1.0, 1750, 
1757, act(java.lang.String, java.io.File, freemind.controller.actions.generated.instance.XmlAction, java.io.FileWriter, freemind.controller.actions.generated.instance.RevertXmlAction, java.lang.Exception), 1.0, 1750, 
1758, getDoActionClass(), 0.0, 1750, 
1762, addActor(freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 1759, 
1763, getMindMapController(), 0.0, 1759, 
1765, NodeColorBlendAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1764, 
1772, show(int, java.awt.Font, java.awt.Point, int, freemind.view.mindmapview.freemind.view.mindmapview.EditNodeTextField$1TextFieldListener, int, int, int, int, int, int, int, freemind.view.mindmapview.MapView, freemind.view.mindmapview.NodeView, java.awt.Color, freemind.modes.MindMapNode, int, freemind.main.Tools.IntHolder, int, float, java.awt.Color), 0.0, 1770, 
1773, hideMe(javax.swing.JComponent, java.awt.Rectangle), 0.0, 1770, 
1775, focusGained(java.awt.event.FocusEvent), 1.0, 1774, 
1776, focusLost(java.awt.event.FocusEvent), 1.0, 1774, 
1777, keyPressed(boolean, java.awt.event.KeyEvent), 1.0, 1774, 
1778, keyTyped(java.awt.event.KeyEvent), 1.0, 1774, 
1779, keyReleased(java.awt.event.KeyEvent), 1.0, 1774, 
1780, mouseClicked(java.awt.event.MouseEvent), 1.0, 1774, 
1781, mouseEntered(java.awt.event.MouseEvent), 1.0, 1774, 
1782, mouseExited(java.awt.event.MouseEvent), 1.0, 1774, 
1783, mousePressed(java.awt.event.MouseEvent), 1.0, 1774, 
1784, mouseReleased(java.awt.event.MouseEvent), 1.0, 1774, 
1785, conditionallyShowPopup(java.awt.event.MouseEvent, javax.swing.JPopupMenu), 1.0, 1774, 
1786, componentHidden(java.awt.event.ComponentEvent), 1.0, 1774, 
1787, componentMoved(java.awt.event.ComponentEvent), 1.0, 1774, 
1788, componentResized(java.awt.event.ComponentEvent), 1.0, 1774, 
1789, componentShown(java.awt.event.ComponentEvent), 1.0, 1774, 
1792, NodeMotionListenerView(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MapView, java.lang.String), 1.0, 1791, 
1793, getMovedView(), 0.0, 1791, 
1794, paintComponent(java.awt.Graphics, java.awt.Graphics2D, java.lang.Object, freemind.controller.Controller, java.awt.Color), 1.0, 1791, 
1795, isMouseEntered(), 0.0, 1791, 
1796, setMouseEntered(), 0.0, 1791, 
1797, setMouseExited(), 0.0, 1791, 
1800, removeLayoutComponent(java.awt.Component), 1.0, 1798, 
1801, minimumLayoutSize(java.awt.Container), 1.0, 1798, 
1802, preferredLayoutSize(java.awt.Container), 1.0, 1798, 
1803, layoutContainer(java.awt.Container), 1.0, 1798, 
1804, layout(), 0.0, 1798, 
1805, setUp(freemind.view.mindmapview.NodeView, int, java.awt.Container, int), 1.0, 1798, 
1806, shutDown(), 0.0, 1798, 
1807, getView(), 0.0, 1798, 
1808, getModel(), 0.0, 1798, 
1809, getChildCount(), 0.0, 1798, 
1810, getContent(), 0.0, 1798, 
1811, getChildContentHeight(int, boolean, int, int, int, int, int, freemind.view.mindmapview.NodeView), 1.0, 1798, 
1812, getChildVerticalShift(int, int, boolean, int, freemind.view.mindmapview.NodeView), 1.0, 1798, 
1813, getChildHorizontalShift(int, int, freemind.view.mindmapview.NodeView, int), 0.0, 1798, 
1814, placeRightChildren(int, int, freemind.view.mindmapview.NodeView, int, freemind.view.mindmapview.NodeView, int, int, int, int, int, int, int), 1.0, 1798, 
1815, placeLeftChildren(int, freemind.view.mindmapview.NodeView, int, int, freemind.view.mindmapview.NodeView, int, int, int, int, int, int, int), 1.0, 1798, 
1816, getVGap(), 0.0, 1798, 
1817, getSpaceAround(), 0.0, 1798, 
1820, getView(), 0.0, 1818, 
1821, getModeController(), 0.0, 1818, 
1822, getController(), 0.0, 1818, 
1823, getText(java.lang.String), 1.0, 1818, 
1824, getFrame(), 0.0, 1818, 
1825, binOptionIsTrue(java.lang.String), 1.0, 1818, 
1826, closeEdit(), 0.0, 1818, 
1827, getText(), 0.0, 1818, 
1828, getClipboard(), 0.0, 1818, 
1829, getEditControl(), 0.0, 1818, 
1830, getNode(), 0.0, 1818, 
1831, getTextFieldListener(), 0.0, 1818, 
1832, setText(java.lang.String), 1.0, 1818, 
1833, setTextFieldListener(java.awt.event.FocusListener), 1.0, 1818, 
1836, EditDialog(freemind.view.mindmapview.EditNodeBase, freemind.view.mindmapview.EditNodeBase.EditDialog.DialogWindowListener), 1.0, 1835, 
1837, confirmedSubmit(int), 0.0, 1835, 
1838, confirmedCancel(int), 0.0, 1835, 
1839, submit(), 0.0, 1835, 
1840, cancel(), 0.0, 1835, 
1841, split(), 0.0, 1835, 
1842, isChanged(), 0.0, 1835, 
1843, setBase(freemind.view.mindmapview.EditNodeBase), 1.0, 1835, 
1844, getBase(), 0.0, 1835, 
1846, windowClosing(java.awt.event.WindowEvent), 1.0, 1845, 
1849, BezierEdgeView(), 0.0, 1848, 
1850, update(int, int, int, int), 0.0, 1848, 
1851, paint(java.awt.Graphics2D, java.awt.Stroke, java.awt.Color), 1.0, 1848, 
1852, getColor(), 0.0, 1848, 
1855, createPropertyChangeListener(), 0.0, 1853, 
1856, initRoot(), 0.0, 1853, 
1857, getMaxNodeWidth(java.lang.NumberFormatException), 0.0, 1853, 
1858, centerNode(java.awt.Dimension, freemind.view.mindmapview.NodeView, javax.swing.JViewport, javax.swing.JComponent, java.awt.Rectangle), 1.0, 1853, 
1859, scrollNodeToVisible(freemind.view.mindmapview.NodeView), 1.0, 1853, 
1861, getViewportSize(javax.swing.JViewport), 0.0, 1853, 
1863, getVisibleLeft(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 1.0, 1853, 
1864, getVisibleRight(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 1.0, 1853, 
1865, getVisibleNeighbour(freemind.view.mindmapview.NodeView, int, freemind.view.mindmapview.NodeView), 1.0, 1853, 
1866, move(java.awt.event.KeyEvent, freemind.view.mindmapview.NodeView), 1.0, 1853, 
1867, resetShiftSelectionOrigin(), 0.0, 1853, 
1869, getMainViewY(freemind.view.mindmapview.NodeView, java.awt.Point, int), 1.0, 1853, 
1870, moveToRoot(), 0.0, 1853, 
1871, selectAsTheOnlyOneSelected(freemind.view.mindmapview.NodeView), 1.0, 1853, 
1873, toggleSelected(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 1.0, 1853, 
1874, makeTheSelected(freemind.view.mindmapview.NodeView), 1.0, 1853, 
1875, deselect(freemind.view.mindmapview.NodeView), 1.0, 1853, 
1877, selectContinuous(freemind.view.mindmapview.NodeView, java.util.ListIterator, java.util.ListIterator, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, java.util.LinkedList, boolean, boolean, java.util.ListIterator), 1.0, 1853, 
1878, getModel(), 0.0, 1853, 
1879, setMoveCursor(int, boolean), 1.0, 1853, 
1880, getNodeMouseMotionListener(), 0.0, 1853, 
1881, getNodeMotionListener(), 0.0, 1853, 
1882, getNodeKeyListener(), 0.0, 1853, 
1883, getNodeDragListener(), 0.0, 1853, 
1884, getNodeDropListener(), 0.0, 1853, 
1885, getSelected(), 0.0, 1853, 
1886, getSelected(int), 1.0, 1853, 
1887, getSelecteds(java.util.LinkedList, int), 0.0, 1853, 
1888, getSelectedNodesSortedByY(freemind.modes.MindMapNode, java.awt.Point, freemind.modes.MindMapNode, java.util.HashSet, java.util.ArrayList, int, java.util.Iterator, freemind.view.mindmapview.NodeView, java.util.LinkedList), 0.0, 1853, 
1889, getSingleSelectedNodes(int, java.util.ArrayList), 0.0, 1853, 
1890, isSelected(freemind.view.mindmapview.NodeView), 1.0, 1853, 
1891, getZoom(), 0.0, 1853, 
1892, getZoomed(int), 1.0, 1853, 
1893, setZoom(float), 1.0, 1853, 
1894, validateTree(), 0.0, 1853, 
1895, setViewPositionAfterValidate(int, java.awt.Point, int, java.awt.Point, java.awt.Point, int, javax.swing.JViewport, freemind.view.mindmapview.NodeView), 0.0, 1853, 
1896, paint(long, java.awt.Graphics, java.lang.Object, java.awt.Graphics2D, java.lang.Object, long, java.lang.Object, java.lang.Object), 1.0, 1853, 
1897, paintChildren(java.awt.Graphics, java.awt.Graphics2D, java.util.HashMap, java.lang.Object), 1.0, 1853, 
1898, paintSelecteds(java.awt.Graphics2D, freemind.view.mindmapview.NodeView, java.lang.Object, java.awt.Color, java.awt.Stroke, java.util.Iterator), 1.0, 1853, 
1902, detectCollision(java.awt.Point, int, freemind.view.mindmapview.ArrowLinkView), 1.0, 1853, 
1903, preparePrinting(), 0.0, 1853, 
1904, repaintSelecteds(freemind.view.mindmapview.NodeView, java.util.Iterator), 0.0, 1853, 
1905, endPrinting(), 0.0, 1853, 
1907, isCurrentlyPrinting(), 0.0, 1853, 
1908, getInnerBounds(java.awt.Rectangle, freemind.view.mindmapview.ArrowLinkView, java.awt.geom.CubicCurve2D, java.awt.Rectangle, int, java.awt.Rectangle, java.awt.Rectangle), 0.0, 1853, 
1909, getRoot(), 0.0, 1853, 
1910, getMindMapLayout(), 0.0, 1853, 
1911, getMap(), 0.0, 1853, 
1912, getController(), 0.0, 1853, 
1913, getSiblingMaxLevel(), 0.0, 1853, 
1914, setSiblingMaxLevel(int), 1.0, 1853, 
1915, getAutoscrollInsets(java.awt.Rectangle, java.awt.Rectangle), 0.0, 1853, 
1916, autoscroll(java.awt.Point, java.awt.Rectangle), 1.0, 1853, 
1917, getNodeView(freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView, java.util.Iterator, java.util.Collection), 1.0, 1853, 
1918, getPreferredSize(java.awt.Dimension), 0.0, 1853, 
1919, revalidateSelecteds(), 0.0, 1853, 
1920, validateSelecteds(freemind.view.mindmapview.NodeView, java.util.ListIterator, freemind.view.mindmapview.NodeView, java.util.ArrayList, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 1853, 
1921, getNodeContentLocation(freemind.view.mindmapview.NodeView, java.awt.Point), 1.0, 1853, 
1923, ResizeListener(), 0.0, 1922, 
1924, componentResized(java.awt.Point, java.awt.event.ComponentEvent, int, int, javax.swing.JViewport), 1.0, 1922, 
1926, validateTree(java.awt.Component), 0.0, 1925, 
1929, Selected(), 0.0, 1928, 
1930, clear(), 0.0, 1928, 
1931, size(), 0.0, 1928, 
1932, remove(freemind.view.mindmapview.NodeView), 1.0, 1928, 
1933, add(freemind.view.mindmapview.NodeView), 1.0, 1928, 
1934, removeSelectionForHooks(freemind.view.mindmapview.NodeView), 1.0, 1928, 
1935, addSelectionForHooks(freemind.view.mindmapview.NodeView), 1.0, 1928, 
1936, get(int), 1.0, 1928, 
1937, contains(freemind.view.mindmapview.NodeView), 1.0, 1928, 
1938, moveToFirst(freemind.view.mindmapview.NodeView, int), 1.0, 1928, 
1940, actionPerformed(java.awt.event.ActionEvent), 1.0, 1939, 
1943, actionPerformed(java.awt.event.ActionEvent), 1.0, 1942, 
1945, actionPerformed(java.awt.event.ActionEvent), 1.0, 1944, 
1948, cancel(), 0.0, 1947, 
1949, ok(java.lang.String), 1.0, 1947, 
1952, EditCopyAction(javax.swing.text.JTextComponent), 1.0, 1951, 
1953, actionPerformed(java.lang.String, java.awt.event.ActionEvent), 1.0, 1951, 
1955, EditPopupMenu(javax.swing.text.JTextComponent), 1.0, 1954, 
1957, dispatchKeyEvent(java.awt.event.KeyEvent), 1.0, 1956, 
1958, focusGained(java.awt.event.FocusEvent, java.util.Iterator, java.awt.event.KeyEvent), 1.0, 1956, 
1959, focusLost(java.awt.event.FocusEvent), 1.0, 1956, 
1965, CenterNodeRunnable(), 0.0, 1964, 
1966, run(java.lang.InterruptedException), 0.0, 1964, 
1971, NodeViewFactory(), 0.0, 1970, 
1972, getInstance(), 0.0, 1970, 
1973, getEdge(freemind.view.mindmapview.NodeView, java.lang.String), 1.0, 1970, 
1974, getSharpBezierEdgeView(), 0.0, 1970, 
1975, getSharpEdgeView(), 0.0, 1970, 
1976, getBezierEdgeView(), 0.0, 1970, 
1977, getLinearEdgeView(), 0.0, 1970, 
1979, newMainView(freemind.modes.MindMapNode), 1.0, 1970, 
1980, fireNodeViewCreated(freemind.view.mindmapview.NodeView), 1.0, 1970, 
1981, newContentPane(freemind.view.mindmapview.NodeView), 1.0, 1970, 
1983, ContentPane(), 0.0, 1982, 
1986, layoutContainer(java.awt.Dimension, int, java.awt.Container, int, int, int, java.awt.Component, int), 1.0, 1984, 
1987, minimumLayoutSize(java.awt.Container), 1.0, 1984, 
1988, preferredLayoutSize(java.awt.Dimension, java.awt.Dimension, java.awt.Container, int, java.awt.Component, int), 1.0, 1984, 
1989, removeLayoutComponent(java.awt.Component), 1.0, 1984, 
1992, layout(int, int, int, int, int, int, int, int, int, int, int, int, java.awt.Dimension, int), 0.0, 1991, 
1993, getInstance(), 0.0, 1991, 
1994, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView, javax.swing.JComponent, freemind.view.mindmapview.NodeView), 1.0, 1991, 
1996, getMainViewInPoint(freemind.view.mindmapview.NodeView, java.awt.Point), 1.0, 1991, 
2000, getBounds(), 0.0, 1998, 
2001, paint(java.awt.Point, java.awt.Point, boolean, boolean, java.awt.Point, java.awt.Point, java.awt.Point, java.awt.Graphics, double, java.awt.Graphics2D), 1.0, 1998, 
2002, isTargetVisible(), 0.0, 1998, 
2003, isSourceVisible(), 0.0, 1998, 
2006, detectCollision(double, double, int, double[], java.awt.Point, java.awt.geom.Rectangle2D, java.awt.geom.FlatteningPathIterator), 1.0, 1998, 
2007, getControlPoint(int, java.awt.geom.Point2D), 1.0, 1998, 
2008, getColor(), 0.0, 1998, 
2009, getStroke(int), 0.0, 1998, 
2010, getWidth(), 0.0, 1998, 
2011, getRealWidth(int), 0.0, 1998, 
2012, getMap(), 0.0, 1998, 
2013, getModel(), 0.0, 1998, 
2014, getZoom(), 0.0, 1998, 
2017, paint(int, java.awt.Graphics2D, java.awt.Graphics, java.lang.Object, freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode, java.awt.Color), 1.0, 2016, 
2019, getMainViewWidthWithFoldingMark(int), 0.0, 2016, 
2020, getMainViewHeightWithFoldingMark(int), 0.0, 2016, 
2021, getDeltaX(), 0.0, 2016, 
2022, getStyle(), 0.0, 2016, 
2023, getAlignment(), 0.0, 2016, 
2024, getLeftPoint(int, java.awt.Point), 0.0, 2016, 
2025, getCenterPoint(java.awt.Point), 0.0, 2016, 
2026, getRightPoint(int, java.awt.Point), 0.0, 2016, 
2029, setFocusCycleRoot(boolean), 1.0, 2028, 
2031, setMainView(int, freemind.view.mindmapview.MainView, java.awt.Container), 1.0, 2028, 
2032, removeFromMap(), 0.0, 2028, 
2033, addDragListener(java.awt.dnd.DragGestureListener, java.awt.dnd.DragSource), 1.0, 2028, 
2034, addDropListener(java.awt.dnd.DropTargetListener, java.awt.dnd.DropTarget), 1.0, 2028, 
2035, isRoot(), 0.0, 2028, 
2036, getIsLong(), 0.0, 2028, 
2037, isSiblingOf(freemind.view.mindmapview.NodeView), 1.0, 2028, 
2038, isChildOf(freemind.view.mindmapview.NodeView), 1.0, 2028, 
2039, isParentOf(freemind.view.mindmapview.NodeView), 1.0, 2028, 
2040, getModel(), 0.0, 2028, 
2041, getCoordinates(java.util.LinkedList), 1.0, 2028, 
2043, setText(java.lang.String), 1.0, 2028, 
2044, getText(), 0.0, 2028, 
2045, getMainViewWidthWithFoldingMark(), 0.0, 2028, 
2046, getMainViewHeightWithFoldingMark(), 0.0, 2028, 
2047, getDeltaX(), 0.0, 2028, 
2048, getDeltaY(), 0.0, 2028, 
2049, requestFocus(boolean), 0.0, 2028, 
2050, focused(), 0.0, 2028, 
2051, getAdditionalCloudHeigth(freemind.modes.MindMapCloud), 0.0, 2028, 
2052, isSelected(), 0.0, 2028, 
2053, isLeft(), 0.0, 2028, 
2054, setModel(freemind.modes.MindMapNode), 1.0, 2028, 
2055, getMap(), 0.0, 2028, 
2056, isParentHidden(java.awt.Container, freemind.view.mindmapview.NodeView), 0.0, 2028, 
2057, getParentView(java.awt.Container), 0.0, 2028, 
2058, getVisibleParentView(java.awt.Container, freemind.view.mindmapview.NodeView), 0.0, 2028, 
2059, getChildrenViews(Component[], freemind.view.mindmapview.NodeView, int, java.util.LinkedList), 0.0, 2028, 
2060, getSiblingViews(), 0.0, 2028, 
2062, getMainViewInPoint(freemind.view.mindmapview.NodeViewLayout, java.awt.Point), 0.0, 2028, 
2063, getLinkPoint(int, java.awt.Point, int, int, int, java.awt.Point, double, double), 1.0, 2028, 
2064, convertPointToMap(java.awt.Point), 1.0, 2028, 
2065, getAlignment(), 0.0, 2028, 
2066, getNextPage(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 2028, 
2067, getPreviousPage(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 2028, 
2068, getNextVisibleSibling(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 2028, 
2070, isContentVisible(), 0.0, 2028, 
2072, getLeft(boolean, java.util.ListIterator, java.util.LinkedList, java.util.LinkedList, freemind.view.mindmapview.NodeView), 1.0, 2028, 
2073, getRight(boolean, freemind.view.mindmapview.NodeView, java.util.LinkedList, java.util.ListIterator, java.util.LinkedList), 1.0, 2028, 
2074, getPreviousVisibleSibling(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 2028, 
2075, getNextSiblingSingle(java.util.LinkedList, int, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, int), 0.0, 2028, 
2076, getPreviousSiblingSingle(java.util.LinkedList, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, int, int), 0.0, 2028, 
2077, insert(java.util.ListIterator), 0.0, 2028, 
2079, remove(java.util.ListIterator), 0.0, 2028, 
2080, update(), 0.0, 2028, 
2081, createAttributeView(), 0.0, 2028, 
2082, repaintSelected(), 0.0, 2028, 
2083, updateText(String[], boolean, int, boolean, java.lang.String, java.lang.String, int, java.lang.String, java.net.MalformedURLException), 0.0, 2028, 
2084, updateFont(java.awt.Font), 0.0, 2028, 
2085, updateIcons(java.lang.String, boolean, freemind.view.mindmapview.MultipleImage, freemind.main.FreeMindMain, java.lang.String, freemind.modes.MindIcon, java.util.Iterator, java.lang.String, javax.swing.ImageIcon, java.util.Map, java.util.List), 0.0, 2028, 
2086, updateIconPosition(), 0.0, 2028, 
2087, updateTextColor(java.awt.Color), 0.0, 2028, 
2088, useSelectionColors(), 0.0, 2028, 
2089, updateStyle(freemind.view.mindmapview.MainView), 0.0, 2028, 
2090, updateToolTip(java.lang.String, java.util.Map, java.lang.StringBuffer, java.lang.String, java.util.Iterator), 0.0, 2028, 
2091, getMaxToolTipWidth(java.lang.NumberFormatException), 0.0, 2028, 
2092, setIcon(freemind.view.mindmapview.MultipleImage), 1.0, 2028, 
2093, updateAll(java.util.ListIterator, freemind.view.mindmapview.NodeView), 0.0, 2028, 
2094, getStyle(), 0.0, 2028, 
2095, getSelectedColor(), 0.0, 2028, 
2096, getAntiColor1(float[], java.awt.Color), 1.0, 2028, 
2097, getAntiColor2(float[], java.awt.Color), 1.0, 2028, 
2098, getShift(), 0.0, 2028, 
2099, getVGap(), 0.0, 2028, 
2100, getHGap(), 0.0, 2028, 
2101, getMainView(), 0.0, 2028, 
2102, syncronizeAttributeView(), 0.0, 2028, 
2103, getTextFont(), 0.0, 2028, 
2104, getTextColor(java.awt.Color), 0.0, 2028, 
2105, getAttributeView(), 0.0, 2028, 
2106, getPreferredVisibleChild(boolean, java.awt.Component, int, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, int, java.awt.Point, freemind.view.mindmapview.NodeView, int, int), 1.0, 2028, 
2107, setPreferredChild(freemind.view.mindmapview.NodeView, java.awt.Container), 1.0, 2028, 
2108, treeNodesChanged(javax.swing.event.TreeModelEvent), 1.0, 2028, 
2109, treeNodesInserted(int[], javax.swing.event.TreeModelEvent, int, int), 1.0, 2028, 
2110, treeNodesRemoved(freemind.view.mindmapview.NodeView, javax.swing.event.TreeModelEvent, int, freemind.view.mindmapview.NodeView, boolean, freemind.view.mindmapview.NodeView, java.awt.Component, int, int[], int), 1.0, 2028, 
2111, treeStructureChanged(javax.swing.event.TreeModelEvent, java.util.ListIterator), 1.0, 2028, 
2112, getZoomedFoldingSymbolHalfWidth(int), 0.0, 2028, 
2113, paintFoldingMark(java.awt.Graphics2D, java.lang.Object, java.awt.Point, freemind.controller.Controller), 1.0, 2028, 
2114, getContent(), 0.0, 2028, 
2115, getContentPane(int), 0.0, 2028, 
2116, getMotionListenerView(), 0.0, 2028, 
2118, setVisible(boolean), 1.0, 2028, 
2119, paintCloudsAndEdges(java.awt.Graphics2D, java.awt.Component, java.awt.Point, freemind.view.mindmapview.EdgeView, int, java.lang.Object, freemind.view.mindmapview.NodeView), 1.0, 2028, 
2120, paint(boolean, java.awt.Graphics, java.awt.Graphics2D), 1.0, 2028, 
2121, paintCloud(java.awt.Graphics, freemind.view.mindmapview.CloudView), 1.0, 2028, 
2122, toString(), 0.0, 2028, 
2123, getInnerBounds(int), 0.0, 2028, 
2125, getTextBackground(java.awt.Color), 0.0, 2028, 
2126, getBackgroundColor(freemind.modes.MindMapCloud), 0.0, 2028, 
2128, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView), 1.0, 2127, 
2130, getMainViewInPoint(freemind.view.mindmapview.NodeView), 1.0, 2127, 
2132, SharpBezierEdgeView(), 0.0, 2131, 
2133, update(float, float, float, float), 0.0, 2131, 
2134, paint(java.awt.Graphics2D), 1.0, 2131, 
2135, getColor(), 0.0, 2131, 
2136, createStart(int, freemind.view.mindmapview.MainView, int, double, double, int, double, double, double, double), 0.0, 2131, 
2139, doGraham(int, java.awt.Point, int, int, java.util.Vector, int, freemind.view.mindmapview.ConvexHull.thetaComparator), 1.0, 2137, 
2140, calculateHull(java.util.LinkedList, java.util.Vector, java.util.Vector, int, java.util.ListIterator), 1.0, 2137, 
2143, thetaComparator(java.awt.Point), 1.0, 2142, 
2148, show(freemind.view.mindmapview.EditNodeBase.EditDialog), 0.0, 2146, 
2150, LongNodeDialog(java.awt.Font, int, int, javax.swing.JPanel, javax.swing.JScrollPane, javax.swing.JButton, javax.swing.JPanel, javax.swing.JButton, javax.swing.JCheckBox, java.awt.Color, javax.swing.JButton, java.awt.Color), 0.0, 2149, 
2151, show(), 0.0, 2149, 
2152, cancel(), 0.0, 2149, 
2153, split(), 0.0, 2149, 
2154, submit(), 0.0, 2149, 
2155, isChanged(), 0.0, 2149, 
2156, getMostRecentFocusOwner(), 0.0, 2149, 
2158, actionPerformed(java.awt.event.ActionEvent), 1.0, 2157, 
2161, actionPerformed(java.awt.event.ActionEvent), 1.0, 2160, 
2164, actionPerformed(java.awt.event.ActionEvent), 1.0, 2163, 
2167, actionPerformed(java.awt.event.ActionEvent), 1.0, 2166, 
2170, keyPressed(java.awt.event.KeyEvent), 1.0, 2169, 
2171, keyTyped(java.awt.event.KeyEvent), 1.0, 2169, 
2172, keyReleased(java.awt.event.KeyEvent), 1.0, 2169, 
2175, mouseClicked(java.awt.event.MouseEvent), 1.0, 2174, 
2176, mouseEntered(java.awt.event.MouseEvent), 1.0, 2174, 
2177, mouseExited(java.awt.event.MouseEvent), 1.0, 2174, 
2178, mousePressed(java.awt.event.MouseEvent), 1.0, 2174, 
2179, mouseReleased(java.awt.event.MouseEvent), 1.0, 2174, 
2180, conditionallyShowPopup(java.awt.event.MouseEvent, javax.swing.JPopupMenu), 1.0, 2174, 
2184, show(java.lang.String, java.awt.Font, int, java.lang.String, int, javax.swing.text.JTextComponent, java.awt.Color, com.lightdev.app.shtm.SHTMLPanel, java.awt.event.KeyEvent, java.awt.Color, javax.swing.text.html.HTMLDocument, freemind.main.FreeMindMain, javax.swing.JEditorPane, java.lang.Exception, java.net.MalformedURLException), 0.0, 2182, 
2186, HTMLDialog(freemind.view.mindmapview.EditNodeBase, javax.swing.JButton, javax.swing.JPanel, javax.swing.JButton, javax.swing.JButton), 1.0, 2185, 
2187, createEditorPanel(), 0.0, 2185, 
2188, getHtmlEditorPanel(), 0.0, 2185, 
2189, submit(), 0.0, 2185, 
2190, removeBodyStyle(), 0.0, 2185, 
2191, split(), 0.0, 2185, 
2192, cancel(), 0.0, 2185, 
2193, isChanged(), 0.0, 2185, 
2194, getMostRecentFocusOwner(), 0.0, 2185, 
2196, actionPerformed(java.awt.event.ActionEvent), 1.0, 2195, 
2199, actionPerformed(java.awt.event.ActionEvent), 1.0, 2198, 
2202, actionPerformed(java.awt.event.ActionEvent), 1.0, 2201, 
2205, actionPerformed(java.awt.event.ActionEvent, java.lang.Exception), 1.0, 2204, 
2208, getPreferredSize(java.awt.Dimension), 0.0, 2207, 
2209, paint(java.awt.Graphics2D, java.awt.Graphics, java.lang.Object), 1.0, 2207, 
2210, paintDragOver(java.awt.Graphics2D, int), 1.0, 2207, 
2211, paintSelected(java.awt.Graphics2D), 1.0, 2207, 
2213, getLeftPoint(java.awt.Point), 0.0, 2207, 
2214, getCenterPoint(java.awt.Point), 0.0, 2207, 
2215, getRightPoint(java.awt.Point), 0.0, 2207, 
2216, setDraggedOver(java.awt.Point), 1.0, 2207, 
2217, getStyle(), 0.0, 2207, 
2218, getAlignment(), 0.0, 2207, 
2219, getTextWidth(), 0.0, 2207, 
2220, getTextX(), 0.0, 2207, 
2221, dropAsSibling(double), 1.0, 2207, 
2222, dropPosition(double), 1.0, 2207, 
2225, layout(int, int, int, int, java.awt.Dimension, int), 0.0, 2224, 
2226, getInstance(), 0.0, 2224, 
2227, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView, freemind.view.mindmapview.NodeView, javax.swing.JComponent), 1.0, 2224, 
2229, getMainViewInPoint(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MainView), 1.0, 2224, 
2232, visit(freemind.view.mindmapview.NodeView), 1.0, 2231, 
2234, layout(int, int, int, int, int, java.awt.Dimension), 0.0, 2233, 
2235, getInstance(), 0.0, 2233, 
2236, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView, javax.swing.JComponent, freemind.view.mindmapview.NodeView), 1.0, 2233, 
2238, getMainViewInPoint(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MainView), 1.0, 2233, 
2241, SharpLinearEdgeView(), 0.0, 2240, 
2242, paint(java.awt.Graphics2D, int, int[], int[]), 1.0, 2240, 
2243, getColor(), 0.0, 2240, 
2245, getIterativeLevel(), 0.0, 2244, 
2247, paint(double, double, double, double, double, double, double, double, double, double, double, double, double, java.awt.Graphics, double, double, int, java.awt.Point, int, freemind.view.mindmapview.ConvexHull, java.util.LinkedList, java.awt.Polygon, java.awt.Point, java.awt.Graphics2D, java.util.Vector, java.awt.Point, java.awt.Graphics2D), 1.0, 2244, 
2249, getColor(), 0.0, 2244, 
2250, getExteriorColor(), 0.0, 2244, 
2251, getStroke(int), 0.0, 2244, 
2252, getWidth(), 0.0, 2244, 
2253, getRealWidth(int), 0.0, 2244, 
2254, getDistanceToConvexHull(), 0.0, 2244, 
2256, getMap(), 0.0, 2244, 
2257, getModel(), 0.0, 2244, 
2258, getZoom(), 0.0, 2244, 
2260, LinearEdgeView(), 0.0, 2259, 
2261, paint(int, java.awt.Graphics2D, java.awt.Color, int[], java.awt.Stroke, int, int[]), 1.0, 2259, 
2262, getColor(), 0.0, 2259, 
2264, getZoomedFoldingSymbolHalfWidth(), 0.0, 2263, 
2265, MainView(), 0.0, 2263, 
2266, getMinimumSize(), 0.0, 2263, 
2267, getMaximumSize(), 0.0, 2263, 
2268, getNodeView(), 0.0, 2263, 
2269, getPreferredSize(java.awt.Dimension, boolean, float, java.lang.String), 0.0, 2263, 
2270, paint(float, java.awt.Graphics, java.awt.Graphics2D, java.awt.geom.AffineTransform), 1.0, 2263, 
2271, getController(), 0.0, 2263, 
2272, isCurrentlyPrinting(), 0.0, 2263, 
2273, getZoom(float), 0.0, 2263, 
2274, printComponent(java.awt.Graphics), 1.0, 2263, 
2275, paintSelected(java.awt.Graphics2D, java.awt.Color), 1.0, 2263, 
2277, paintDragOver(java.awt.Graphics2D), 1.0, 2263, 
2278, getHeight(float), 0.0, 2263, 
2279, getWidth(float), 0.0, 2263, 
2281, getCenterPoint(), 0.0, 2263, 
2282, getLeftPoint(), 0.0, 2263, 
2283, getRightPoint(), 0.0, 2263, 
2284, getDeltaX(), 0.0, 2263, 
2285, getDeltaY(), 0.0, 2263, 
2286, getMainViewHeightWithFoldingMark(), 0.0, 2263, 
2287, getMainViewWidthWithFoldingMark(), 0.0, 2263, 
2288, convertPointToMap(java.awt.Point), 1.0, 2263, 
2289, convertPointFromMap(java.awt.Point), 1.0, 2263, 
2290, setDraggedOver(int), 1.0, 2263, 
2291, setDraggedOver(java.awt.Point), 1.0, 2263, 
2292, getDraggedOver(), 0.0, 2263, 
2293, dropAsSibling(double), 1.0, 2263, 
2294, dropPosition(double), 1.0, 2263, 
2296, getStyle(), 0.0, 2263, 
2297, getAlignment(), 0.0, 2263, 
2298, getTextWidth(), 0.0, 2263, 
2299, getTextX(int, boolean), 0.0, 2263, 
2300, getIconWidth(javax.swing.Icon), 0.0, 2263, 
2302, isInFollowLinkRegion(double, freemind.modes.MindMapNode), 1.0, 2263, 
2303, updateCursor(int, double, boolean), 1.0, 2263, 
2305, getPreferredSize(java.awt.Dimension), 0.0, 2304, 
2306, paint(java.awt.Graphics2D, java.awt.Graphics, java.lang.Object, freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView), 1.0, 2304, 
2307, paintSelected(java.awt.Graphics2D), 1.0, 2304, 
2309, getLeftPoint(java.awt.Point), 0.0, 2304, 
2310, getCenterPoint(java.awt.Point), 0.0, 2304, 
2311, getRightPoint(java.awt.Point), 0.0, 2304, 
2312, getMainViewWidthWithFoldingMark(int, int), 0.0, 2304, 
2313, getDeltaX(), 0.0, 2304, 
2314, getStyle(), 0.0, 2304, 
2315, getAlignment(), 0.0, 2304, 
2316, getTextWidth(), 0.0, 2304, 
2317, getTextX(), 0.0, 2304, 
2320, getBBox(double, double, double, double, double, double, double, int, double, double, boolean, double, double, double[], double[], java.awt.Shape, int, int, java.awt.geom.PathIterator), 1.0, 2319, 
2327, MultipleImage(double), 1.0, 2326, 
2328, getImageCount(), 0.0, 2326, 
2329, addImage(javax.swing.ImageIcon), 1.0, 2326, 
2330, getImage(double, double, int, int, java.awt.Graphics2D, java.util.Iterator, java.awt.geom.AffineTransform, java.awt.image.BufferedImage, javax.swing.ImageIcon), 0.0, 2326, 
2332, getIconWidth(int, int), 0.0, 2326, 
2333, getIconHeight(int, int, int), 0.0, 2326, 
2335, MindMapLayout(), 0.0, 2334, 
2337, removeLayoutComponent(java.awt.Component), 1.0, 2334, 
2338, layoutContainer(java.awt.Container, int, java.awt.Component, freemind.view.mindmapview.MapView, freemind.view.mindmapview.NodeMotionListenerView, freemind.view.mindmapview.NodeViewLayout, int, int, int), 1.0, 2334, 
2339, getRoot(java.awt.Container), 1.0, 2334, 
2340, minimumLayoutSize(java.awt.Container), 1.0, 2334, 
2341, preferredLayoutSize(java.awt.Container, freemind.view.mindmapview.MapView, java.awt.Dimension), 1.0, 2334, 
2342, calcYBorderSize(int, int, freemind.view.mindmapview.MapView, java.awt.Dimension), 1.0, 2334, 
2343, calcXBorderSize(int, int, freemind.view.mindmapview.MapView, java.awt.Dimension), 1.0, 2334, 
2346, createEnd(), 0.0, 2344, 
2347, createStart(), 0.0, 2344, 
2348, paint(java.awt.Graphics2D), 1.0, 2344, 
2349, reset(), 0.0, 2344, 
2350, getColor(), 0.0, 2344, 
2351, getStroke(int), 0.0, 2344, 
2352, getWidth(), 0.0, 2344, 
2353, getModel(), 0.0, 2344, 
2354, getMap(), 0.0, 2344, 
2355, getEclipsedStroke(float[]), 0.0, 2344, 
2356, isTargetEclipsed(), 0.0, 2344, 
2357, getSource(), 0.0, 2344, 
2358, getTarget(), 0.0, 2344, 
2362, show(javax.swing.JFrame), 0.0, 2360, 
2363, getFirstEvent(), 0.0, 2360, 
2365, run(java.io.FileWriter, java.io.File, java.lang.String, int, java.lang.String, java.lang.String, java.lang.Process, java.lang.Exception, java.lang.Exception), 0.0, 2364, 
2369, canSelect(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 2367, 
2370, calculateIndex(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 2367, 
2371, getPosition(int, javax.swing.JLabel), 1.0, 2367, 
2372, getPositionFromIndex(int), 1.0, 2367, 
2373, setSelectedPosition(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 2367, 
2374, getSelectedPosition(), 0.0, 2367, 
2375, select(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position, freemind.modes.IconInformation, int, java.lang.String), 1.0, 2367, 
2376, unhighlight(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 2367, 
2377, highlight(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 2367, 
2378, cursorLeft(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 2367, 
2379, cursorRight(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 2367, 
2380, cursorUp(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 2367, 
2381, cursorDown(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 2367, 
2382, addIcon(int), 1.0, 2367, 
2383, getResult(), 0.0, 2367, 
2384, getModifiers(int), 0.0, 2367, 
2385, keyPressed(int, java.awt.event.KeyEvent), 1.0, 2367, 
2386, getKeyStrokeForEvent(java.awt.event.KeyEvent), 1.0, 2367, 
2387, findIndexByKeyEvent(java.awt.event.KeyEvent, int, freemind.modes.IconInformation, javax.swing.KeyStroke), 1.0, 2367, 
2388, close(), 0.0, 2367, 
2389, keyReleased(java.awt.event.KeyEvent), 1.0, 2367, 
2390, keyTyped(java.awt.event.KeyEvent), 1.0, 2367, 
2391, mouseClicked(java.awt.event.MouseEvent), 1.0, 2367, 
2392, mouseEntered(java.awt.event.MouseEvent), 1.0, 2367, 
2393, mouseExited(java.awt.event.MouseEvent), 1.0, 2367, 
2394, mousePressed(java.awt.event.MouseEvent), 1.0, 2367, 
2395, mouseReleased(java.awt.event.MouseEvent), 1.0, 2367, 
2397, windowClosing(java.awt.event.WindowEvent), 1.0, 2396, 
2400, getX(), 0.0, 2398, 
2401, getY(), 0.0, 2398, 
2402, toString(), 0.0, 2398, 
2405, addActionListener(java.awt.event.ActionListener), 1.0, 2403, 
2407, getText(), 0.0, 2403, 
2408, setText(java.lang.String), 1.0, 2403, 
2410, actionPerformed(java.awt.event.ActionEvent), 1.0, 2409, 
2413, EnterPasswordDialog(), 0.0, 2412, 
2415, initialize(), 0.0, 2412, 
2416, close(), 0.0, 2412, 
2417, okPressed(), 0.0, 2412, 
2418, checkEqualAndMinimumSize(char[], char[], int), 0.0, 2412, 
2419, cancelPressed(), 0.0, 2412, 
2420, getJContentPane(java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints), 0.0, 2412, 
2421, getJPasswordField(), 0.0, 2412, 
2422, getJPasswordField1(), 0.0, 2412, 
2423, getJOKButton(), 0.0, 2412, 
2424, getJCancelButton(), 0.0, 2412, 
2425, getResult(), 0.0, 2412, 
2426, getPassword(), 0.0, 2412, 
2428, windowClosing(java.awt.event.WindowEvent), 1.0, 2427, 
2430, actionPerformed(java.awt.event.ActionEvent), 1.0, 2429, 
2432, actionPerformed(java.awt.event.ActionEvent), 1.0, 2431, 
2434, actionPerformed(java.awt.event.ActionEvent), 1.0, 2433, 
2438, compareTo(double, java.lang.String, double, int, int, java.lang.NumberFormatException), 1.0, 2436, 
2439, saveAttributes(freemind.main.XMLElement), 1.0, 2436, 
2444, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2441, 
2445, load(freemind.main.XMLElement), 1.0, 2441, 
2446, createDesctiption(), 0.0, 2441, 
2448, ConjunctConditions(Object[]), 1.0, 2447, 
2450, getListCellRendererComponent(javax.swing.JComponent, freemind.controller.filter.condition.Condition, int, java.lang.String, freemind.controller.filter.condition.JCondition, java.lang.String), 0.0, 2447, 
2451, save(freemind.main.XMLElement, int, freemind.main.XMLElement, freemind.controller.filter.condition.Condition), 1.0, 2447, 
2452, load(freemind.controller.filter.condition.Condition, Object[], freemind.main.XMLElement, java.util.Vector, int), 1.0, 2447, 
2454, DisjunctConditions(Object[]), 1.0, 2453, 
2456, getListCellRendererComponent(javax.swing.JComponent, int, freemind.controller.filter.condition.Condition, java.lang.String, java.lang.String, freemind.controller.filter.condition.JCondition), 0.0, 2453, 
2457, save(freemind.main.XMLElement, freemind.main.XMLElement, int, freemind.controller.filter.condition.Condition), 1.0, 2453, 
2458, load(freemind.controller.filter.condition.Condition, Object[], freemind.main.XMLElement, int, java.util.Vector), 1.0, 2453, 
2460, IgnoreCaseNodeContainsCondition(java.lang.String), 1.0, 2459, 
2462, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2459, 
2463, load(freemind.main.XMLElement), 1.0, 2459, 
2464, createDesctiption(java.lang.String, java.lang.String), 0.0, 2459, 
2467, getListCellRendererComponent(), 0.0, 2465, 
2468, save(freemind.main.XMLElement), 1.0, 2465, 
2470, ConditionNotSatisfiedDecorator(freemind.controller.filter.condition.Condition), 1.0, 2469, 
2472, getListCellRendererComponent(java.lang.String, freemind.controller.filter.condition.JCondition, javax.swing.JComponent, java.lang.String), 0.0, 2469, 
2473, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2469, 
2474, load(freemind.controller.filter.condition.Condition, freemind.main.XMLElement, java.util.Vector), 1.0, 2469, 
2476, NoFilteringCondition(), 0.0, 2475, 
2477, toString(), 0.0, 2475, 
2479, getListCellRendererComponent(), 0.0, 2475, 
2480, createCondition(), 0.0, 2475, 
2481, save(freemind.main.XMLElement), 1.0, 2475, 
2486, JCondition(), 0.0, 2485, 
2488, SelectedViewCondition(), 0.0, 2487, 
2489, toString(), 0.0, 2487, 
2491, getListCellRendererComponent(), 0.0, 2487, 
2492, CreateCondition(), 0.0, 2487, 
2493, save(freemind.main.XMLElement), 1.0, 2487, 
2495, AttributeNotExistsCondition(java.lang.String), 1.0, 2494, 
2497, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2494, 
2498, load(freemind.main.XMLElement), 1.0, 2494, 
2499, createDesctiption(java.lang.String), 0.0, 2494, 
2501, NodeContainsCondition(java.lang.String), 1.0, 2500, 
2503, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2500, 
2504, load(freemind.main.XMLElement), 1.0, 2500, 
2505, createDesctiption(java.lang.String, java.lang.String), 0.0, 2500, 
2507, ConditionFactory(), 0.0, 2506, 
2509, loadCondition(freemind.main.XMLElement), 1.0, 2506, 
2512, getNodeConditionNames(), 0.0, 2506, 
2513, getIconConditionNames(), 0.0, 2506, 
2514, getAttributeConditionNames(), 0.0, 2506, 
2516, createCellRendererComponent(java.lang.String, javax.swing.JLabel, freemind.controller.filter.condition.JCondition), 1.0, 2506, 
2518, IconContainedCondition(java.lang.String), 1.0, 2517, 
2523, getListCellRendererComponent(java.lang.String, freemind.controller.filter.condition.JCondition), 0.0, 2517, 
2524, getIconName(), 0.0, 2517, 
2525, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2517, 
2526, load(freemind.main.XMLElement), 1.0, 2517, 
2528, AttributeExistsCondition(java.lang.String), 1.0, 2527, 
2530, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2527, 
2531, load(freemind.main.XMLElement), 1.0, 2527, 
2532, createDesctiption(java.lang.String), 0.0, 2527, 
2534, NodeCondition(), 0.0, 2533, 
2535, getListCellRendererComponent(), 0.0, 2533, 
2536, toString(), 0.0, 2533, 
2537, createDesctiption(), 0.0, 2533, 
2538, saveAttributes(freemind.main.XMLElement), 1.0, 2533, 
2542, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 2539, 
2543, load(freemind.main.XMLElement), 1.0, 2539, 
2544, createDesctiption(java.lang.String), 0.0, 2539, 
2547, ChangeNodeLevelAction(), 0.0, 2546, 
2548, invoke(java.util.List, java.util.List, freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.MindMapNode, boolean, freemind.modes.MindMapNode, java.awt.datatransfer.Transferable, freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.MindMapNode, int, java.util.Vector, java.util.Iterator, boolean, int, java.lang.String, int, java.util.Iterator, java.lang.String), 1.0, 2546, 
2551, ExportToOoWriter(), 0.0, 2550, 
2552, startupMapHook(java.io.File, java.io.IOException), 0.0, 2550, 
2553, exportToOoWriter(java.io.File, java.lang.String, java.io.StringWriter), 1.0, 2550, 
2558, ApplyFormatPlugin(), 0.0, 2557, 
2559, invoke(freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode, accessories.plugins.dialogs.ChooseFormatPopupDialog, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.Pattern, java.util.List, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 2557, 
2561, FitToPage(), 0.0, 2560, 
2562, startupMapHook(), 0.0, 2560, 
2564, scroll(java.awt.Rectangle, java.awt.Rectangle), 0.0, 2560, 
2565, zoom(double, double, java.awt.Rectangle, double, javax.swing.JViewport, javax.swing.JScrollPane, java.awt.Dimension), 0.0, 2560, 
2567, run(), 0.0, 2566, 
2570, ExportToImage(), 0.0, 2569, 
2571, startupMapHook(java.awt.image.BufferedImage, java.lang.String), 0.0, 2569, 
2575, NodeHistory(), 0.0, 2574, 
2576, invoke(accessories.plugins.NodeHistory.NodeHolder, boolean, freemind.view.MapModule, freemind.modes.MindMapNode, accessories.plugins.NodeHistory.Registration, freemind.controller.Controller, boolean, freemind.modes.mindmapmode.MindMapController, java.lang.String, freemind.modes.MindMapNode, freemind.view.MapModule), 1.0, 2574, 
2577, printVector(accessories.plugins.NodeHistory.NodeHolder, java.util.Iterator, int, java.lang.StringBuffer), 0.0, 2574, 
2580, getNode(freemind.controller.Controller, freemind.modes.ModeController), 1.0, 2578, 
2581, getModeController(freemind.modes.ModeController, freemind.controller.Controller, freemind.view.MapModule), 1.0, 2578, 
2582, getMapModule(freemind.view.MapModule, freemind.controller.Controller, java.util.Map, java.util.Iterator, java.lang.String), 1.0, 2578, 
2584, getModuleGivenModeController(freemind.view.MapModule, freemind.modes.mindmapmode.MindMapController, java.util.Map.Entry, java.util.Iterator), 1.0, 2578, 
2587, register(), 0.0, 2585, 
2588, deRegister(), 0.0, 2585, 
2589, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 2585, 
2590, onSelectHook(freemind.view.mindmapview.NodeView, int), 1.0, 2585, 
2591, onSaveNode(freemind.modes.MindMapNode), 1.0, 2585, 
2592, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 2585, 
2595, run(freemind.modes.ModeController, freemind.view.mindmapview.NodeView, boolean), 0.0, 2594, 
2599, shouldUseSplitPane(), 0.0, 2597, 
2600, register(javax.swing.Action, java.lang.String), 0.0, 2597, 
2601, deRegister(), 0.0, 2597, 
2602, showNotesPanel(java.awt.Font, java.lang.String, accessories.plugins.NodeNoteRegistration.SouthPanel), 0.0, 2597, 
2603, hideNotesPanel(), 0.0, 2597, 
2605, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.EditNoteToNodeAction, java.lang.String, java.lang.String, freemind.modes.MindMapNode), 1.0, 2597, 
2606, getDoActionClass(), 0.0, 2597, 
2608, getMindMapController(), 0.0, 2597, 
2609, getNoteViewerComponent(), 0.0, 2597, 
2610, getHtmlEditorPanel(), 0.0, 2597, 
2611, getSplitPane(), 0.0, 2597, 
2613, getDocumentText(java.lang.String), 0.0, 2597, 
2614, normalizeString(java.lang.String), 1.0, 2597, 
2616, getString(java.lang.String, java.lang.String), 1.0, 2615, 
2619, SouthPanel(), 0.0, 2618, 
2622, changedUpdate(javax.swing.event.DocumentEvent), 1.0, 2621, 
2623, docEvent(java.lang.String, java.lang.String), 0.0, 2621, 
2624, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 2621, 
2625, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 2621, 
2626, setNode(freemind.modes.MindMapNode), 1.0, 2621, 
2629, NotesManager(), 0.0, 2628, 
2630, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 2628, 
2631, onSelectHook(freemind.view.mindmapview.NodeView, javax.swing.text.html.HTMLDocument, java.lang.String, java.lang.Exception), 1.0, 2628, 
2632, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 2628, 
2633, onSaveNode(boolean, freemind.modes.MindMapNode, javax.swing.JEditorPane, java.lang.String, int, int, int, java.lang.String), 1.0, 2628, 
2634, onCreateNodeHook(freemind.modes.MindMapNode), 1.0, 2628, 
2635, onPreDeleteNode(freemind.modes.MindMapNode), 1.0, 2628, 
2638, actionPerformed(java.awt.event.ActionEvent), 1.0, 2637, 
2641, actionPerformed(java.awt.event.ActionEvent, java.lang.Exception), 1.0, 2640, 
2644, UnfoldAll(), 0.0, 2643, 
2645, invoke(freemind.modes.MindMapNode, boolean, java.lang.String, java.lang.String), 1.0, 2643, 
2646, unfoldOneStage(freemind.modes.MindMapNode, int), 1.0, 2643, 
2647, foldOneStage(freemind.modes.MindMapNode), 1.0, 2643, 
2648, foldAll(freemind.modes.MindMapNode, java.util.Iterator), 1.0, 2643, 
2649, unfoldAll(freemind.modes.MindMapNode, java.util.Iterator), 1.0, 2643, 
2650, foldLastBranches(boolean, freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 2643, 
2654, getMinDepth(int, int, freemind.modes.MindMapNode, java.util.Iterator), 1.0, 2643, 
2655, getMaxDepth(int, int, freemind.modes.MindMapNode, java.util.Iterator), 1.0, 2643, 
2656, depth(freemind.modes.MindMapNode), 1.0, 2643, 
2659, register(), 0.0, 2657, 
2660, deRegister(), 0.0, 2657, 
2661, handleMouseWheelEvent(java.awt.event.MouseWheelEvent, freemind.modes.MindMapNode), 1.0, 2657, 
2663, RevisionPlugin(), 0.0, 2662, 
2664, invoke(freemind.modes.MindMapNode), 1.0, 2662, 
2665, shutdownMapHook(), 0.0, 2662, 
2666, executeAction(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.EditNodeAction), 1.0, 2662, 
2667, startTransaction(java.lang.String), 1.0, 2662, 
2668, endTransaction(java.lang.String), 1.0, 2662, 
2671, register(), 0.0, 2669, 
2672, deRegister(), 0.0, 2669, 
2673, executeAction(freemind.controller.actions.generated.instance.XmlAction), 1.0, 2669, 
2674, detectFormatChanges(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.XmlAction, java.util.Iterator), 1.0, 2669, 
2675, startTransaction(java.lang.String), 1.0, 2669, 
2676, endTransaction(java.lang.String), 1.0, 2669, 
2677, filterAction(freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.controller.actions.generated.instance.NodeAction, java.util.Iterator, freemind.controller.actions.generated.instance.FormatNodeAction, freemind.controller.actions.generated.instance.NewNodeAction, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 2669, 
2679, startupMapHook(javax.swing.JSplitPane, int, accessories.plugins.NodeNoteRegistration, java.lang.String), 0.0, 2678, 
2680, getSplitPaneToScreen(javax.swing.JSplitPane, accessories.plugins.NodeNoteRegistration), 1.0, 2678, 
2683, run(), 0.0, 2682, 
2686, AutomaticLayout(), 0.0, 2685, 
2687, setStyle(int, int, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.Pattern), 1.0, 2685, 
2688, depth(freemind.modes.MindMapNode), 1.0, 2685, 
2689, onAddChildren(freemind.modes.MindMapNode), 1.0, 2685, 
2690, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 2685, 
2691, onUpdateNodeHook(), 0.0, 2685, 
2692, invoke(freemind.modes.MindMapNode), 1.0, 2685, 
2693, reloadPatterns(java.lang.String), 0.0, 2685, 
2694, setStyleRecursive(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 2685, 
2697, register(), 0.0, 2695, 
2698, deRegister(), 0.0, 2695, 
2703, StylePropertyTranslator(freemind.modes.mindmapmode.MindMapController), 1.0, 2702, 
2704, getText(java.lang.String), 1.0, 2702, 
2707, getDescription(), 0.0, 2705, 
2708, getLabel(), 0.0, 2705, 
2709, setValue(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Pattern), 1.0, 2705, 
2710, getValue(), 0.0, 2705, 
2712, actionPerformed(freemind.controller.actions.generated.instance.Pattern, java.awt.event.ActionEvent, accessories.plugins.dialogs.ChooseFormatPopupDialog, freemind.controller.actions.generated.instance.Pattern), 1.0, 2705, 
2713, getPatternFromString(), 0.0, 2705, 
2714, setEnabled(boolean), 1.0, 2705, 
2717, getDescription(), 0.0, 2715, 
2718, getLabel(), 0.0, 2715, 
2719, setValue(java.lang.String, accessories.plugins.AutomaticLayout.StylePropertyTranslator, int, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Patterns), 1.0, 2715, 
2720, getValue(), 0.0, 2715, 
2722, getPatternsFromString(), 0.0, 2715, 
2723, setEnabled(boolean), 1.0, 2715, 
2724, valueChanged(freemind.controller.actions.generated.instance.Pattern, javax.swing.event.ListSelectionEvent, accessories.plugins.dialogs.ChooseFormatPopupDialog, javax.swing.JList, freemind.controller.actions.generated.instance.Patterns), 1.0, 2715, 
2726, run(), 0.0, 2725, 
2729, AutomaticLayoutPropertyContributor(freemind.modes.mindmapmode.MindMapController), 1.0, 2728, 
2730, getControls(freemind.common.TextTranslator, java.util.Vector), 1.0, 2728, 
2732, EncryptNode(), 0.0, 2731, 
2733, invoke(freemind.modes.MindMapNode, java.lang.String), 1.0, 2731, 
2734, newEncryptedMap(freemind.modes.ModeController, freemind.modes.mindmapmode.EncryptedMindMapNode, freemind.modes.mindmapmode.MindMapController, java.lang.StringBuffer, freemind.modes.MapAdapter), 0.0, 2731, 
2735, encrypt(freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapController, freemind.modes.MindMapNode, java.lang.StringBuffer, java.lang.Exception), 1.0, 2731, 
2736, getUsersPassword(freemind.modes.common.dialogs.EnterPasswordDialog, java.lang.StringBuffer), 0.0, 2731, 
2737, toggleCryptState(freemind.modes.MindMapNode, freemind.modes.mindmapmode.EncryptedMindMapNode, freemind.view.mindmapview.MapView, freemind.modes.mindmapmode.MindMapController), 1.0, 2731, 
2738, doPasswordCheckAndDecryptNode(freemind.modes.mindmapmode.EncryptedMindMapNode, freemind.modes.common.dialogs.EnterPasswordDialog), 1.0, 2731, 
2740, ManagePatterns(), 0.0, 2739, 
2741, startupMapHook(java.io.File, accessories.plugins.dialogs.ManagePatternsPopupDialog, freemind.main.FreeMind, java.lang.Exception), 0.0, 2739, 
2744, register(), 0.0, 2742, 
2745, deRegister(), 0.0, 2742, 
2751, CreationModificationPlugin(), 0.0, 2750, 
2752, setStyle(freemind.modes.MindMapNode, java.lang.String, java.text.MessageFormat, Object[]), 1.0, 2750, 
2753, shutdownMapHook(), 0.0, 2750, 
2754, removeToolTipRecursively(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 2750, 
2755, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 2750, 
2756, onUpdateNodeHook(), 0.0, 2750, 
2757, invoke(freemind.modes.MindMapNode), 1.0, 2750, 
2758, setStyleRecursive(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 2750, 
2759, onAddChildren(freemind.modes.MindMapNode), 1.0, 2750, 
2760, onNewChild(freemind.modes.MindMapNode), 1.0, 2750, 
2762, BlinkingNodeHook(), 0.0, 2761, 
2763, invoke(freemind.modes.MindMapNode), 1.0, 2761, 
2764, shutdownMapHook(), 0.0, 2761, 
2766, TimerColorChanger(), 0.0, 2765, 
2767, run(), 0.0, 2765, 
2769, run(), 0.0, 2768, 
2772, visit(int, freemind.view.mindmapview.NodeView, java.awt.Color), 1.0, 2771, 
2775, ImportMindmanagerFiles(), 0.0, 2774, 
2776, startupMapHook(java.lang.String, javax.swing.JFileChooser, int, java.io.File, java.awt.Container, java.io.File), 0.0, 2774, 
2777, importMindmanagerFile(java.util.zip.ZipInputStream, java.io.File, java.io.File, java.lang.String, java.io.FileWriter, java.io.InputStream, java.util.zip.ZipEntry, java.net.URL, java.lang.String, freemind.main.XMLParseException), 1.0, 2774, 
2780, FormatPaste(), 0.0, 2779, 
2781, invoke(freemind.modes.MindMapNode, java.lang.String), 1.0, 2779, 
2782, pasteFormat(freemind.modes.MindMapNode), 1.0, 2779, 
2783, copyFormat(freemind.modes.MindMapNode), 1.0, 2779, 
2785, SortNodes(), 0.0, 2784, 
2786, invoke(freemind.modes.MindMapNode, java.util.Vector, java.awt.datatransfer.Transferable, java.util.Iterator, freemind.modes.MindMapNode, java.util.Vector), 1.0, 2784, 
2788, RemoveNote(), 0.0, 2787, 
2789, invoke(freemind.modes.MindMapNode, int, freemind.modes.MindMapNode, java.util.Iterator), 1.0, 2787, 
2790, removeNote(freemind.modes.MindMapNode), 1.0, 2787, 
2797, deRegister(), 0.0, 2794, 
2798, register(), 0.0, 2794, 
2800, IconSelectionPlugin(), 0.0, 2799, 
2801, invoke(freemind.main.FreeMind, java.util.Vector, javax.swing.Action, freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapController, int, freemind.view.mindmapview.NodeView, freemind.modes.common.dialogs.IconSelectionPopupDialog, freemind.view.mindmapview.MapView, java.util.Vector), 1.0, 2799, 
2803, NewParentNode(), 0.0, 2802, 
2804, invoke(freemind.modes.MindMapNode, boolean, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.List, java.util.Iterator, java.awt.datatransfer.Transferable, freemind.modes.MindMapNode, freemind.view.mindmapview.MapView, java.util.Vector, java.util.Vector, freemind.modes.MindMapNode, java.util.List), 1.0, 2802, 
2808, shutdownMapHook(freemind.modes.MindMapNode), 0.0, 2807, 
2809, removeIcons(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 2807, 
2810, HierarchicalIcons(), 0.0, 2807, 
2811, setStyle(boolean, freemind.modes.MindMapNode, java.util.Iterator, java.util.TreeSet, freemind.modes.MindIcon, java.util.TreeSet, freemind.modes.MindMapNode, freemind.view.mindmapview.MultipleImage, java.lang.String), 1.0, 2807, 
2813, onAddChildren(freemind.modes.MindMapNode), 1.0, 2807, 
2815, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 2807, 
2816, onUpdateNodeHook(), 0.0, 2807, 
2817, invoke(freemind.modes.MindMapNode), 1.0, 2807, 
2818, gatherLeavesAndSetStyle(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 2807, 
2819, gatherLeavesAndSetParentsStyle(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 2807, 
2820, setStyleRecursive(freemind.modes.MindMapNode), 1.0, 2807, 
2822, SaveAll(), 0.0, 2821, 
2823, startupMapHook(freemind.controller.Controller, java.util.Iterator, freemind.view.MapModule, java.util.Map, freemind.view.MapModule, java.util.Vector), 0.0, 2821, 
2824, getMapModules(), 0.0, 2821, 
2826, chooseFile(java.lang.String), 0.0, 2825, 
2827, ExportWithXSLT(), 0.0, 2825, 
2828, startupMapHook(freemind.modes.ModeController, freemind.modes.MindMap, java.io.File), 0.0, 2825, 
2829, transform(boolean, java.io.File, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Exception), 1.0, 2825, 
2830, copyMap(java.lang.String, boolean, java.io.BufferedWriter), 1.0, 2825, 
2831, copyIcons(boolean, java.lang.String, java.lang.String), 1.0, 2825, 
2832, createImageFromMap(java.lang.String, java.awt.image.BufferedImage, java.io.FileOutputStream, java.io.IOException), 1.0, 2825, 
2833, copyIconsToDirectory(String[], java.lang.String, java.lang.String, int, java.util.Vector, freemind.modes.MindIcon, java.io.File), 1.0, 2825, 
2835, createDirectory(java.lang.String, java.io.File), 1.0, 2825, 
2837, getMapXml(java.io.StringWriter), 0.0, 2825, 
2838, getAreaCode(java.lang.String, boolean, freemind.modes.MindMapNode, accessories.plugins.util.html.ClickableImageCreator), 1.0, 2825, 
2839, export(java.io.File, accessories.plugins.util.xslt.ExportDialog), 1.0, 2825, 
2841, isTransformResultWithoutError(), 0.0, 2825, 
2846, SplitNode(), 0.0, 2845, 
2847, invoke(freemind.modes.MindMapNode, java.util.ListIterator, java.util.List, freemind.modes.MindMapNode), 1.0, 2845, 
2848, splitNode(String[], freemind.modes.MindMapNode, java.lang.String, freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapController, int, freemind.modes.MindMapNode, int, int, java.lang.String), 1.0, 2845, 
2849, splitNode(int, java.io.StringWriter, javax.swing.text.html.HTMLDocument, java.lang.String, int, String[], javax.swing.text.Element, javax.swing.text.Element, javax.swing.text.html.HTMLEditorKit, java.lang.String, int, int, java.io.StringReader, int, java.lang.String, java.io.IOException), 1.0, 2845, 
2850, getParentElement(javax.swing.text.Element, javax.swing.text.html.HTMLDocument, javax.swing.text.Element), 1.0, 2845, 
2852, run(freemind.view.mindmapview.MapView), 0.0, 2851, 
2855, FormularEditor(), 0.0, 2854, 
2856, loadFrom(freemind.main.XMLElement, freemind.main.XMLElement, int, java.lang.String), 1.0, 2854, 
2857, save(freemind.main.XMLElement, java.util.Iterator, accessories.plugins.FormularEditor.FormularEntity, freemind.main.XMLElement), 1.0, 2854, 
2858, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 2854, 
2859, shutDownDisplay(freemind.main.FreeMindMain), 0.0, 2854, 
2860, onSelectHook(freemind.view.mindmapview.NodeView, accessories.plugins.FormularEditor.FormularEntity, java.util.Iterator, java.awt.GridBagLayout, int, freemind.main.FreeMindMain), 1.0, 2854, 
2861, shutdownMapHook(), 0.0, 2854, 
2863, getValue(), 0.0, 2862, 
2864, setValue(java.lang.String), 1.0, 2862, 
2865, getLabel(), 0.0, 2862, 
2866, setLabel(java.lang.String), 1.0, 2862, 
2869, save(freemind.main.XMLElement), 1.0, 2862, 
2870, getDisplayLabel(), 0.0, 2862, 
2871, FormularEntity(freemind.main.XMLElement), 1.0, 2862, 
2872, getType(), 0.0, 2862, 
2873, setDisplayLabel(java.lang.String), 1.0, 2862, 
2876, StringEntity(freemind.main.XMLElement), 1.0, 2874, 
2878, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 2877, 
2879, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 2877, 
2880, changedUpdate(javax.swing.event.DocumentEvent, java.lang.String, javax.swing.text.BadLocationException), 1.0, 2877, 
2883, CheckBoxEntity(freemind.main.XMLElement), 1.0, 2882, 
2886, itemStateChanged(java.awt.event.ItemEvent), 1.0, 2885, 
2890, ChoiceEntity(freemind.main.XMLElement, freemind.main.XMLElement, int), 1.0, 2888, 
2891, save(freemind.main.XMLElement, int, freemind.main.XMLElement), 1.0, 2888, 
2893, ChoiceElement(freemind.main.XMLElement), 1.0, 2892, 
2894, save(freemind.main.XMLElement), 1.0, 2892, 
2896, itemStateChanged(java.awt.event.ItemEvent), 1.0, 2895, 
2900, getContent(), 0.0, 2899, 
2901, setContent(java.lang.String), 1.0, 2899, 
2902, setContentUndoable(java.lang.String), 1.0, 2899, 
2906, register(), 0.0, 2905, 
2907, deRegister(), 0.0, 2905, 
2910, toString(), 0.0, 2908, 
2911, getInstanciationMethod(java.util.Iterator, java.lang.String, java.util.HashMap), 0.0, 2908, 
2912, getModes(), 0.0, 2908, 
2913, getBaseClass(), 0.0, 2908, 
2914, getName(), 0.0, 2908, 
2915, getClassName(), 0.0, 2908, 
2916, getDocumentation(), 0.0, 2908, 
2917, getIconPath(), 0.0, 2908, 
2918, getKeyStroke(), 0.0, 2908, 
2919, getProperties(), 0.0, 2908, 
2920, isSelectable(), 0.0, 2908, 
2923, getFromResourceIfNecessary(java.lang.String), 1.0, 2921, 
2924, getFromPropertiesIfNecessary(java.lang.String), 1.0, 2921, 
2925, getPluginDirectory(), 0.0, 2921, 
2926, getPluginBase(), 0.0, 2921, 
2927, getPluginClasspath(java.util.Vector, java.util.Iterator, java.lang.Object, freemind.controller.actions.generated.instance.PluginClasspath), 0.0, 2921, 
2928, getPluginClassLoader(java.lang.ClassLoader, java.util.List), 0.0, 2921, 
2929, createPluginClasspathString(java.lang.String, java.util.List, java.util.Iterator, freemind.controller.actions.generated.instance.PluginClasspath), 1.0, 2921, 
2930, getClassLoader(URL[], java.lang.String, java.util.List, int, java.util.Iterator, java.io.File, java.lang.ClassLoader, java.lang.String, freemind.controller.actions.generated.instance.PluginClasspath, java.net.MalformedURLException), 1.0, 2921, 
2932, isSingleton(), 0.0, 2931, 
2933, isPermanent(), 0.0, 2931, 
2935, getAllInstanciationMethods(java.util.HashMap), 0.0, 2931, 
2939, isUndoable(), 0.0, 2931, 
2957, setMap(freemind.modes.MindMap), 1.0, 2956, 
2958, setNode(freemind.modes.MindMapNode), 1.0, 2956, 
2959, invoke(freemind.modes.MindMapNode), 1.0, 2956, 
2961, HookAdapter(), 0.0, 2960, 
2962, getName(), 0.0, 2960, 
2963, setName(java.lang.String), 1.0, 2960, 
2964, startupMapHook(), 0.0, 2960, 
2965, shutdownMapHook(), 0.0, 2960, 
2966, getController(), 0.0, 2960, 
2967, getProperties(), 0.0, 2960, 
2968, setProperties(java.util.Properties), 1.0, 2960, 
2969, setController(freemind.modes.ModeController), 1.0, 2960, 
2970, getResourceString(java.lang.String, java.lang.String), 1.0, 2960, 
2971, getResource(java.lang.String), 1.0, 2960, 
2972, getPluginBaseClass(), 0.0, 2960, 
2973, setPluginBaseClass(freemind.extensions.MindMapHook.PluginBaseClassSearcher), 1.0, 2960, 
2976, ModeControllerHookAdapter(), 0.0, 2975, 
2978, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 2977, 
2979, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 2977, 
2980, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 2977, 
2981, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 2977, 
2982, onUpdateNodeHook(), 0.0, 2977, 
2983, onAddChild(freemind.modes.MindMapNode), 1.0, 2977, 
2984, onNewChild(freemind.modes.MindMapNode), 1.0, 2977, 
2985, onAddChildren(freemind.modes.MindMapNode), 1.0, 2977, 
2986, onRemoveChild(freemind.modes.MindMapNode), 1.0, 2977, 
2988, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 2977, 
2989, save(freemind.main.XMLElement), 1.0, 2977, 
2990, loadFrom(freemind.main.XMLElement), 1.0, 2977, 
2992, ImportWizard(freemind.main.FreeMindMain), 1.0, 2991, 
2993, buildClassList(java.lang.String, java.lang.String, java.lang.String, java.util.HashSet, java.io.File, java.lang.String, java.util.StringTokenizer, java.lang.String, java.io.IOException), 0.0, 2991, 
2995, isInteresting(java.lang.String, int, java.lang.String), 1.0, 2991, 
2998, PermanentNodeHookAdapter(), 0.0, 2997, 
2999, shutdownMapHook(), 0.0, 2997, 
3000, onUpdateNodeHook(), 0.0, 2997, 
3001, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 2997, 
3002, onAddChild(freemind.modes.MindMapNode), 1.0, 2997, 
3003, onNewChild(freemind.modes.MindMapNode), 1.0, 2997, 
3004, onRemoveChild(freemind.modes.MindMapNode), 1.0, 2997, 
3005, save(freemind.main.XMLElement, java.lang.String), 1.0, 2997, 
3006, loadFrom(freemind.main.XMLElement), 1.0, 2997, 
3007, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 2997, 
3008, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 2997, 
3009, onAddChildren(freemind.modes.MindMapNode), 1.0, 2997, 
3010, loadNameValuePairs(freemind.main.XMLElement, freemind.main.XMLElement, java.util.HashMap, java.util.Iterator, java.lang.String), 1.0, 2997, 
3013, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 2997, 
3014, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 2997, 
3016, HookFactoryAdapter(), 0.0, 3015, 
3019, deregisterAllRegistrationContainer(), 0.0, 3015, 
3021, PermanentNodeHookSubstituteUnknown(java.lang.String), 1.0, 3020, 
3022, loadFrom(freemind.main.XMLElement), 1.0, 3020, 
3023, save(freemind.main.XMLElement, java.util.Iterator, freemind.main.XMLElement), 1.0, 3020, 
3024, getName(), 0.0, 3020, 
3026, getName(), 0.0, 3025, 
3027, setName(java.lang.String), 1.0, 3025, 
3028, setProperties(java.util.Properties), 1.0, 3025, 
3029, getResourceString(java.lang.String), 1.0, 3025, 
3030, setController(freemind.modes.ModeController), 1.0, 3025, 
3031, getPluginBaseClass(), 0.0, 3025, 
3032, setPluginBaseClass(freemind.extensions.MindMapHook.PluginBaseClassSearcher), 1.0, 3025, 
3033, startupMapHook(), 0.0, 3025, 
3034, shutdownMapHook(), 0.0, 3025, 
3036, getPluginBaseObject(), 0.0, 3035, 
3038, NodeHookAdapter(), 0.0, 3037, 
3039, invoke(freemind.modes.MindMapNode), 1.0, 3037, 
3040, getNode(), 0.0, 3037, 
3041, setNode(freemind.modes.MindMapNode), 1.0, 3037, 
3042, getMap(), 0.0, 3037, 
3043, nodeChanged(freemind.modes.MindMapNode), 1.0, 3037, 
3044, setMap(freemind.modes.MindMap), 1.0, 3037, 
3047, getClassName(), 0.0, 3045, 
3048, getIsPluginBase(), 0.0, 3045, 
3049, getListPluginModeList(), 0.0, 3045, 
3051, getPossibleNodeHooks(), 0.0, 3050, 
3052, getPossibleModeControllerHooks(), 0.0, 3050, 
3053, createModeControllerHook(java.lang.String), 1.0, 3050, 
3054, createNodeHook(java.lang.String), 1.0, 3050, 
3056, getHookMenuPositions(java.lang.String), 1.0, 3050, 
3057, getInstanciationMethod(java.lang.String), 1.0, 3050, 
3058, getRegistrations(), 0.0, 3050, 
3060, deregisterAllRegistrationContainer(), 0.0, 3050, 
3061, getPluginBaseClass(java.lang.String), 1.0, 3050, 
3063, RegistrationContainer(), 0.0, 3062, 
3066, getTranslatableResourceString(java.lang.String, java.lang.String), 1.0, 3064, 
3067, createBufferedImage(java.awt.image.BufferedImage, java.awt.Rectangle, java.awt.Graphics), 0.0, 3064, 
3073, accept(java.io.File, java.lang.String), 1.0, 3071, 
3074, getDescription(), 0.0, 3071, 
3078, getContent(java.lang.String), 1.0, 3076, 
3079, setContent(java.lang.String), 1.0, 3076, 
3080, getContent(), 0.0, 3076, 
3084, SchemeController(freemind.modes.Mode), 1.0, 3083, 
3085, newModel(freemind.modes.ModeController), 1.0, 3083, 
3087, saveAs(javax.swing.JFileChooser, int, java.io.File), 0.0, 3083, 
3088, getPopupMenu(), 0.0, 3083, 
3089, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 3083, 
3090, getHookFactory(), 0.0, 3083, 
3092, EvaluateAction(), 0.0, 3091, 
3093, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.lang.String, java.util.StringTokenizer), 1.0, 3091, 
3095, SchemeToolBar(freemind.modes.schememode.SchemeController, javax.swing.JButton), 1.0, 3094, 
3098, save(java.io.File, java.io.BufferedWriter, java.lang.Exception), 1.0, 3096, 
3099, load(java.io.File, java.net.URL, java.io.IOException), 1.0, 3096, 
3100, loadMathStyle(freemind.modes.schememode.SchemeNodeModel, freemind.modes.schememode.SchemeNodeModel, java.io.Reader, java.io.StreamTokenizer, java.lang.String), 1.0, 3096, 
3101, getCode(), 0.0, 3096, 
3102, toString(), 0.0, 3096, 
3103, getXml(java.io.Writer), 1.0, 3096, 
3104, getFilteredXml(java.io.Writer), 1.0, 3096, 
3106, SchemePopupMenu(freemind.modes.schememode.SchemeController), 1.0, 3105, 
3110, SchemeMode(), 0.0, 3109, 
3111, init(freemind.controller.Controller), 1.0, 3109, 
3112, toString(), 0.0, 3109, 
3113, activate(), 0.0, 3109, 
3114, restore(java.lang.String), 1.0, 3109, 
3115, getController(), 0.0, 3109, 
3116, getDefaultModeController(), 0.0, 3109, 
3117, getFrame(), 0.0, 3109, 
3118, createModeController(), 0.0, 3109, 
3121, toString(java.lang.String), 0.0, 3119, 
3122, getCodeMathStyle(java.lang.String, java.util.ListIterator), 0.0, 3119, 
3123, getCodeClassicStyle(java.lang.String, java.util.ListIterator), 0.0, 3119, 
3124, isWriteable(), 0.0, 3119, 
3127, TableSorter(), 0.0, 3126, 
3128, TableSorter(javax.swing.table.TableModel), 1.0, 3126, 
3130, clearSortingState(), 0.0, 3126, 
3131, getTableModel(), 0.0, 3126, 
3132, setTableModel(javax.swing.table.TableModel), 1.0, 3126, 
3133, getTableHeader(), 0.0, 3126, 
3134, setTableHeader(javax.swing.table.JTableHeader, javax.swing.table.TableCellRenderer), 1.0, 3126, 
3135, isSorting(), 0.0, 3126, 
3136, getDirective(int, int, accessories.plugins.time.TableSorter.Directive), 1.0, 3126, 
3137, getSortingStatus(int), 1.0, 3126, 
3138, sortingStatusChanged(), 0.0, 3126, 
3141, cancelSorting(), 0.0, 3126, 
3143, getComparator(int, java.lang.Class, java.util.Comparator), 1.0, 3126, 
3144, getViewToModel(int, int), 0.0, 3126, 
3145, modelIndex(int), 1.0, 3126, 
3146, getModelToView(int, int), 0.0, 3126, 
3147, getRowCount(), 0.0, 3126, 
3148, getColumnCount(), 0.0, 3126, 
3149, getColumnName(int), 1.0, 3126, 
3150, getColumnClass(int), 1.0, 3126, 
3161, Row(int), 1.0, 3160, 
3162, compareTo(java.lang.Object, int, int, java.lang.Object, java.lang.Object, java.util.Iterator, int, accessories.plugins.time.TableSorter.Directive, int), 1.0, 3160, 
3164, tableChanged(int, int, javax.swing.event.TableModelEvent), 1.0, 3163, 
3167, mouseClicked(int, java.awt.event.MouseEvent, int, int, javax.swing.table.JTableHeader, javax.swing.table.TableColumnModel), 1.0, 3166, 
3172, getIconWidth(), 0.0, 3169, 
3173, getIconHeight(), 0.0, 3169, 
3175, SortableHeaderRenderer(javax.swing.table.TableCellRenderer), 1.0, 3174, 
3180, JMonthChooser(), 0.0, 3179, 
3181, JMonthChooser(boolean), 1.0, 3179, 
3182, initNames(String[], int, java.text.DateFormatSymbols), 0.0, 3179, 
3183, stateChanged(int, int, int, boolean, javax.swing.event.ChangeEvent, javax.swing.SpinnerNumberModel), 1.0, 3179, 
3184, itemStateChanged(java.awt.event.ItemEvent, int), 1.0, 3179, 
3186, setMonth(int), 1.0, 3179, 
3187, getMonth(), 0.0, 3179, 
3188, setDayChooser(accessories.plugins.time.JDayChooser), 1.0, 3179, 
3189, setYearChooser(accessories.plugins.time.JYearChooser), 1.0, 3179, 
3190, getLocale(), 0.0, 3179, 
3191, setLocale(java.util.Locale), 1.0, 3179, 
3192, setEnabled(boolean), 1.0, 3179, 
3193, getComboBox(), 0.0, 3179, 
3194, getSpinner(), 0.0, 3179, 
3195, hasSpinner(), 0.0, 3179, 
3196, setFont(java.awt.Font), 1.0, 3179, 
3197, updateUI(javax.swing.JSpinner), 0.0, 3179, 
3198, main(String[], javax.swing.JFrame), 1.0, 3179, 
3200, getPreferredSize(java.awt.Dimension), 0.0, 3199, 
3202, RemoveReminderHook(), 0.0, 3201, 
3203, invoke(freemind.modes.MindMapNode, java.util.List, freemind.modes.common.plugins.ReminderHookBase), 1.0, 3201, 
3205, startupMapHook(javax.swing.JPanel, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, int, javax.swing.AbstractAction, javax.swing.JButton, freemind.controller.actions.generated.instance.TimeWindowColumnSetting, javax.swing.JMenuBar, java.awt.Container, javax.swing.JMenu, javax.swing.JScrollPane, java.lang.String, javax.swing.JButton, javax.swing.JButton, int, javax.swing.JButton, AbstractAction[], javax.swing.JButton, freemind.controller.actions.generated.instance.WindowConfigurationStorage, javax.swing.JMenuItem, javax.swing.JButton, java.awt.GridBagLayout, javax.swing.ListSelectionModel), 0.0, 3204, 
3206, exportSelectedRowsAndClose(int[], int, freemind.modes.MindMap, freemind.modes.mindmapmode.MindMapController, freemind.modes.MindMapNode, freemind.modes.MindMapNode, int, java.util.Iterator, java.util.Vector), 0.0, 3204, 
3207, replace(accessories.plugins.time.TimeList.IReplaceInputInformation, java.lang.String, java.lang.String, javax.swing.text.BadLocationException), 1.0, 3204, 
3209, selectSelectedRows(), 0.0, 3204, 
3212, getMindMapNode(int, freemind.modes.MindMapNode), 1.0, 3204, 
3213, updateModel(javax.swing.table.DefaultTableModel, freemind.modes.MindMapNode), 0.0, 3204, 
3215, getTimePanel(), 0.0, 3204, 
3216, disposeDialog(freemind.controller.actions.generated.instance.TimeWindowColumnSetting, int, freemind.controller.actions.generated.instance.TimeWindowConfigurationStorage), 0.0, 3204, 
3217, getRegularExpression(java.lang.String), 1.0, 3204, 
3218, getText(javax.swing.text.Document, java.lang.String), 1.0, 3204, 
3219, getPureRegularExpression(java.lang.String), 1.0, 3204, 
3221, windowClosing(java.awt.event.WindowEvent), 1.0, 3220, 
3223, actionPerformed(java.awt.event.ActionEvent), 1.0, 3222, 
3225, keyPressed(java.awt.event.KeyEvent), 1.0, 3224, 
3227, keyPressed(java.awt.event.KeyEvent), 1.0, 3226, 
3229, actionPerformed(java.awt.event.ActionEvent), 1.0, 3228, 
3231, actionPerformed(java.awt.event.ActionEvent), 1.0, 3230, 
3233, actionPerformed(java.awt.event.ActionEvent), 1.0, 3232, 
3235, actionPerformed(java.awt.event.ActionEvent), 1.0, 3234, 
3237, actionPerformed(java.awt.event.ActionEvent), 1.0, 3236, 
3239, actionPerformed(java.awt.event.ActionEvent), 1.0, 3238, 
3241, valueChanged(javax.swing.event.ListSelectionEvent, boolean, javax.swing.ListSelectionModel), 1.0, 3240, 
3244, getNodeText(freemind.modes.MindMapNode), 1.0, 3243, 
3245, valueChanged(javax.swing.event.ListSelectionEvent, int, freemind.modes.MindMapNode, javax.swing.ListSelectionModel), 1.0, 3243, 
3248, getLength(), 0.0, 3247, 
3249, getNodeHolderAt(int), 1.0, 3247, 
3252, getLength(), 0.0, 3251, 
3253, getNodeHolderAt(int), 1.0, 3251, 
3257, getLength(), 0.0, 3256, 
3258, getNodeHolderAt(int), 1.0, 3256, 
3262, getColumnClass(int), 1.0, 3261, 
3264, change(javax.swing.event.DocumentEvent), 1.0, 3263, 
3265, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 3263, 
3266, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 3263, 
3267, changedUpdate(javax.swing.event.DocumentEvent), 1.0, 3263, 
3270, DelayedTextEntry(javax.swing.event.DocumentEvent), 1.0, 3269, 
3271, run(), 0.0, 3269, 
3273, run(javax.swing.text.Document, java.lang.String, javax.swing.text.BadLocationException), 0.0, 3272, 
3276, mouseClicked(java.awt.event.MouseEvent, java.awt.Point, int), 1.0, 3275, 
3279, keyTyped(java.awt.event.KeyEvent), 1.0, 3278, 
3280, keyPressed(java.awt.event.KeyEvent), 1.0, 3278, 
3281, keyReleased(java.awt.event.KeyEvent), 1.0, 3278, 
3286, processKeyEvent(EventListener[], java.awt.event.KeyEvent, int, java.awt.event.KeyListener), 1.0, 3283, 
3289, DateRenderer(), 0.0, 3288, 
3290, setValue(java.lang.Object), 1.0, 3288, 
3292, NodeRenderer(), 0.0, 3291, 
3293, setValue(java.lang.Object), 1.0, 3291, 
3295, NotesRenderer(), 0.0, 3294, 
3296, setValue(java.lang.Object), 1.0, 3294, 
3298, NodeHolder(freemind.modes.MindMapNode), 1.0, 3297, 
3299, compareTo(java.lang.Object), 1.0, 3297, 
3300, toString(), 0.0, 3297, 
3301, getUntaggedNodeText(java.lang.String), 0.0, 3297, 
3303, NotesHolder(freemind.modes.MindMapNode), 1.0, 3302, 
3304, compareTo(java.lang.Object), 1.0, 3302, 
3305, toString(), 0.0, 3302, 
3306, getUntaggedNotesText(java.lang.String), 0.0, 3302, 
3308, IconsHolder(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindIcon), 1.0, 3307, 
3309, compareTo(java.lang.Object), 1.0, 3307, 
3310, getIcons(), 0.0, 3307, 
3311, toString(java.lang.String, java.util.Iterator, java.lang.String), 0.0, 3307, 
3313, IconsRenderer(freemind.modes.ModeController), 1.0, 3312, 
3314, setValue(java.lang.Object, freemind.view.mindmapview.MultipleImage, freemind.modes.MindIcon, accessories.plugins.time.TimeList.IconsHolder, java.util.Iterator), 1.0, 3312, 
3316, setMonthChooser(accessories.plugins.time.JMonthChooser), 1.0, 3315, 
3317, setYearChooser(accessories.plugins.time.JYearChooser), 1.0, 3315, 
3318, JDayChooser(), 0.0, 3315, 
3319, JDayChooser(boolean, int, int, int, int, java.util.Calendar), 1.0, 3315, 
3320, init(java.util.Date, javax.swing.JButton), 0.0, 3315, 
3321, drawDayNames(int, int, int, java.text.DateFormatSymbols), 0.0, 3315, 
3322, initDecorations(int), 0.0, 3315, 
3323, drawWeeks(java.lang.String, int, java.util.Calendar, int), 0.0, 3315, 
3324, drawDays(int, int, java.util.Date, int, int, int, java.util.Calendar, java.awt.Color, java.util.Calendar, java.util.Calendar, java.util.Date), 0.0, 3315, 
3325, getLocale(), 0.0, 3315, 
3326, setLocale(java.util.Locale), 1.0, 3315, 
3327, setDay(int, int, java.util.Calendar, int, int), 1.0, 3315, 
3328, setAlwaysFireDayProperty(boolean), 1.0, 3315, 
3329, getDay(), 0.0, 3315, 
3330, setMonth(boolean, int, int), 1.0, 3315, 
3331, setYear(int), 1.0, 3315, 
3332, setCalendar(java.util.Calendar), 1.0, 3315, 
3333, setFont(java.awt.Font, int), 1.0, 3315, 
3334, setForeground(java.awt.Color, int), 1.0, 3315, 
3335, actionPerformed(java.lang.String, java.awt.event.ActionEvent, javax.swing.JButton, int), 1.0, 3315, 
3336, focusGained(java.awt.event.FocusEvent), 1.0, 3315, 
3337, focusLost(java.awt.event.FocusEvent), 1.0, 3315, 
3338, keyPressed(java.awt.event.KeyEvent, int, int, int, java.util.GregorianCalendar, int, int), 1.0, 3315, 
3339, keyTyped(java.awt.event.KeyEvent), 1.0, 3315, 
3340, keyReleased(java.awt.event.KeyEvent), 1.0, 3315, 
3341, setEnabled(boolean, short), 1.0, 3315, 
3342, isWeekOfYearVisible(), 0.0, 3315, 
3343, setWeekOfYearVisible(boolean), 1.0, 3315, 
3344, getDayPanel(), 0.0, 3315, 
3345, getDecorationBackgroundColor(), 0.0, 3315, 
3346, setDecorationBackgroundColor(java.awt.Color, int), 1.0, 3315, 
3347, getSundayForeground(), 0.0, 3315, 
3348, getWeekdayForeground(), 0.0, 3315, 
3349, setSundayForeground(java.awt.Color), 1.0, 3315, 
3350, setWeekdayForeground(java.awt.Color), 1.0, 3315, 
3351, setFocus(), 0.0, 3315, 
3352, isDecorationBackgroundVisible(), 0.0, 3315, 
3353, setDecorationBackgroundVisible(boolean), 1.0, 3315, 
3354, isDecorationBordersVisible(), 0.0, 3315, 
3355, isDayBordersVisible(), 0.0, 3315, 
3356, setDecorationBordersVisible(boolean), 1.0, 3315, 
3357, setDayBordersVisible(boolean, int), 1.0, 3315, 
3358, updateUI(), 0.0, 3315, 
3360, setMaxSelectableDate(java.util.Date), 1.0, 3315, 
3361, setMinSelectableDate(java.util.Date), 1.0, 3315, 
3362, getMaxSelectableDate(), 0.0, 3315, 
3363, getMinSelectableDate(), 0.0, 3315, 
3364, getMaxDayCharacters(), 0.0, 3315, 
3365, setMaxDayCharacters(int), 1.0, 3315, 
3366, main(String[], javax.swing.JFrame), 1.0, 3315, 
3368, paint(java.awt.Graphics), 1.0, 3367, 
3370, DecoratorButton(), 0.0, 3369, 
3371, addMouseListener(java.awt.event.MouseListener), 1.0, 3369, 
3372, isFocusable(), 0.0, 3369, 
3373, paint(java.awt.Graphics), 1.0, 3369, 
3376, resetFilter(), 0.0, 3374, 
3377, setFilter(java.lang.String), 1.0, 3374, 
3378, updateIndexArray(java.util.ArrayList, int, accessories.plugins.time.TimeList.NodeHolder), 0.0, 3374, 
3379, getRowCount(), 0.0, 3374, 
3380, getColumnCount(), 0.0, 3374, 
3381, getColumnName(int), 1.0, 3374, 
3382, getColumnClass(int), 1.0, 3374, 
3385, tableChanged(javax.swing.event.TableModelEvent), 1.0, 3384, 
3389, register(), 0.0, 3387, 
3390, deRegister(), 0.0, 3387, 
3392, getHook(freemind.modes.MindMapNode, java.util.Iterator, freemind.extensions.PermanentNodeHook), 1.0, 3387, 
3394, JYearChooser(java.util.Calendar), 0.0, 3393, 
3395, setYear(int), 1.0, 3393, 
3396, setValue(int), 1.0, 3393, 
3397, getYear(), 0.0, 3393, 
3398, setDayChooser(accessories.plugins.time.JDayChooser), 1.0, 3393, 
3399, getEndYear(), 0.0, 3393, 
3400, setEndYear(int), 1.0, 3393, 
3401, getStartYear(), 0.0, 3393, 
3402, setStartYear(int), 1.0, 3393, 
3403, main(String[], javax.swing.JFrame), 1.0, 3393, 
3405, JCalendar(), 0.0, 3404, 
3406, JCalendar(java.util.Date), 1.0, 3404, 
3407, JCalendar(java.util.Calendar), 1.0, 3404, 
3408, JCalendar(java.util.Locale), 1.0, 3404, 
3412, JCalendar(boolean), 1.0, 3404, 
3414, main(String[], accessories.plugins.time.JCalendar, javax.swing.JFrame), 1.0, 3404, 
3415, getCalendar(), 0.0, 3404, 
3416, getDayChooser(), 0.0, 3404, 
3417, getLocale(), 0.0, 3404, 
3418, getMonthChooser(), 0.0, 3404, 
3419, getYearChooser(), 0.0, 3404, 
3420, isWeekOfYearVisible(), 0.0, 3404, 
3421, propertyChange(java.beans.PropertyChangeEvent, java.util.Calendar), 1.0, 3404, 
3422, setBackground(java.awt.Color), 1.0, 3404, 
3423, setCalendar(java.util.Calendar), 1.0, 3404, 
3425, setEnabled(boolean), 1.0, 3404, 
3426, isEnabled(), 0.0, 3404, 
3427, setFont(java.awt.Font), 1.0, 3404, 
3428, setForeground(java.awt.Color), 1.0, 3404, 
3429, setLocale(java.util.Locale, java.util.Locale), 1.0, 3404, 
3430, setWeekOfYearVisible(boolean), 1.0, 3404, 
3431, isDecorationBackgroundVisible(), 0.0, 3404, 
3432, setDecorationBackgroundVisible(boolean), 1.0, 3404, 
3433, isDecorationBordersVisible(), 0.0, 3404, 
3434, setDecorationBordersVisible(boolean), 1.0, 3404, 
3435, getDecorationBackgroundColor(), 0.0, 3404, 
3436, setDecorationBackgroundColor(java.awt.Color), 1.0, 3404, 
3437, getSundayForeground(), 0.0, 3404, 
3438, getWeekdayForeground(), 0.0, 3404, 
3439, setSundayForeground(java.awt.Color), 1.0, 3404, 
3440, setWeekdayForeground(java.awt.Color), 1.0, 3404, 
3441, getDate(), 0.0, 3404, 
3442, setDate(java.util.Date, java.util.Date, int, int, int), 1.0, 3404, 
3444, getMaxSelectableDate(), 0.0, 3404, 
3445, getMinSelectableDate(), 0.0, 3404, 
3446, setMaxSelectableDate(java.util.Date), 1.0, 3404, 
3447, setMinSelectableDate(java.util.Date), 1.0, 3404, 
3448, getMaxDayCharacters(), 0.0, 3404, 
3449, setMaxDayCharacters(int), 1.0, 3404, 
3451, startupMapHook(java.awt.GridBagConstraints, java.awt.GridBagConstraints, javax.swing.JButton, javax.swing.JButton, javax.swing.JButton, javax.swing.Action, java.awt.Container, javax.swing.JButton), 0.0, 3450, 
3452, getTimePanel(java.awt.GridBagConstraints, java.lang.String), 0.0, 3450, 
3453, propertyChange(java.beans.PropertyChangeEvent), 1.0, 3450, 
3454, actionPerformed(java.awt.event.ActionEvent, Object[], freemind.modes.MindMapNode, java.lang.String, freemind.modes.common.plugins.ReminderHookBase, freemind.modes.common.plugins.ReminderHookBase, java.text.MessageFormat, int, java.util.Date, java.util.Iterator, freemind.extensions.PermanentNodeHook, java.util.List), 1.0, 3450, 
3455, addHook(freemind.modes.MindMapNode, java.util.List), 1.0, 3450, 
3456, disposeDialog(), 0.0, 3450, 
3457, getCalendarDate(int, java.util.Calendar, java.lang.Exception), 0.0, 3450, 
3462, numberOfOpenMapInformation(int), 1.0, 3450, 
3464, windowClosing(java.awt.event.WindowEvent), 1.0, 3463, 
3466, actionPerformed(java.awt.event.ActionEvent), 1.0, 3465, 
3468, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, java.text.DateFormat, java.lang.String, freemind.modes.MindMapNode), 1.0, 3467, 
3471, actionPerformed(java.awt.event.ActionEvent), 1.0, 3470, 
3474, actionPerformed(java.awt.event.ActionEvent), 1.0, 3473, 
3477, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, freemind.modes.MindMapNode, freemind.modes.common.plugins.ReminderHookBase), 1.0, 3476, 
3480, JTripleCalendar(java.awt.GridLayout), 0.0, 3479, 
3481, createInfoPanel(accessories.plugins.time.JTripleCalendar.JInfoPanel), 0.0, 3479, 
3482, main(String[], javax.swing.JFrame, accessories.plugins.time.JTripleCalendar), 1.0, 3479, 
3483, propertyChange(java.beans.PropertyChangeEvent, java.util.Calendar), 1.0, 3479, 
3484, getCalendar(), 0.0, 3479, 
3485, getDate(), 0.0, 3479, 
3486, getDayChooser(), 0.0, 3479, 
3487, setDate(java.util.Date), 1.0, 3479, 
3488, setCalendar(java.util.Calendar), 1.0, 3479, 
3489, getYearChooser(), 0.0, 3479, 
3491, JInfoPanel(javax.swing.JPanel), 0.0, 3490, 
3492, setDate(java.util.Calendar, int, int), 1.0, 3490, 
3494, init(), 0.0, 3493, 
3496, ReminderHook(), 0.0, 3495, 
3497, nodeRefresh(freemind.modes.MindMapNode), 1.0, 3495, 
3498, getMindMapController(), 0.0, 3495, 
3501, JSpinField(), 0.0, 3500, 
3503, adjustWidthToMaximumValue(int, int, javax.swing.JTextField), 0.0, 3500, 
3504, stateChanged(javax.swing.event.ChangeEvent, int, javax.swing.SpinnerNumberModel), 1.0, 3500, 
3506, setValue(int), 1.0, 3500, 
3507, getValue(), 0.0, 3500, 
3508, setMinimum(int), 1.0, 3500, 
3509, getMinimum(), 0.0, 3500, 
3510, setMaximum(int), 1.0, 3500, 
3511, setHorizontalAlignment(int), 1.0, 3500, 
3512, getMaximum(), 0.0, 3500, 
3513, setFont(java.awt.Font), 1.0, 3500, 
3514, setForeground(java.awt.Color), 1.0, 3500, 
3515, caretUpdate(javax.swing.event.CaretEvent, int, java.lang.Exception), 1.0, 3500, 
3516, actionPerformed(java.awt.event.ActionEvent), 1.0, 3500, 
3517, setEnabled(boolean), 1.0, 3500, 
3518, getSpinner(), 0.0, 3500, 
3519, main(String[], javax.swing.JFrame), 1.0, 3500, 
3520, focusGained(java.awt.event.FocusEvent), 1.0, 3500, 
3521, focusLost(java.awt.event.FocusEvent), 1.0, 3500, 
3523, getPreferredSize(java.awt.Dimension), 0.0, 3522, 
3526, FreeMindToolBar(), 0.0, 3525, 
3527, FreeMindToolBar(int), 1.0, 3525, 
3528, FreeMindToolBar(java.lang.String), 1.0, 3525, 
3530, add(javax.swing.Action, java.lang.Object, javax.swing.JButton), 1.0, 3525, 
3532, NodeDragListener(freemind.controller.Controller), 1.0, 3531, 
3533, getCursorByAction(int), 1.0, 3531, 
3534, dragGestureRecognized(java.lang.String, java.awt.Cursor, java.awt.dnd.DragGestureEvent, freemind.modes.MindMapNode, java.awt.datatransfer.Transferable), 1.0, 3531, 
3536, dragDropEnd(java.awt.dnd.DragSourceDropEvent), 1.0, 3535, 
3537, dragEnter(java.awt.dnd.DragSourceDragEvent), 1.0, 3535, 
3538, dragExit(java.awt.dnd.DragSourceEvent), 1.0, 3535, 
3539, dragOver(java.awt.dnd.DragSourceDragEvent), 1.0, 3535, 
3540, dropActionChanged(java.awt.dnd.DragSourceDragEvent), 1.0, 3535, 
3543, NodeMotionListener(freemind.controller.Controller), 1.0, 3542, 
3544, register(freemind.controller.NodeMotionListener.NodeMotionAdapter), 1.0, 3542, 
3545, deregister(), 0.0, 3542, 
3546, mouseClicked(java.awt.event.MouseEvent), 1.0, 3542, 
3547, mouseDragged(java.awt.event.MouseEvent), 1.0, 3542, 
3548, mouseEntered(java.awt.event.MouseEvent), 1.0, 3542, 
3549, mouseExited(java.awt.event.MouseEvent), 1.0, 3542, 
3550, mouseMoved(java.awt.event.MouseEvent), 1.0, 3542, 
3551, mousePressed(java.awt.event.MouseEvent), 1.0, 3542, 
3552, mouseReleased(java.awt.event.MouseEvent), 1.0, 3542, 
3555, firePopupMenuWillBecomeVisible(java.util.Iterator, javax.swing.event.MenuListener), 0.0, 3554, 
3556, addMenuListener(javax.swing.event.MenuListener), 1.0, 3554, 
3557, removeMenuListener(javax.swing.event.MenuListener), 1.0, 3554, 
3558, firePopupMenuCanceled(java.util.Iterator, javax.swing.event.MenuListener), 0.0, 3554, 
3559, firePopupMenuWillBecomeInvisible(java.util.Iterator, javax.swing.event.MenuListener), 0.0, 3554, 
3562, ColorSwatch(), 0.0, 3561, 
3563, ColorSwatch(java.awt.Color), 1.0, 3561, 
3564, getIconWidth(), 0.0, 3561, 
3565, getIconHeight(), 0.0, 3561, 
3566, getColor(), 0.0, 3561, 
3569, BlindIcon(int), 1.0, 3568, 
3570, getIconHeight(), 0.0, 3568, 
3571, getIconWidth(), 0.0, 3568, 
3574, StructuredMenuHolder(java.util.Vector), 0.0, 3573, 
3578, adjustTooltips(freemind.controller.StructuredMenuItemHolder, java.lang.String, java.lang.String), 1.0, 3573, 
3579, addCategory(java.lang.String, freemind.controller.StructuredMenuHolder.MapTokenPair, java.util.StringTokenizer), 1.0, 3573, 
3580, addSeparator(java.lang.String, java.lang.String, java.util.StringTokenizer, freemind.controller.StructuredMenuHolder.MapTokenPair), 1.0, 3573, 
3586, adjustMenuItem(javax.swing.JMenuItem), 1.0, 3573, 
3588, toString(), 0.0, 3573, 
3589, print(java.lang.String, int), 1.0, 3573, 
3590, lastItemIsASeparator(javax.swing.JMenu), 1.0, 3573, 
3591, lastItemIsASeparator(javax.swing.JPopupMenu), 1.0, 3573, 
3594, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 3593, 
3595, addSeparator(), 0.0, 3593, 
3596, addCategory(java.lang.String), 1.0, 3593, 
3601, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 3600, 
3602, addSeparator(), 0.0, 3600, 
3603, addCategory(java.lang.String), 1.0, 3600, 
3606, addMenuItem(freemind.controller.StructuredMenuItemHolder, javax.swing.JMenuItem, freemind.controller.StructuredMenuHolder.MenuEventSupplier), 1.0, 3605, 
3607, addSeparator(), 0.0, 3605, 
3608, addCategory(java.lang.String), 1.0, 3605, 
3611, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 3610, 
3612, addSeparator(), 0.0, 3610, 
3613, addCategory(java.lang.String), 1.0, 3610, 
3616, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 3615, 
3617, addSeparator(), 0.0, 3615, 
3618, addCategory(java.lang.String), 1.0, 3615, 
3620, MenuItemAdder(javax.swing.JMenu), 1.0, 3619, 
3621, addMenuItem(freemind.controller.StructuredMenuItemHolder, javax.swing.JMenuItem), 1.0, 3619, 
3622, addSeparator(), 0.0, 3619, 
3623, addCategory(java.lang.String), 1.0, 3619, 
3625, createAdder(javax.swing.JMenu), 1.0, 3624, 
3627, createAdder(javax.swing.JMenu), 1.0, 3626, 
3630, SeparatorHolder(), 0.0, 3629, 
3632, createAdder(javax.swing.JMenu), 1.0, 3631, 
3635, addMenuListener(javax.swing.event.MenuListener), 1.0, 3634, 
3636, removeMenuListener(javax.swing.event.MenuListener), 1.0, 3634, 
3638, MapMouseWheelListener(freemind.controller.Controller), 1.0, 3637, 
3639, mouseWheelMoved(java.awt.event.MouseWheelEvent), 1.0, 3637, 
3640, register(java.awt.event.MouseWheelListener), 1.0, 3637, 
3641, deregister(), 0.0, 3637, 
3643, NodeMouseMotionListener(freemind.controller.Controller), 1.0, 3642, 
3644, register(freemind.controller.NodeMouseMotionListener.NodeMouseMotionObserver), 1.0, 3642, 
3645, deregister(), 0.0, 3642, 
3646, mouseClicked(java.awt.event.MouseEvent), 1.0, 3642, 
3647, mouseDragged(java.awt.event.MouseEvent), 1.0, 3642, 
3648, mouseEntered(java.awt.event.MouseEvent), 1.0, 3642, 
3649, mouseExited(java.awt.event.MouseEvent), 1.0, 3642, 
3650, mouseMoved(java.awt.event.MouseEvent), 1.0, 3642, 
3651, mousePressed(java.awt.event.MouseEvent), 1.0, 3642, 
3652, mouseReleased(java.awt.event.MouseEvent), 1.0, 3642, 
3653, updateSelectionMethod(), 0.0, 3642, 
3655, StructuredMenuListener(), 0.0, 3654, 
3656, menuSelected(boolean, boolean, javax.swing.event.MenuEvent, java.util.Iterator, freemind.controller.StructuredMenuItemHolder, javax.swing.Action, javax.swing.JMenuItem, javax.swing.JCheckBoxMenuItem, java.lang.Exception), 1.0, 3654, 
3657, menuDeselected(javax.swing.event.MenuEvent), 1.0, 3654, 
3658, menuCanceled(javax.swing.event.MenuEvent), 1.0, 3654, 
3659, addItem(freemind.controller.StructuredMenuItemHolder), 1.0, 3654, 
3661, updateSelectionMethod(), 0.0, 3660, 
3663, NodeKeyListener(freemind.controller.Controller), 1.0, 3662, 
3664, register(java.awt.event.KeyListener), 1.0, 3662, 
3665, deregister(), 0.0, 3662, 
3666, keyPressed(java.awt.event.KeyEvent), 1.0, 3662, 
3667, keyReleased(java.awt.event.KeyEvent), 1.0, 3662, 
3668, keyTyped(java.awt.event.KeyEvent), 1.0, 3662, 
3670, NodeDropListener(freemind.controller.Controller), 1.0, 3669, 
3671, register(java.awt.dnd.DropTargetListener), 1.0, 3669, 
3672, deregister(), 0.0, 3669, 
3673, dragEnter(java.awt.dnd.DropTargetDragEvent), 1.0, 3669, 
3674, dragExit(java.awt.dnd.DropTargetEvent), 1.0, 3669, 
3675, dragOver(java.awt.dnd.DropTargetDragEvent), 1.0, 3669, 
3676, drop(java.awt.dnd.DropTargetDropEvent), 1.0, 3669, 
3677, dropActionChanged(java.awt.dnd.DropTargetDragEvent), 1.0, 3669, 
3679, MapMouseMotionListener(freemind.controller.Controller), 1.0, 3678, 
3680, register(freemind.controller.MapMouseMotionListener.MapMouseMotionReceiver), 1.0, 3678, 
3681, deregister(), 0.0, 3678, 
3682, handlePopup(javax.swing.JPopupMenu, java.awt.event.MouseEvent, java.lang.Object), 1.0, 3678, 
3683, mouseMoved(java.awt.event.MouseEvent), 1.0, 3678, 
3684, mouseDragged(java.awt.event.MouseEvent), 1.0, 3678, 
3685, mouseClicked(java.awt.event.MouseEvent), 1.0, 3678, 
3686, mouseEntered(java.awt.event.MouseEvent), 1.0, 3678, 
3687, mouseExited(java.awt.event.MouseEvent), 1.0, 3678, 
3688, mousePressed(java.awt.event.MouseEvent), 1.0, 3678, 
3689, mouseReleased(java.awt.event.MouseEvent), 1.0, 3678, 
3691, mouseDragged(java.awt.event.MouseEvent), 1.0, 3690, 
3692, mousePressed(java.awt.event.MouseEvent), 1.0, 3690, 
3693, mouseReleased(java.awt.event.MouseEvent), 1.0, 3690, 
3695, MenuBar(freemind.controller.Controller), 1.0, 3694, 
3696, updateMenus(freemind.modes.ModeController), 1.0, 3694, 
3697, updateModeMenu(javax.swing.JRadioButtonMenuItem, javax.swing.JRadioButtonMenuItem, java.lang.String, java.awt.event.ActionListener, javax.swing.ButtonGroup, java.lang.String, java.util.List, java.util.ListIterator), 0.0, 3694, 
3698, addAdditionalPopupActions(javax.swing.JMenuItem), 0.0, 3694, 
3700, updateFileMenu(javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem), 0.0, 3694, 
3701, updateLastOpenedList(boolean, java.lang.String, java.util.ListIterator, javax.swing.JMenuItem, freemind.controller.LastOpenedList), 0.0, 3694, 
3702, updateEditMenu(javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem), 0.0, 3694, 
3703, updateViewMenu(javax.swing.ButtonGroup, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenu, javax.swing.JMenuItem, javax.swing.JRadioButtonMenuItem, javax.swing.JRadioButtonMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JRadioButtonMenuItem), 0.0, 3694, 
3705, getMapsPopupMenu(), 0.0, 3694, 
3707, getMenuHolder(), 0.0, 3694, 
3710, actionPerformed(java.awt.event.ActionEvent), 1.0, 3709, 
3713, run(), 0.0, 3712, 
3716, actionPerformed(java.awt.event.ActionEvent, java.lang.String, java.lang.Exception), 1.0, 3715, 
3719, actionPerformed(java.awt.event.ActionEvent), 1.0, 3718, 
3722, run(), 0.0, 3721, 
3726, mapOpened(freemind.view.MapModule, java.lang.String), 1.0, 3724, 
3727, mapClosed(freemind.view.MapModule), 1.0, 3724, 
3728, save(java.lang.String, java.util.ListIterator), 0.0, 3724, 
3729, load(java.lang.String, java.util.StringTokenizer), 1.0, 3724, 
3730, open(boolean, java.lang.String, java.util.StringTokenizer, java.lang.String, java.lang.String), 1.0, 3724, 
3731, listIterator(), 0.0, 3724, 
3735, Controller(freemind.main.FreeMindMain, java.awt.KeyboardFocusManager), 1.0, 3734, 
3736, getProperty(java.lang.String), 1.0, 3734, 
3740, getFrame(), 0.0, 3734, 
3741, getJFrame(freemind.main.FreeMindMain), 0.0, 3734, 
3742, getResource(java.lang.String), 1.0, 3734, 
3743, getResourceString(java.lang.String), 1.0, 3734, 
3744, getModeController(), 0.0, 3734, 
3745, getModel(), 0.0, 3734, 
3746, getView(), 0.0, 3734, 
3747, getModes(), 0.0, 3734, 
3748, getMode(), 0.0, 3734, 
3749, getZooms(), 0.0, 3734, 
3750, getMapModuleManager(), 0.0, 3734, 
3751, getLastOpenedList(), 0.0, 3734, 
3752, getMapModule(), 0.0, 3734, 
3753, getToolBar(), 0.0, 3734, 
3754, getFontThroughMap(java.awt.Font), 1.0, 3734, 
3755, setAntialiasEdges(boolean), 1.0, 3734, 
3756, setAntialiasAll(boolean), 1.0, 3734, 
3757, getAntialiasEdges(), 0.0, 3734, 
3758, getAntialiasAll(), 0.0, 3734, 
3759, getDefaultFont(java.lang.String, int, int), 0.0, 3734, 
3760, getDefaultFontFamilyName(java.lang.String), 0.0, 3734, 
3761, getDefaultFontStyle(int), 0.0, 3734, 
3762, getDefaultFontSize(int), 0.0, 3734, 
3763, getCommonJColorChooser(), 0.0, 3734, 
3769, numberOfOpenMapInformation(int), 1.0, 3734, 
3770, createNewMode(java.lang.String, freemind.modes.Mode, Object[], java.text.MessageFormat), 1.0, 3734, 
3771, setMenubarVisible(boolean), 1.0, 3734, 
3772, setToolbarVisible(boolean), 1.0, 3734, 
3773, getToolbar(), 0.0, 3734, 
3774, setLeftToolbarVisible(boolean, java.awt.Component), 1.0, 3734, 
3775, getNodeKeyListener(), 0.0, 3734, 
3776, getNodeMouseMotionListener(), 0.0, 3734, 
3777, getNodeMotionListener(), 0.0, 3734, 
3778, getMapMouseMotionListener(), 0.0, 3734, 
3779, getMapMouseWheelListener(), 0.0, 3734, 
3780, getNodeDragListener(), 0.0, 3734, 
3781, getNodeDropListener(), 0.0, 3734, 
3782, setFrame(freemind.main.FreeMindMain), 1.0, 3734, 
3783, moveToRoot(), 0.0, 3734, 
3784, close(boolean), 1.0, 3734, 
3785, informationMessage(java.lang.Object), 1.0, 3734, 
3787, errorMessage(java.lang.String, java.lang.Object), 1.0, 3734, 
3789, obtainFocusForSelected(), 0.0, 3734, 
3790, setZoom(float, java.lang.String, Object[]), 1.0, 3734, 
3791, setTitle(freemind.modes.MindMap, java.lang.String, java.lang.String, java.io.File, Object[], freemind.view.MapModule, java.util.Iterator, java.text.MessageFormat, freemind.controller.MapModuleManager.MapTitleChangeListener), 0.0, 3734, 
3792, registerMapTitleChangeListener(freemind.controller.MapModuleManager.MapTitleChangeListener), 1.0, 3734, 
3793, deregisterMapTitleChangeListener(freemind.controller.MapModuleManager.MapTitleChangeListener), 1.0, 3734, 
3794, setAllActions(boolean), 1.0, 3734, 
3795, quit(java.lang.String, int, java.lang.String, boolean), 0.0, 3734, 
3796, acquirePrinterJobAndPageFormat(java.lang.SecurityException), 0.0, 3734, 
3797, getPropertyChangeListeners(), 0.0, 3734, 
3798, toggleSelectionAsRectangle(), 0.0, 3734, 
3799, isSelectionAsRectangle(), 0.0, 3734, 
3800, getMap(), 0.0, 3734, 
3801, addPropertyChangeListener(freemind.preferences.FreemindPropertyListener), 1.0, 3734, 
3802, addPropertyChangeListenerAndPropagate(freemind.preferences.FreemindPropertyListener, java.util.Iterator, java.lang.String, java.util.Properties), 1.0, 3734, 
3803, removePropertyChangeListener(freemind.preferences.FreemindPropertyListener), 1.0, 3734, 
3804, getFilterController(), 0.0, 3734, 
3805, getPageFormat(), 0.0, 3734, 
3807, setEdgesRenderingHint(java.awt.Graphics2D, java.lang.Object), 1.0, 3734, 
3808, setTextRenderingHint(java.awt.Graphics2D), 1.0, 3734, 
3810, propertyChange(java.beans.PropertyChangeEvent, java.awt.Component, java.lang.String), 1.0, 3809, 
3813, ColorTracker(javax.swing.JColorChooser), 1.0, 3812, 
3814, actionPerformed(java.awt.event.ActionEvent), 1.0, 3812, 
3815, getColor(), 0.0, 3812, 
3817, windowClosing(java.awt.event.WindowEvent, java.awt.Window), 1.0, 3816, 
3820, componentHidden(java.awt.event.ComponentEvent, java.awt.Window), 1.0, 3819, 
3823, QuitAction(freemind.controller.Controller), 1.0, 3822, 
3824, actionPerformed(java.awt.event.ActionEvent), 1.0, 3822, 
3826, CloseAction(freemind.controller.Controller), 1.0, 3825, 
3827, actionPerformed(java.awt.event.ActionEvent), 1.0, 3825, 
3830, actionPerformed(java.awt.event.ActionEvent, java.lang.Exception), 1.0, 3828, 
3832, PrintPreviewAction(freemind.controller.Controller), 1.0, 3831, 
3833, actionPerformed(java.awt.event.ActionEvent, freemind.controller.printpreview.PreviewDialog), 1.0, 3831, 
3835, PageAction(freemind.controller.Controller), 1.0, 3834, 
3836, actionPerformed(java.awt.GridBagConstraints, java.awt.event.ActionEvent, freemind.main.Tools.IntHolder, java.awt.GridBagLayout, javax.swing.JLabel, javax.swing.JPanel, javax.swing.JTextField, javax.swing.JDialog, javax.swing.JButton, javax.swing.JCheckBox), 1.0, 3834, 
3838, actionPerformed(java.awt.event.ActionEvent), 1.0, 3837, 
3841, itemStateChanged(java.awt.event.ItemEvent), 1.0, 3840, 
3844, convertLocalLink(java.lang.String), 1.0, 3843, 
3846, convertLocalLink(java.lang.String, java.lang.String), 1.0, 3845, 
3849, DocumentationAction(freemind.controller.Controller), 1.0, 3848, 
3850, actionPerformed(java.lang.String, java.net.URL, java.awt.event.ActionEvent, java.net.URL, java.net.MalformedURLException, java.security.AccessControlException), 1.0, 3848, 
3852, run(java.lang.Exception), 0.0, 3851, 
3855, KeyDocumentationAction(freemind.controller.Controller), 1.0, 3854, 
3856, actionPerformed(java.lang.String, java.net.URL, java.awt.event.ActionEvent, java.lang.Exception), 1.0, 3854, 
3858, AboutAction(freemind.controller.Controller), 1.0, 3857, 
3859, actionPerformed(java.awt.event.ActionEvent), 1.0, 3857, 
3861, LicenseAction(freemind.controller.Controller), 1.0, 3860, 
3862, actionPerformed(java.awt.event.ActionEvent), 1.0, 3860, 
3864, NavigationPreviousMapAction(freemind.controller.Controller), 1.0, 3863, 
3865, actionPerformed(java.awt.event.ActionEvent), 1.0, 3863, 
3867, ShowAttributeDialogAction(freemind.controller.Controller), 1.0, 3866, 
3868, getAttributeDialog(), 0.0, 3866, 
3869, actionPerformed(java.awt.event.ActionEvent), 1.0, 3866, 
3871, ShowFilterToolbarAction(freemind.controller.Controller), 1.0, 3870, 
3872, actionPerformed(java.awt.event.ActionEvent, javax.swing.JToggleButton), 1.0, 3870, 
3874, NavigationNextMapAction(freemind.controller.Controller), 1.0, 3873, 
3875, actionPerformed(java.awt.event.ActionEvent), 1.0, 3873, 
3877, MoveToRootAction(freemind.controller.Controller), 1.0, 3876, 
3878, actionPerformed(java.awt.event.ActionEvent), 1.0, 3876, 
3880, ToggleMenubarAction(freemind.controller.Controller), 1.0, 3879, 
3881, actionPerformed(java.awt.event.ActionEvent), 1.0, 3879, 
3884, ToggleToolbarAction(freemind.controller.Controller), 1.0, 3883, 
3885, actionPerformed(java.awt.event.ActionEvent), 1.0, 3883, 
3888, ToggleLeftToolbarAction(freemind.controller.Controller), 1.0, 3887, 
3889, actionPerformed(java.awt.event.ActionEvent), 1.0, 3887, 
3892, ZoomInAction(freemind.controller.Controller), 1.0, 3891, 
3893, actionPerformed(java.awt.event.ActionEvent), 1.0, 3891, 
3895, ZoomOutAction(freemind.controller.Controller), 1.0, 3894, 
3896, actionPerformed(java.awt.event.ActionEvent), 1.0, 3894, 
3898, ShowSelectionAsRectangleAction(freemind.controller.Controller), 1.0, 3897, 
3899, actionPerformed(java.awt.event.ActionEvent), 1.0, 3897, 
3902, ShowAllAttributesAction(), 0.0, 3901, 
3903, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 3901, 
3904, setAttributeViewType(freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 3901, 
3906, HideAllAttributesAction(), 0.0, 3905, 
3907, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 3905, 
3908, setAttributeViewType(freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 3905, 
3910, ShowSelectedAttributesAction(), 0.0, 3909, 
3911, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 3909, 
3912, setAttributeViewType(freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 3909, 
3914, PropertyAction(freemind.controller.Controller), 1.0, 3913, 
3915, actionPerformed(javax.swing.JDialog, java.awt.event.ActionEvent, freemind.preferences.layout.OptionPanel, javax.swing.Action), 1.0, 3913, 
3917, writeProperties(boolean, java.util.Properties, java.lang.String, java.lang.String, java.util.Iterator, java.util.Vector), 1.0, 3916, 
3920, windowClosing(java.awt.event.WindowEvent), 1.0, 3919, 
3922, actionPerformed(java.awt.event.ActionEvent), 1.0, 3921, 
3924, getColor(), 0.0, 3923, 
3927, OptionAntialiasAction(freemind.controller.Controller), 1.0, 3926, 
3928, actionPerformed(java.awt.event.ActionEvent, java.lang.String), 1.0, 3926, 
3929, changeAntialias(java.lang.String), 1.0, 3926, 
3932, OptionHTMLExportFoldingAction(freemind.controller.Controller), 1.0, 3931, 
3933, actionPerformed(java.awt.event.ActionEvent), 1.0, 3931, 
3935, OptionSelectionMechanismAction(freemind.controller.Controller), 1.0, 3934, 
3936, actionPerformed(java.awt.event.ActionEvent, java.lang.String), 1.0, 3934, 
3937, changeSelection(java.lang.String, java.lang.String), 1.0, 3934, 
3941, actionPerformed(java.awt.event.ActionEvent, java.net.MalformedURLException), 1.0, 3939, 
3944, getTransferData(byte[], java.awt.datatransfer.DataFlavor), 1.0, 3942, 
3945, getTransferDataFlavors(), 0.0, 3942, 
3946, isDataFlavorSupported(java.awt.datatransfer.DataFlavor), 1.0, 3942, 
3948, setDropAction(java.lang.String), 1.0, 3942, 
3950, MainToolBar(freemind.controller.Controller, javax.swing.JToggleButton), 1.0, 3949, 
3951, setZoomByItem(java.lang.Object, float), 1.0, 3949, 
3952, getZoomValue(java.lang.Object, java.lang.String, java.lang.String, float), 1.0, 3949, 
3953, zoomOut(float), 0.0, 3949, 
3954, getCurrentZoomIndex(int, int, float, int), 0.0, 3949, 
3955, zoomIn(float), 0.0, 3949, 
3956, getItemForZoom(float), 1.0, 3949, 
3957, setZoomComboBox(float, int, java.lang.String), 1.0, 3949, 
3958, setAllActions(boolean), 1.0, 3949, 
3960, itemStateChanged(java.awt.event.ItemEvent), 1.0, 3959, 
3963, addListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 3962, 
3964, removeListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 3962, 
3965, MapModuleManager(freemind.controller.Controller), 1.0, 3962, 
3966, getMapModules(java.util.Iterator, java.util.HashMap, freemind.view.MapModule), 0.0, 3962, 
3967, getMapModuleVector(), 0.0, 3962, 
3968, getMapKeys(java.util.Iterator, freemind.view.MapModule, java.util.LinkedList), 0.0, 3962, 
3969, getMapModule(), 0.0, 3962, 
3971, updateMapModuleName(), 0.0, 3962, 
3972, nextMapModule(int, int), 0.0, 3962, 
3973, previousMapModule(int, int), 0.0, 3962, 
3974, tryToChangeToMapModule(java.lang.String), 1.0, 3962, 
3975, checkIfFileIsAlreadyOpened(java.net.URL, java.util.Iterator, java.net.URL, freemind.view.MapModule), 1.0, 3962, 
3977, changeToMapModule(freemind.view.MapModule, freemind.view.MapModule, java.lang.String, java.util.Iterator), 1.0, 3962, 
3978, changeToMapModule(freemind.view.MapModule), 1.0, 3962, 
3979, changeToMapOfMode(freemind.modes.Mode, java.util.Iterator, freemind.view.MapModule), 1.0, 3962, 
3982, close(int, boolean, freemind.view.MapModule, boolean), 1.0, 3962, 
3988, numberOfOpenMapInformation(int), 1.0, 3983, 
3990, addListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 3989, 
3991, removeListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 3989, 
3995, numberOfOpenMapInformation(int, java.util.Iterator, freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 3989, 
4001, StructuredMenuItemHolder(), 0.0, 4000, 
4002, getAction(), 0.0, 4000, 
4003, setAction(javax.swing.Action, freemind.controller.MenuItemEnabledListener), 1.0, 4000, 
4004, getEnabledListener(), 0.0, 4000, 
4005, setEnabledListener(freemind.controller.MenuItemEnabledListener), 1.0, 4000, 
4006, getMenuItem(), 0.0, 4000, 
4007, setMenuItem(javax.swing.JMenuItem), 1.0, 4000, 
4008, getSelectionListener(), 0.0, 4000, 
4009, setSelectedListener(freemind.controller.MenuItemSelectedListener), 1.0, 4000, 
4014, getDescription(), 0.0, 4013, 
4015, getLabel(), 0.0, 4013, 
4017, setEnabled(boolean), 1.0, 4013, 
4020, getResult(), 0.0, 4018, 
4021, show(java.lang.String, javax.swing.ImageIcon, java.lang.String, javax.swing.AbstractAction, javax.swing.JButton, javax.swing.AbstractAction, javax.swing.JButton), 0.0, 4018, 
4022, close(int), 1.0, 4018, 
4024, getText(java.lang.String), 1.0, 4023, 
4026, getProperty(), 0.0, 4025, 
4027, setProperty(java.lang.String), 1.0, 4025, 
4030, getProperty(), 0.0, 4028, 
4031, setProperty(java.lang.String), 1.0, 4028, 
4033, actionPerformed(java.awt.event.ActionEvent), 1.0, 4032, 
4035, actionPerformed(java.awt.event.ActionEvent), 1.0, 4034, 
4037, windowClosing(java.awt.event.WindowEvent), 1.0, 4036, 
4040, setState(String[], int), 1.0, 4038, 
4042, NamedObject(), 0.0, 4041, 
4044, literal(freemind.common.NamedObject, java.lang.String), 1.0, 4041, 
4045, equals(java.lang.Object, freemind.common.NamedObject), 1.0, 4041, 
4046, toString(), 0.0, 4041, 
4047, getObject(), 0.0, 4041, 
4050, getDescription(), 0.0, 4048, 
4051, getLabel(), 0.0, 4048, 
4053, setValue(java.lang.String, int, java.lang.String), 1.0, 4048, 
4054, getValue(), 0.0, 4048, 
4055, setEnabled(boolean), 1.0, 4048, 
4057, actionPerformed(java.awt.event.ActionEvent), 1.0, 4056, 
4060, SeparatorProperty(java.lang.String), 1.0, 4059, 
4061, getDescription(), 0.0, 4059, 
4062, getLabel(), 0.0, 4059, 
4064, setEnabled(boolean), 1.0, 4059, 
4066, NextLineProperty(), 0.0, 4065, 
4067, getDescription(), 0.0, 4065, 
4068, getLabel(), 0.0, 4065, 
4070, setEnabled(boolean), 1.0, 4065, 
4072, getLabel(), 0.0, 4071, 
4073, setValue(java.lang.String), 1.0, 4071, 
4074, getValue(), 0.0, 4071, 
4075, addPropertyChangeListener(java.beans.PropertyChangeListener), 1.0, 4071, 
4076, removePropertyChangeListener(java.beans.PropertyChangeListener), 1.0, 4071, 
4077, firePropertyChangeEvent(java.util.Iterator, java.beans.PropertyChangeEvent, java.beans.PropertyChangeListener), 0.0, 4071, 
4083, getState(), 0.0, 4081, 
4084, getDescription(), 0.0, 4081, 
4085, getLabel(), 0.0, 4081, 
4086, setValue(java.lang.String), 1.0, 4081, 
4087, transformString(java.lang.String), 1.0, 4081, 
4088, getValue(), 0.0, 4081, 
4090, setEnabled(boolean), 1.0, 4081, 
4091, setState(Icon[], int), 1.0, 4081, 
4093, actionPerformed(java.awt.event.ActionEvent), 1.0, 4092, 
4097, getDescription(), 0.0, 4095, 
4098, getLabel(), 0.0, 4095, 
4099, setValue(int, int, java.lang.String, int, java.lang.NumberFormatException), 1.0, 4095, 
4100, getValue(), 0.0, 4095, 
4102, setEnabled(boolean), 1.0, 4095, 
4104, stateChanged(javax.swing.event.ChangeEvent), 1.0, 4103, 
4108, getDefaultEncoding(), 0.0, 4106, 
4109, getEncoding(), 0.0, 4106, 
4110, init(int, java.lang.String, int, byte[]), 0.0, 4106, 
4111, close(), 0.0, 4106, 
4114, XmlBindingTools(), 0.0, 4113, 
4115, getInstance(org.jibx.runtime.JiBXException), 0.0, 4113, 
4116, createMarshaller(org.jibx.runtime.JiBXException), 0.0, 4113, 
4117, createUnmarshaller(org.jibx.runtime.JiBXException), 0.0, 4113, 
4121, marshall(freemind.controller.actions.generated.instance.XmlAction, org.jibx.runtime.IMarshallingContext, java.lang.String, java.io.StringWriter, org.jibx.runtime.JiBXException), 1.0, 4113, 
4122, unMarshall(java.lang.String), 1.0, 4113, 
4123, unMarshall(java.io.Reader, org.jibx.runtime.IUnmarshallingContext, freemind.controller.actions.generated.instance.XmlAction, org.jibx.runtime.JiBXException), 1.0, 4113, 
4126, getDescription(), 0.0, 4124, 
4127, getLabel(), 0.0, 4124, 
4128, setValue(freemind.modes.MindIcon, java.lang.String, java.util.Iterator), 1.0, 4124, 
4129, setIcon(freemind.modes.MindIcon), 1.0, 4124, 
4130, getValue(), 0.0, 4124, 
4132, actionPerformed(java.util.Vector, java.awt.event.ActionEvent, java.util.Iterator, java.util.Vector, int, freemind.modes.common.dialogs.IconSelectionPopupDialog, freemind.modes.MindIcon), 1.0, 4124, 
4133, setEnabled(boolean), 1.0, 4124, 
4138, fillPossibleValues(String[]), 1.0, 4134, 
4139, fillPossibleValues(java.util.List), 1.0, 4134, 
4141, getDescription(), 0.0, 4134, 
4142, getLabel(), 0.0, 4134, 
4143, setValue(java.lang.String), 1.0, 4134, 
4144, getValue(), 0.0, 4134, 
4146, setEnabled(boolean), 1.0, 4134, 
4148, actionPerformed(java.awt.event.ActionEvent), 1.0, 4147, 
4152, getDescription(), 0.0, 4150, 
4153, getLabel(), 0.0, 4150, 
4154, setValue(java.lang.String), 1.0, 4150, 
4155, getValue(), 0.0, 4150, 
4157, setEnabled(boolean), 1.0, 4150, 
4159, itemStateChanged(java.awt.event.ItemEvent), 1.0, 4158, 
4163, getDescription(), 0.0, 4161, 
4164, getLabel(), 0.0, 4161, 
4165, setValue(java.lang.String), 1.0, 4161, 
4166, getValue(), 0.0, 4161, 
4168, actionPerformed(java.awt.event.ActionEvent, java.awt.Color), 1.0, 4161, 
4169, setColorValue(java.awt.Color), 1.0, 4161, 
4170, getColorValue(), 0.0, 4161, 
4171, setEnabled(boolean), 1.0, 4161, 
4173, actionPerformed(java.awt.event.ActionEvent), 1.0, 4172, 
4176, mousePressed(java.awt.event.MouseEvent), 1.0, 4175, 
4177, mouseReleased(java.awt.event.MouseEvent), 1.0, 4175, 
4180, getDescription(), 0.0, 4178, 
4181, getLabel(), 0.0, 4178, 
4182, setValue(java.lang.String), 1.0, 4178, 
4183, getValue(), 0.0, 4178, 
4185, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.util.Iterator, freemind.common.ScriptEditorProperty.ScriptEditorStarter, freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin), 1.0, 4178, 
4186, setScriptValue(java.lang.String), 1.0, 4178, 
4187, setEnabled(boolean), 1.0, 4178, 
4189, startEditor(java.lang.String), 1.0, 4188, 
4192, getDescription(), 0.0, 4190, 
4193, getLabel(), 0.0, 4190, 
4194, setValue(java.lang.String), 1.0, 4190, 
4195, getValue(), 0.0, 4190, 
4197, setEnabled(boolean), 1.0, 4190, 
4199, keyReleased(java.awt.event.KeyEvent), 1.0, 4198, 
4202, CommonMouseMotionManager(freemind.modes.ModeController), 1.0, 4201, 
4203, mouseDragged(java.awt.event.MouseEvent, freemind.view.mindmapview.MapView, boolean, java.awt.Rectangle), 1.0, 4201, 
4204, mousePressed(java.awt.event.MouseEvent), 1.0, 4201, 
4205, mouseReleased(java.awt.event.MouseEvent), 1.0, 4201, 
4207, updateSelectionMethod(), 0.0, 4206, 
4208, CommonNodeMouseMotionListener(freemind.modes.ModeController), 1.0, 4206, 
4209, mouseMoved(freemind.view.mindmapview.MainView, boolean, java.awt.event.MouseEvent), 1.0, 4206, 
4210, mouseDragged(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView), 1.0, 4206, 
4211, mouseClicked(java.awt.event.MouseEvent), 1.0, 4206, 
4212, mouseEntered(java.awt.event.MouseEvent), 1.0, 4206, 
4213, mousePressed(java.awt.event.MouseEvent), 1.0, 4206, 
4214, mouseExited(java.awt.event.MouseEvent), 1.0, 4206, 
4215, mouseReleased(java.awt.event.MouseEvent), 1.0, 4206, 
4216, getControlRegion(int, java.awt.geom.Point2D), 1.0, 4206, 
4217, createTimer(java.awt.event.MouseEvent), 1.0, 4206, 
4218, stopTimerForDelayedSelection(), 0.0, 4206, 
4221, run(), 0.0, 4219, 
4223, run(), 0.0, 4222, 
4226, MindMapMouseWheelEventHandler(freemind.modes.ControllerAdapter), 1.0, 4225, 
4227, mouseWheelMoved(float, float, boolean, java.awt.event.MouseWheelEvent, freemind.modes.ControllerAdapter, java.util.Set, java.util.Iterator, freemind.view.mindmapview.MapView, freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler, float), 1.0, 4225, 
4234, flush(java.lang.String), 0.0, 4232, 
4236, HtmlTools(), 0.0, 4235, 
4237, getInstance(), 0.0, 4235, 
4238, toXhtml(java.lang.String, java.io.StringReader, java.io.StringWriter, java.lang.String, javax.swing.text.BadLocationException), 1.0, 4235, 
4239, toHtml(java.lang.String), 1.0, 4235, 
4244, isHtmlNode(java.lang.String, int, char), 1.0, 4235, 
4245, unicodeToHTMLUnicodeEntity(int, char, java.lang.String, int, java.lang.StringBuffer), 1.0, 4235, 
4246, unescapeHTMLUnicodeEntity(char, char, boolean, java.lang.String, int, java.lang.StringBuffer, java.lang.StringBuffer, java.lang.NumberFormatException), 1.0, 4235, 
4247, removeHtmlTagsFromString(java.lang.String), 1.0, 4235, 
4248, removeAllTagsFromString(java.lang.String), 1.0, 4235, 
4249, htmlToPlain(java.lang.String), 1.0, 4235, 
4251, plainToHTML(char, java.lang.String, java.lang.String, int, java.lang.StringBuffer, int), 1.0, 4235, 
4252, toXMLUnescapedText(java.lang.String), 1.0, 4235, 
4253, toXMLEscapedTextExpandingWhitespace(char, java.lang.String, int, java.lang.StringBuffer, int), 1.0, 4235, 
4254, toXMLEscapedText(java.lang.String), 1.0, 4235, 
4255, isWellformedXml(java.lang.String, javax.xml.parsers.SAXParserFactory, java.lang.Exception), 1.0, 4235, 
4256, replaceIllegalXmlCharacters(java.lang.String), 1.0, 4235, 
4257, isXMLValidCharacter(char), 1.0, 4235, 
4258, removeInvalidXmlCharacters(char, char, boolean, java.lang.String, java.lang.StringBuffer, int, java.lang.StringBuffer, java.lang.NumberFormatException), 1.0, 4235, 
4259, extractHtmlBody(int, java.lang.String, int), 1.0, 4235, 
4260, replaceSpacesToNonbreakableSpaces(char, boolean, java.lang.String, int, java.lang.StringBuffer), 1.0, 4235, 
4263, toString(java.lang.StringBuffer), 0.0, 4261, 
4265, format(java.util.logging.LogRecord, java.lang.String, java.lang.StringBuffer), 1.0, 4264, 
4273, writeAttributes(javax.swing.text.AttributeSet, java.lang.Object, javax.swing.text.Element, java.util.Enumeration), 1.0, 4269, 
4275, executableByExtension(java.lang.String), 1.0, 4274, 
4276, colorToXml(java.lang.String, java.lang.String, java.lang.String, java.awt.Color), 1.0, 4274, 
4277, xmlToColor(java.lang.String, int, int, int), 1.0, 4274, 
4278, PointToXml(java.awt.Point, java.util.Vector), 1.0, 4274, 
4279, xmlToPoint(java.lang.String, int, int, java.util.List, java.util.ListIterator), 1.0, 4274, 
4280, BooleanToXml(boolean), 1.0, 4274, 
4281, xmlToBoolean(java.lang.String), 1.0, 4274, 
4282, stringToList(java.lang.String, java.util.StringTokenizer, java.util.List), 1.0, 4274, 
4283, listToString(java.lang.String, java.util.List, java.util.ListIterator), 1.0, 4274, 
4284, expandFileName(java.lang.String), 1.0, 4274, 
4285, getAvailableFontFamilyNames(String[], int), 0.0, 4274, 
4286, getAvailableFonts(java.awt.GraphicsEnvironment), 0.0, 4274, 
4287, getAvailableFontFamilyNamesAsVector(String[], int, java.util.Vector), 0.0, 4274, 
4288, isAvailableFontFamily(java.lang.String), 1.0, 4274, 
4289, getExtension(java.io.File), 1.0, 4274, 
4290, getExtension(java.lang.String, int), 1.0, 4274, 
4291, removeExtension(java.lang.String, int), 1.0, 4274, 
4292, isAbsolutePath(java.lang.String, java.lang.String, java.lang.String), 1.0, 4274, 
4293, urlGetFile(java.net.URL, java.lang.String, java.lang.String), 1.0, 4274, 
4295, isPreferenceTrue(java.lang.String), 1.0, 4274, 
4300, firstLetterCapitalized(java.lang.String), 1.0, 4274, 
4305, toBase64(byte[]), 1.0, 4274, 
4306, toBase64(java.lang.String), 1.0, 4274, 
4307, fromBase64(java.lang.String), 1.0, 4274, 
4308, compress(byte[], java.lang.String, int, java.io.ByteArrayOutputStream, byte[], byte[], java.util.zip.Deflater, java.io.IOException), 1.0, 4274, 
4309, decompress(byte[], java.lang.String, java.io.ByteArrayOutputStream, java.util.zip.Inflater, byte[], int, byte[], java.util.zip.DataFormatException), 1.0, 4274, 
4310, byteArrayToUTF8String(byte[], java.io.UnsupportedEncodingException), 1.0, 4274, 
4311, uTF8StringToByteArray(java.lang.String, java.io.UnsupportedEncodingException), 1.0, 4274, 
4312, xmlToDate(java.lang.String, java.lang.Exception), 1.0, 4274, 
4313, dateToString(java.util.Date), 1.0, 4274, 
4317, replaceUtf8AndIllegalXmlChars(java.lang.String), 1.0, 4274, 
4318, getActualReader(java.io.Reader), 1.0, 4274, 
4319, getFile(java.io.File, java.io.FileNotFoundException), 1.0, 4274, 
4320, getReaderFromFile(java.io.File), 1.0, 4274, 
4321, getFile(java.lang.String, java.io.BufferedReader, java.io.Reader, java.lang.String, java.lang.StringBuffer, java.lang.Exception, java.lang.Exception), 1.0, 4274, 
4322, logTransferable(DataFlavor[], java.awt.datatransfer.Transferable, int, java.lang.Exception), 1.0, 4274, 
4323, addEscapeActionToDialog(javax.swing.JDialog), 1.0, 4274, 
4326, removeTranslateComment(java.lang.String), 1.0, 4274, 
4327, getURLWithoutReference(java.net.URL), 1.0, 4274, 
4335, isMacOsX(boolean, java.lang.String), 0.0, 4274, 
4336, removeMnemonic(java.lang.String), 1.0, 4274, 
4337, getKeyStroke(java.lang.String, javax.swing.KeyStroke), 1.0, 4274, 
4338, fileToUrl(java.io.File), 1.0, 4274, 
4339, urlToFile(java.net.URL), 1.0, 4274, 
4341, getFileNameProposal(java.lang.String, freemind.modes.MindMapNode), 1.0, 4274, 
4342, waitForEventQueue(java.lang.Exception), 0.0, 4274, 
4343, printStackTrace(), 0.0, 4274, 
4347, IntHolder(), 0.0, 4346, 
4348, IntHolder(int), 1.0, 4346, 
4349, setValue(int), 1.0, 4346, 
4350, getValue(), 0.0, 4346, 
4351, toString(), 0.0, 4346, 
4353, BooleanHolder(), 0.0, 4352, 
4354, BooleanHolder(boolean), 1.0, 4352, 
4355, setValue(boolean), 1.0, 4352, 
4356, getValue(), 0.0, 4352, 
4358, ObjectHolder(), 0.0, 4357, 
4359, setObject(java.lang.Object), 1.0, 4357, 
4360, getObject(), 0.0, 4357, 
4363, getFirst(), 0.0, 4361, 
4364, getSecond(), 0.0, 4361, 
4367, init(byte[], javax.crypto.SecretKey, java.security.spec.AlgorithmParameterSpec, java.security.spec.KeySpec, java.security.InvalidKeyException), 1.0, 4365, 
4368, encrypt(byte[], java.lang.String, int, byte[], byte[], javax.crypto.IllegalBlockSizeException), 1.0, 4365, 
4369, decrypt(java.lang.String, byte[], byte[], byte[], int, java.lang.String, java.io.UnsupportedEncodingException), 1.0, 4365, 
4371, FreeMindApplet(), 0.0, 4370, 
4372, isApplet(), 0.0, 4370, 
4373, getPatternsFile(), 0.0, 4370, 
4374, getController(), 0.0, 4370, 
4375, getView(), 0.0, 4370, 
4376, setView(freemind.view.mindmapview.MapView), 1.0, 4370, 
4377, getFreeMindMenuBar(), 0.0, 4370, 
4378, getViewport(), 0.0, 4370, 
4379, getFreemindVersion(), 0.0, 4370, 
4380, getWinHeight(), 0.0, 4370, 
4381, getWinWidth(), 0.0, 4370, 
4382, getWinState(), 0.0, 4370, 
4383, getWinX(), 0.0, 4370, 
4384, getWinY(), 0.0, 4370, 
4385, getResources(), 0.0, 4370, 
4386, getResourceString(java.lang.String), 1.0, 4370, 
4388, getProperty(java.lang.String), 1.0, 4370, 
4390, getProperties(), 0.0, 4370, 
4393, getFreemindDirectory(), 0.0, 4370, 
4394, getMaxNodeWidth(java.lang.NumberFormatException), 0.0, 4370, 
4395, saveProperties(), 0.0, 4370, 
4396, setTitle(java.lang.String), 1.0, 4370, 
4397, out(java.lang.String), 1.0, 4370, 
4398, err(java.lang.String), 1.0, 4370, 
4399, openDocument(java.net.URL), 1.0, 4370, 
4400, start(java.lang.Exception), 0.0, 4370, 
4401, setWaitingCursor(boolean), 1.0, 4370, 
4402, getResource(java.lang.String, java.net.URL), 1.0, 4370, 
4403, getLogger(java.lang.String), 1.0, 4370, 
4404, init(java.lang.String, java.lang.String, java.net.URL, java.net.URL, java.util.Enumeration, javax.swing.JRootPane, java.io.InputStream, java.net.MalformedURLException, java.lang.Exception), 0.0, 4370, 
4405, setPropertyByParameter(java.lang.String, java.lang.String), 1.0, 4370, 
4406, updateLookAndFeel(java.lang.String, java.lang.Exception), 0.0, 4370, 
4407, getSouthPanel(), 0.0, 4370, 
4408, getJFrame(), 0.0, 4370, 
4409, getFreeMindClassLoader(), 0.0, 4370, 
4410, getFreemindBaseDir(), 0.0, 4370, 
4411, getAdjustableProperty(java.lang.String), 1.0, 4370, 
4412, insertComponentIntoSplitPane(javax.swing.JComponent), 1.0, 4370, 
4413, removeSplitPane(), 0.0, 4370, 
4415, SingleDesEncrypter(java.lang.StringBuffer), 1.0, 4414, 
4417, TripleDesEncrypter(java.lang.StringBuffer), 1.0, 4416, 
4419, main(String[], java.util.Properties, java.lang.Class, java.util.Properties, java.lang.reflect.Method, freemind.main.FreeMindStarter, java.lang.Exception), 1.0, 4418, 
4420, checkJavaVersion(java.lang.String), 0.0, 4418, 
4421, createUserDirectory(java.util.Properties, java.io.File, java.lang.Exception), 1.0, 4418, 
4422, setDefaultLocale(java.util.Locale, java.lang.String, java.util.Properties), 1.0, 4418, 
4423, readUsersPreferences(java.io.InputStream, java.util.Properties, java.io.File, java.util.Properties, java.lang.Exception), 1.0, 4418, 
4424, getUserPreferencesFile(java.lang.String, java.io.File, java.util.Properties, java.io.File), 1.0, 4418, 
4425, getFreeMindDirectory(java.util.Properties), 1.0, 4418, 
4426, readDefaultPreferences(java.io.InputStream, java.lang.String, java.util.Properties, java.net.URL, java.lang.Exception), 0.0, 4418, 
4429, run(javax.xml.transform.Transformer, javax.xml.transform.TransformerFactory, java.lang.Exception), 0.0, 4428, 
4430, isSuccessful(), 0.0, 4428, 
4431, getErrorMessage(), 0.0, 4428, 
4434, actionPerformed(java.awt.event.ActionEvent), 1.0, 4433, 
4437, getText(), 0.0, 4436, 
4438, setText(java.lang.String), 1.0, 4436, 
4439, setMnemonic(char), 1.0, 4436, 
4440, setDisplayedMnemonicIndex(int), 1.0, 4436, 
4442, ButtonHolder(javax.swing.AbstractButton), 1.0, 4441, 
4443, getText(), 0.0, 4441, 
4444, setDisplayedMnemonicIndex(int), 1.0, 4441, 
4445, setMnemonic(char), 1.0, 4441, 
4446, setText(java.lang.String), 1.0, 4441, 
4448, ActionHolder(javax.swing.Action), 1.0, 4447, 
4449, getText(), 0.0, 4447, 
4450, setDisplayedMnemonicIndex(int), 1.0, 4447, 
4451, setMnemonic(int, char), 1.0, 4447, 
4452, setText(java.lang.String), 1.0, 4447, 
4454, run(), 0.0, 4453, 
4458, getActualValue(), 0.0, 4456, 
4459, setMaximumValue(int), 1.0, 4456, 
4460, increase(java.lang.String), 1.0, 4456, 
4464, getLineNr(), 0.0, 4461, 
4466, XMLElement(), 0.0, 4465, 
4467, XMLElement(java.util.Hashtable), 1.0, 4465, 
4468, XMLElement(boolean), 1.0, 4465, 
4472, getUserObject(), 0.0, 4465, 
4473, addChild(freemind.main.XMLElement), 1.0, 4465, 
4480, countChildren(), 0.0, 4465, 
4481, enumerateAttributeNames(), 0.0, 4465, 
4482, enumeratePropertyNames(), 0.0, 4465, 
4483, enumerateChildren(), 0.0, 4465, 
4484, getChildren(java.lang.Exception), 0.0, 4465, 
4485, getContents(), 0.0, 4465, 
4486, getContent(), 0.0, 4465, 
4487, getLineNr(), 0.0, 4465, 
4488, getAttribute(java.lang.String), 1.0, 4465, 
4491, getStringAttribute(java.lang.String), 1.0, 4465, 
4494, getIntAttribute(java.lang.String), 1.0, 4465, 
4497, getDoubleAttribute(java.lang.String), 1.0, 4465, 
4502, getProperty(java.lang.String), 1.0, 4465, 
4511, getName(), 0.0, 4465, 
4512, getTagName(), 0.0, 4465, 
4513, parseFromReader(java.io.Reader), 1.0, 4465, 
4515, parseString(java.lang.String, java.io.IOException), 1.0, 4465, 
4521, removeChild(freemind.main.XMLElement), 1.0, 4465, 
4522, removeAttribute(java.lang.String), 1.0, 4465, 
4523, removeProperty(java.lang.String), 1.0, 4465, 
4524, removeChild(java.lang.String), 1.0, 4465, 
4525, createAnotherElement(), 0.0, 4465, 
4526, completeElement(), 0.0, 4465, 
4527, setContent(java.lang.String), 1.0, 4465, 
4528, setEncodedContent(java.lang.String), 1.0, 4465, 
4529, setTagName(java.lang.String), 1.0, 4465, 
4530, setName(java.lang.String), 1.0, 4465, 
4531, toString(java.io.ByteArrayOutputStream, java.io.OutputStreamWriter, java.io.IOException), 0.0, 4465, 
4532, write(java.io.Writer), 1.0, 4465, 
4533, writeWithoutClosingTag(java.io.Writer), 1.0, 4465, 
4534, writeClosingTag(java.io.Writer), 1.0, 4465, 
4537, scanIdentifier(java.lang.StringBuffer, char), 1.0, 4465, 
4538, scanWhitespace(char), 0.0, 4465, 
4539, scanWhitespace(char, java.lang.StringBuffer), 1.0, 4465, 
4540, scanString(java.lang.StringBuffer, char, char), 1.0, 4465, 
4541, scanPCData(char, java.lang.StringBuffer), 1.0, 4465, 
4542, checkCDATA(int, char, int, java.lang.StringBuffer), 1.0, 4465, 
4543, skipComment(int, char), 0.0, 4465, 
4544, skipSpecialTag(int, int, char, char), 1.0, 4465, 
4545, checkLiteral(int, java.lang.String, int), 1.0, 4465, 
4546, readChar(int, char), 0.0, 4465, 
4547, scanElement(char, boolean, int, java.lang.String, freemind.main.XMLElement, java.util.regex.Matcher, freemind.main.XMLElement, java.lang.String, java.lang.String, java.lang.StringBuffer, java.lang.String, java.lang.StringBuffer), 1.0, 4465, 
4548, resolveEntity(char, java.lang.StringBuffer, java.lang.String, java.lang.StringBuffer, char[], java.lang.NumberFormatException), 1.0, 4465, 
4549, unreadChar(char), 1.0, 4465, 
4550, invalidValueSet(java.lang.String, java.lang.String), 1.0, 4465, 
4552, unexpectedEndOfData(java.lang.String), 0.0, 4465, 
4553, syntaxError(java.lang.String, java.lang.String), 1.0, 4465, 
4554, expectedInput(java.lang.String, java.lang.String), 1.0, 4465, 
4555, unknownEntity(java.lang.String, java.lang.String), 1.0, 4465, 
4557, ExampleFileFilter(), 0.0, 4556, 
4558, ExampleFileFilter(java.lang.String), 1.0, 4556, 
4560, ExampleFileFilter(String[]), 1.0, 4556, 
4562, accept(java.io.File, java.lang.String), 1.0, 4556, 
4563, getExtension(java.io.File, int, java.lang.String), 1.0, 4556, 
4564, addExtension(java.lang.String), 1.0, 4556, 
4565, getDescription(java.util.Enumeration), 0.0, 4556, 
4566, setDescription(java.lang.String), 1.0, 4556, 
4567, setExtensionListInDescription(boolean), 1.0, 4556, 
4568, isExtensionListInDescription(), 0.0, 4556, 
4570, getFeedBack(), 0.0, 4569, 
4571, close(), 0.0, 4569, 
4572, setVisible(boolean), 1.0, 4569, 
4573, getWindowIcon(), 0.0, 4569, 
4575, FreeMindCommon(freemind.main.FreeMindMain), 1.0, 4574, 
4576, getProperty(java.lang.String), 1.0, 4574, 
4578, getResources(), 0.0, 4574, 
4579, getResourceString(java.lang.String), 1.0, 4574, 
4581, clearLanguageResources(), 0.0, 4574, 
4582, getFreeMindClassLoader(java.lang.ClassLoader, java.net.MalformedURLException), 0.0, 4574, 
4583, getFreemindBaseDirOld(int, int, java.lang.String, java.lang.String, java.io.File), 0.0, 4574, 
4584, getFreemindBaseDir(java.io.File, java.lang.String, java.net.URL, java.lang.String, java.lang.Exception), 0.0, 4574, 
4585, getAdjustableProperty(java.lang.String, java.lang.String, java.lang.String), 1.0, 4574, 
4586, loadUIProperties(java.util.Properties), 1.0, 4574, 
4588, FreemindResourceBundle(java.lang.String, java.lang.Exception), 0.0, 4587, 
4589, getLanguageResources(java.io.InputStream, java.lang.String, java.util.PropertyResourceBundle, java.net.URL), 1.0, 4587, 
4590, handleGetObject(java.lang.String, java.lang.Exception), 1.0, 4587, 
4591, getKeys(), 0.0, 4587, 
4592, getResourceString(java.lang.String, java.lang.Exception), 1.0, 4587, 
4595, Resources(freemind.main.FreeMindMain), 1.0, 4594, 
4596, createInstance(freemind.main.FreeMindMain), 1.0, 4594, 
4597, getResource(java.lang.String), 1.0, 4594, 
4598, getResourceString(java.lang.String), 1.0, 4594, 
4600, getInstance(), 0.0, 4594, 
4601, getFreemindDirectory(), 0.0, 4594, 
4602, getFreemindVersion(), 0.0, 4594, 
4604, getBoolProperty(java.lang.String, java.lang.String), 1.0, 4594, 
4605, getProperties(), 0.0, 4594, 
4606, getProperty(java.lang.String), 1.0, 4594, 
4607, getResources(), 0.0, 4594, 
4608, getCountryMap(int, String[]), 0.0, 4594, 
4609, getLogger(java.lang.String), 1.0, 4594, 
4610, logException(java.lang.Throwable), 1.0, 4594, 
4613, createTranslatedString(java.lang.String, java.lang.String), 1.0, 4594, 
4614, getText(java.lang.String), 1.0, 4594, 
4616, getFeedBack(), 0.0, 4615, 
4617, FreeMindSplash(freemind.main.FreeMindMain, javax.swing.ImageIcon, javax.swing.JLabel, java.awt.Dimension, java.awt.Dimension), 1.0, 4615, 
4618, close(), 0.0, 4615, 
4619, getWindowIcon(), 0.0, 4615, 
4622, getActualValue(), 0.0, 4620, 
4623, setMaximumValue(int), 1.0, 4620, 
4624, increase(java.lang.String), 1.0, 4620, 
4625, setImageJLabel(javax.swing.JLabel), 1.0, 4620, 
4628, run(double), 0.0, 4627, 
4631, paint(int, int, java.awt.Graphics, int, java.lang.String, int, int, java.lang.String, java.awt.Graphics2D, java.lang.Double), 1.0, 4630, 
4633, decode64(int, int, int, byte, byte, byte, int, char[], java.lang.String, java.io.ByteArrayOutputStream), 1.0, 4632, 
4634, encode64(int, int, byte[], char[], java.lang.StringBuffer, int), 1.0, 4632, 
4637, init(freemind.main.FeedBack), 1.0, 4635, 
4638, updateLookAndFeel(java.lang.String, java.lang.Exception), 0.0, 4635, 
4639, isApplet(), 0.0, 4635, 
4640, getPatternsFile(), 0.0, 4635, 
4641, getViewport(), 0.0, 4635, 
4642, getFreemindVersion(), 0.0, 4635, 
4643, getWinHeight(), 0.0, 4635, 
4644, getWinWidth(), 0.0, 4635, 
4645, getWinX(), 0.0, 4635, 
4646, getWinY(), 0.0, 4635, 
4647, getWinState(), 0.0, 4635, 
4648, getResource(java.lang.String), 1.0, 4635, 
4649, getProperty(java.lang.String), 1.0, 4635, 
4651, getProperties(), 0.0, 4635, 
4653, getDefaultProperty(java.lang.String), 1.0, 4635, 
4655, getFreemindDirectory(), 0.0, 4635, 
4656, saveProperties(java.io.OutputStream, java.io.OutputStreamWriter, java.lang.Exception), 0.0, 4635, 
4657, getView(), 0.0, 4635, 
4658, getController(), 0.0, 4635, 
4659, setView(freemind.view.mindmapview.MapView), 1.0, 4635, 
4660, getFreeMindMenuBar(), 0.0, 4635, 
4661, out(java.lang.String), 1.0, 4635, 
4662, err(java.lang.String), 1.0, 4635, 
4663, openDocument(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL, java.lang.String, Object[], java.text.MessageFormat, java.io.IOException, java.io.IOException), 1.0, 4635, 
4665, setWaitingCursor(boolean), 1.0, 4635, 
4666, getProgramForFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.StringTokenizer, java.util.StringTokenizer), 1.0, 4635, 
4667, getResources(), 0.0, 4635, 
4668, getResourceString(java.lang.String), 1.0, 4635, 
4670, getLogger(java.util.logging.Logger, freemind.main.LoggingOutputStream, java.lang.String, java.util.logging.Handler, java.util.logging.Logger, Handler[], java.util.logging.Logger, int, java.util.logging.ConsoleHandler, java.lang.Exception), 1.0, 4635, 
4672, setScreenBounds(int, int, int, int, int, javax.swing.InputMap, boolean, java.awt.Dimension, int, java.awt.Insets, java.awt.Toolkit, javax.swing.KeyStroke, int), 0.0, 4635, 
4673, createModeController(String[], freemind.modes.ModeController, java.lang.Class, java.lang.Exception), 1.0, 4635, 
4675, getJFrame(), 0.0, 4635, 
4676, getFreeMindClassLoader(), 0.0, 4635, 
4677, getFreemindBaseDir(), 0.0, 4635, 
4678, getAdjustableProperty(java.lang.String), 1.0, 4635, 
4679, tabSelectionChanged(int, freemind.view.MapModule, int), 0.0, 4635, 
4680, insertComponentIntoSplitPane(javax.swing.JComponent, javax.swing.KeyStroke, int, javax.swing.KeyStroke, int, javax.swing.InputMap), 1.0, 4635, 
4681, removeSplitPane(), 0.0, 4635, 
4682, removeContentComponent(), 0.0, 4635, 
4683, setContentComponent(), 0.0, 4635, 
4688, getActualValue(), 0.0, 4687, 
4689, increase(java.lang.String), 1.0, 4687, 
4691, setMaximumValue(int), 1.0, 4687, 
4694, windowLostFocus(java.awt.event.WindowEvent), 1.0, 4693, 
4695, windowGainedFocus(java.awt.event.WindowEvent, freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView), 1.0, 4693, 
4698, stateChanged(javax.swing.event.ChangeEvent), 1.0, 4697, 
4704, numberOfOpenMapInformation(int), 1.0, 4700, 
4711, windowClosing(java.awt.event.WindowEvent), 1.0, 4710, 
4713, run(java.lang.InterruptedException), 0.0, 4712, 
4714, searchFocus(java.awt.Component, int, java.awt.Component, java.awt.Container), 1.0, 4712, 
4716, focusGained(java.awt.event.FocusEvent), 1.0, 4715, 
4717, focusLost(java.awt.event.FocusEvent), 1.0, 4715, 
4722, write(), 0.0, 4719, 
4723, writeOption(javax.swing.text.html.Option), 1.0, 4719, 
4724, writeLineSeparator(), 0.0, 4719, 
4726, main(String[], java.io.FileWriter, java.io.FileReader, java.lang.Exception), 1.0, 4719, 
4728, XHTMLFilterWriter(java.io.Writer), 1.0, 4727, 
4729, write(int), 1.0, 4727, 
4733, FreeMindSecurityManager(), 0.0, 4732, 
4734, setFinalSecurityManager(java.lang.SecurityManager), 1.0, 4732, 
4736, checkAccess(java.lang.Thread), 1.0, 4732, 
4737, checkAccess(java.lang.ThreadGroup), 1.0, 4732, 
4738, checkAwtEventQueueAccess(), 0.0, 4732, 
4741, checkCreateClassLoader(), 0.0, 4732, 
4742, checkDelete(java.lang.String), 1.0, 4732, 
4743, checkExec(java.lang.String), 1.0, 4732, 
4744, checkExit(int), 1.0, 4732, 
4745, checkLink(java.lang.String), 1.0, 4732, 
4746, checkListen(int), 1.0, 4732, 
4749, checkMulticast(java.net.InetAddress), 1.0, 4732, 
4750, checkPackageAccess(java.lang.String), 1.0, 4732, 
4751, checkPackageDefinition(java.lang.String), 1.0, 4732, 
4753, checkPermission(java.security.Permission), 1.0, 4732, 
4754, checkPrintJobAccess(), 0.0, 4732, 
4755, checkPropertiesAccess(), 0.0, 4732, 
4756, checkPropertyAccess(java.lang.String), 1.0, 4732, 
4757, checkRead(java.io.FileDescriptor), 1.0, 4732, 
4759, checkRead(java.lang.String), 1.0, 4732, 
4760, checkSecurityAccess(java.lang.String), 1.0, 4732, 
4761, checkSetFactory(), 0.0, 4732, 
4762, checkSystemClipboardAccess(), 0.0, 4732, 
4763, checkTopLevelWindow(java.lang.Object), 1.0, 4732, 
4764, checkWrite(java.io.FileDescriptor), 1.0, 4732, 
4765, checkWrite(java.lang.String), 1.0, 4732, 
4766, getSecurityContext(), 0.0, 4732, 
4768, getFeedBack(), 0.0, 4767, 
4769, FreeMindSplashModern(freemind.main.FreeMindMain, javax.swing.ImageIcon, javax.swing.JLabel, java.awt.Dimension, java.awt.Dimension), 1.0, 4767, 
4770, close(), 0.0, 4767, 
4771, getWindowIcon(), 0.0, 4767, 
4774, getActualValue(), 0.0, 4772, 
4775, setMaximumValue(int), 1.0, 4772, 
4776, increase(java.lang.String), 1.0, 4772, 
4777, setImageJLabel(javax.swing.JLabel), 1.0, 4772, 
4780, run(double), 0.0, 4779, 
4783, paint(int, int, java.awt.Graphics, java.awt.Graphics2D, int, int, java.lang.String, int, java.lang.Double, java.lang.String), 1.0, 4782, 
4785, getJFrame(), 0.0, 4784, 
4786, isApplet(), 0.0, 4784, 
4787, getView(), 0.0, 4784, 
4788, setView(freemind.view.mindmapview.MapView), 1.0, 4784, 
4789, getController(), 0.0, 4784, 
4790, setWaitingCursor(boolean), 1.0, 4784, 
4791, getPatternsFile(), 0.0, 4784, 
4792, getFreeMindMenuBar(), 0.0, 4784, 
4793, getResources(), 0.0, 4784, 
4794, getResourceString(java.lang.String), 1.0, 4784, 
4796, getContentPane(), 0.0, 4784, 
4797, out(java.lang.String), 1.0, 4784, 
4798, err(java.lang.String), 1.0, 4784, 
4799, openDocument(java.net.URL), 1.0, 4784, 
4800, repaint(), 0.0, 4784, 
4801, getResource(java.lang.String), 1.0, 4784, 
4803, getProperties(), 0.0, 4784, 
4804, getProperty(java.lang.String), 1.0, 4784, 
4806, saveProperties(), 0.0, 4784, 
4807, getFreemindDirectory(), 0.0, 4784, 
4808, getLayeredPane(), 0.0, 4784, 
4809, getViewport(), 0.0, 4784, 
4810, setTitle(java.lang.String), 1.0, 4784, 
4811, getWinHeight(), 0.0, 4784, 
4812, getWinWidth(), 0.0, 4784, 
4813, getWinState(), 0.0, 4784, 
4814, getWinX(), 0.0, 4784, 
4815, getWinY(), 0.0, 4784, 
4816, getFreemindVersion(), 0.0, 4784, 
4817, getLogger(java.lang.String), 1.0, 4784, 
4818, insertComponentIntoSplitPane(javax.swing.JComponent), 1.0, 4784, 
4819, removeSplitPane(), 0.0, 4784, 
4820, getFreeMindClassLoader(), 0.0, 4784, 
4821, getFreemindBaseDir(), 0.0, 4784, 
4822, getAdjustableProperty(java.lang.String), 1.0, 4784, 
4826, VersionInformation(int, java.lang.String, String[], java.util.StringTokenizer, int, java.util.Vector), 1.0, 4824, 
4827, toString(java.lang.StringBuffer), 0.0, 4824, 
4832, paint(java.awt.Graphics, java.awt.Graphics2D, java.awt.print.PageFormat), 1.0, 4829, 
4833, getPageHeight(java.awt.print.PageFormat), 1.0, 4829, 
4834, getPageWidth(java.awt.print.PageFormat), 1.0, 4829, 
4835, moveIndex(int, int), 1.0, 4829, 
4836, changeZoom(double), 1.0, 4829, 
4837, resize(int), 0.0, 4829, 
4838, getPageFormat(), 0.0, 4829, 
4839, getMinimumSize(), 0.0, 4829, 
4840, getPageIndex(), 0.0, 4829, 
4843, actionPerformed(java.awt.event.ActionEvent), 1.0, 4841, 
4846, actionPerformed(java.awt.event.ActionEvent), 1.0, 4844, 
4847, paintPageIndex(), 0.0, 4844, 
4848, getPageIndexText(), 0.0, 4844, 
4850, run(), 0.0, 4849, 
4854, getButton(java.lang.String), 1.0, 4852, 
4857, actionPerformed(java.awt.event.ActionEvent), 1.0, 4852, 
4860, testSetHtml(freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 4859, 
4861, testEndContentMatcher(), 0.0, 4859, 
4862, matchingTest(java.lang.String), 1.0, 4859, 
4863, testNanoXmlContent(freemind.main.XMLElement), 0.0, 4859, 
4864, testXHtmlToHtmlConversion(), 0.0, 4859, 
4865, testWellFormedXml(), 0.0, 4859, 
4866, testBr(java.lang.String, java.lang.String), 0.0, 4859, 
4867, testSpaceHandling(java.lang.String), 0.0, 4859, 
4868, testSpaceHandlingInShtmlIdempotency(java.lang.String, com.lightdev.app.shtm.SHTMLPanel), 0.0, 4859, 
4869, testSpaceRemovalInShtml(java.lang.String, com.lightdev.app.shtm.SHTMLPanel), 0.0, 4859, 
4870, getInputStringWithManySpaces(java.lang.String, java.lang.String, java.lang.String), 1.0, 4859, 
4871, getHtmlBody(java.lang.String, java.lang.String), 1.0, 4859, 
4872, testUnicodeHandling(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String), 0.0, 4859, 
4873, testHtmlBodyExtraction(java.lang.String, java.lang.String), 0.0, 4859, 
4874, testIllegalXmlChars(), 0.0, 4859, 
4875, testSpaceReplacements(), 0.0, 4859, 
4877, TransformTest(), 0.0, 4876, 
4878, testExportHtml(java.lang.String, java.util.Properties, java.lang.String), 0.0, 4876, 
4879, testExportHtmlWithImage(java.lang.String, java.util.Properties, java.lang.String), 0.0, 4876, 
4880, testExportHtmlApplet(java.util.Properties, java.lang.String, java.lang.String), 0.0, 4876, 
4881, testExportHtmlFlash(java.util.Properties, java.lang.String, java.lang.String), 0.0, 4876, 
4882, testExportOoo(java.util.Properties, java.lang.String, java.lang.String), 0.0, 4876, 
4887, FreeMindTestBase(), 0.0, 4886, 
4888, FreeMindTestBase(java.lang.String), 1.0, 4886, 
4889, setUp(), 0.0, 4886, 
4890, getFrame(), 0.0, 4886, 
4892, main(String[], junit.framework.TestResult), 1.0, 4891, 
4893, suite(junit.framework.TestSuite), 0.0, 4891, 
4895, MindMapMock(java.lang.String), 1.0, 4894, 
4896, getModeController(), 0.0, 4894, 
4897, nodeChanged(javax.swing.tree.TreeNode), 1.0, 4894, 
4898, nodeRefresh(javax.swing.tree.TreeNode), 1.0, 4894, 
4899, getAsPlainText(java.util.List), 1.0, 4894, 
4900, getAsRTF(java.util.List), 1.0, 4894, 
4901, getAsHTML(java.util.List), 1.0, 4894, 
4903, getFile(), 0.0, 4894, 
4904, getURL(), 0.0, 4894, 
4905, getXml(java.io.Writer), 1.0, 4894, 
4906, getFilteredXml(java.io.Writer), 1.0, 4894, 
4907, getRestoreable(), 0.0, 4894, 
4908, getPathToRoot(javax.swing.tree.TreeNode), 1.0, 4894, 
4909, getBackgroundColor(), 0.0, 4894, 
4910, setBackgroundColor(java.awt.Color), 1.0, 4894, 
4911, getLinkRegistry(), 0.0, 4894, 
4912, destroy(), 0.0, 4894, 
4913, isReadOnly(), 0.0, 4894, 
4914, getRegistry(), 0.0, 4894, 
4915, getFilter(), 0.0, 4894, 
4916, setFilter(freemind.controller.filter.Filter), 1.0, 4894, 
4917, getRoot(), 0.0, 4894, 
4919, getChildCount(java.lang.Object), 1.0, 4894, 
4920, isLeaf(java.lang.Object), 1.0, 4894, 
4923, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 4894, 
4924, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 4894, 
4925, getRootNode(), 0.0, 4894, 
4927, nodeStructureChanged(javax.swing.tree.TreeNode), 1.0, 4894, 
4928, setSaved(boolean), 1.0, 4894, 
4929, isSaved(), 0.0, 4894, 
4931, testPanel(plugins.script.ScriptEditorPanel), 0.0, 4930, 
4932, testErrorLineNumbers(java.lang.String), 0.0, 4930, 
4934, getAmountOfScripts(), 0.0, 4933, 
4935, getScript(int), 1.0, 4933, 
4940, endDialog(boolean), 1.0, 4933, 
4941, isDirty(), 0.0, 4933, 
4942, addNewScript(), 0.0, 4933, 
4945, testDifferentBase64ers(java.lang.String, java.lang.String, java.lang.String, java.lang.String), 0.0, 4944, 
4947, FreeMindMainMock(), 0.0, 4946, 
4948, getJFrame(), 0.0, 4946, 
4949, isApplet(), 0.0, 4946, 
4950, getView(), 0.0, 4946, 
4951, setView(freemind.view.mindmapview.MapView), 1.0, 4946, 
4952, getController(), 0.0, 4946, 
4953, setWaitingCursor(boolean), 1.0, 4946, 
4954, getPatternsFile(), 0.0, 4946, 
4955, getFreeMindMenuBar(), 0.0, 4946, 
4956, getResources(), 0.0, 4946, 
4957, getResourceString(java.lang.String), 1.0, 4946, 
4959, getContentPane(), 0.0, 4946, 
4960, out(java.lang.String), 1.0, 4946, 
4961, err(java.lang.String), 1.0, 4946, 
4962, openDocument(java.net.URL), 1.0, 4946, 
4963, repaint(), 0.0, 4946, 
4964, getResource(java.lang.String), 1.0, 4946, 
4966, getProperties(), 0.0, 4946, 
4967, getProperty(java.lang.String), 1.0, 4946, 
4969, saveProperties(), 0.0, 4946, 
4970, getFreemindDirectory(), 0.0, 4946, 
4971, getLayeredPane(), 0.0, 4946, 
4972, getViewport(), 0.0, 4946, 
4973, setTitle(java.lang.String), 1.0, 4946, 
4974, getWinHeight(), 0.0, 4946, 
4975, getWinWidth(), 0.0, 4946, 
4976, getWinState(), 0.0, 4946, 
4977, getWinX(), 0.0, 4946, 
4978, getWinY(), 0.0, 4946, 
4979, getFreemindVersion(), 0.0, 4946, 
4980, getLogger(java.lang.String), 1.0, 4946, 
4981, getFreeMindClassLoader(), 0.0, 4946, 
4982, getFreemindBaseDir(), 0.0, 4946, 
4983, getAdjustableProperty(java.lang.String), 1.0, 4946, 
4985, insertComponentIntoSplitPane(javax.swing.JComponent), 1.0, 4946, 
4986, removeSplitPane(), 0.0, 4946, 
4988, testDialog(int, javax.swing.JFrame), 0.0, 4987, 
4990, getText(java.lang.String), 1.0, 4989, 
4993, getProperty(), 0.0, 4992, 
4994, setProperty(java.lang.String), 1.0, 4992, 
4997, getText(java.lang.String), 1.0, 4996, 
5000, getProperty(), 0.0, 4999, 
5001, setProperty(java.lang.String), 1.0, 4999, 
5004, getText(java.lang.String), 1.0, 5003, 
5007, testLightBuldSplash(int, freemind.main.IFreeMindSplash), 0.0, 5006, 
5009, getProperty(), 0.0, 5008, 
5010, setProperty(java.lang.String), 1.0, 5008, 
5013, getText(java.lang.String), 1.0, 5012, 
5017, centerNode(freemind.modes.MindMapNode), 1.0, 5015, 
5020, deregisterNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 5015, 
5021, deregisterNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 5015, 
5022, displayNode(freemind.modes.MindMapNode), 1.0, 5015, 
5023, doubleClick(java.awt.event.MouseEvent), 1.0, 5015, 
5024, extendSelection(java.awt.event.MouseEvent), 1.0, 5015, 
5025, fireNodePreDeleteEvent(freemind.modes.MindMapNode), 1.0, 5015, 
5026, firePreSaveEvent(freemind.modes.MindMapNode), 1.0, 5015, 
5027, getAttributeController(), 0.0, 5015, 
5028, getController(), 0.0, 5015, 
5029, getFrame(), 0.0, 5015, 
5030, getHookFactory(), 0.0, 5015, 
5031, getLastCurrentDir(), 0.0, 5015, 
5032, getLeftToolBar(), 0.0, 5015, 
5033, getLinkShortText(freemind.modes.MindMapNode), 1.0, 5015, 
5034, getMap(), 0.0, 5015, 
5035, getMode(), 0.0, 5015, 
5036, getModeToolBar(), 0.0, 5015, 
5037, getNodeFromID(java.lang.String), 1.0, 5015, 
5038, getNodeID(freemind.modes.MindMapNode), 1.0, 5015, 
5039, getPopupForModel(java.lang.Object), 1.0, 5015, 
5040, getPopupMenu(), 0.0, 5015, 
5041, getResource(java.lang.String), 1.0, 5015, 
5042, getSelected(), 0.0, 5015, 
5043, getSelecteds(), 0.0, 5015, 
5044, getSelectedsByDepth(), 0.0, 5015, 
5045, getSelectionColor(), 0.0, 5015, 
5046, getText(java.lang.String), 1.0, 5015, 
5047, getView(), 0.0, 5015, 
5048, isBlocked(), 0.0, 5015, 
5049, load(java.net.URL), 1.0, 5015, 
5050, loadURL(java.lang.String), 1.0, 5015, 
5051, newMap(), 0.0, 5015, 
5052, nodeChanged(freemind.modes.MindMapNode), 1.0, 5015, 
5053, nodeRefresh(freemind.modes.MindMapNode), 1.0, 5015, 
5054, cut(freemind.modes.MindMapNode), 1.0, 5015, 
5056, copy(freemind.modes.MindMapNode), 1.0, 5015, 
5057, copy(), 0.0, 5015, 
5058, copySingle(), 0.0, 5015, 
5060, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 5015, 
5061, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 5015, 
5062, open(), 0.0, 5015, 
5063, plainClick(java.awt.event.MouseEvent), 1.0, 5015, 
5064, registerNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 5015, 
5065, registerNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 5015, 
5066, save(java.io.File), 1.0, 5015, 
5067, save(), 0.0, 5015, 
5068, saveAs(), 0.0, 5015, 
5069, select(freemind.view.mindmapview.NodeView), 1.0, 5015, 
5070, select(freemind.modes.MindMapNode), 1.0, 5015, 
5072, setLastCurrentDir(java.io.File), 1.0, 5015, 
5073, setModel(freemind.modes.MapAdapter), 1.0, 5015, 
5074, setVisible(boolean), 1.0, 5015, 
5075, showPopupMenu(java.awt.event.MouseEvent), 1.0, 5015, 
5076, shutdownController(), 0.0, 5015, 
5077, sortNodesByDepth(java.util.List), 1.0, 5015, 
5078, startupController(), 0.0, 5015, 
5079, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 5015, 
5080, updatePopupMenu(freemind.controller.StructuredMenuHolder), 1.0, 5015, 
5081, getSelectedView(), 0.0, 5015, 
5082, getNodeView(freemind.modes.MindMapNode), 1.0, 5015, 
5083, refreshMap(), 0.0, 5015, 
5084, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 5015, 
5085, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 5015, 
5086, setBackgroundColor(java.awt.Color), 1.0, 5015, 
5087, getFileChooser(javax.swing.filechooser.FileFilter), 1.0, 5015, 
5088, load(java.io.File), 1.0, 5015, 
5090, getProperty(), 0.0, 5089, 
5091, setProperty(java.lang.String), 1.0, 5089, 
5094, testSignedInitialization(plugins.script.SignedScriptHandler, java.io.ByteArrayOutputStream), 0.0, 5093, 
5095, testScriptContents(plugins.script.SignedScriptHandler.ScriptContents), 0.0, 5093, 
5097, testNewLines(java.lang.String, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.PatternChild, freemind.controller.actions.generated.instance.Pattern), 0.0, 5096, 
5101, initialize(java.lang.String, javax.swing.Action, javax.swing.JPanel), 1.0, 5099, 
5102, close(freemind.controller.actions.generated.instance.WindowConfigurationStorage), 0.0, 5099, 
5103, okPressed(), 0.0, 5099, 
5104, cancelPressed(), 0.0, 5099, 
5105, getJContentPane(), 0.0, 5099, 
5106, getStylePatternFrame(), 0.0, 5099, 
5107, getJOKButton(), 0.0, 5099, 
5108, getJCancelButton(), 0.0, 5099, 
5109, getResult(), 0.0, 5099, 
5110, getText(java.lang.String), 1.0, 5099, 
5111, getPattern(), 0.0, 5099, 
5112, getPattern(freemind.controller.actions.generated.instance.Pattern), 1.0, 5099, 
5113, keyPressed(java.awt.event.KeyEvent), 1.0, 5099, 
5114, keyReleased(java.awt.event.KeyEvent), 1.0, 5099, 
5115, keyTyped(java.awt.event.KeyEvent), 1.0, 5099, 
5117, windowClosing(java.awt.event.WindowEvent), 1.0, 5116, 
5119, actionPerformed(java.awt.event.ActionEvent), 1.0, 5118, 
5121, actionPerformed(java.awt.event.ActionEvent), 1.0, 5120, 
5123, actionPerformed(java.awt.event.ActionEvent), 1.0, 5122, 
5125, ArrayListTransferHandler(java.lang.ClassNotFoundException), 0.0, 5124, 
5128, hasLocalArrayListFlavor(DataFlavor[], int), 1.0, 5124, 
5130, createTransferable(Object[], java.util.ArrayList, javax.swing.JComponent, java.lang.Object, int, java.lang.String), 1.0, 5124, 
5131, getSourceActions(javax.swing.JComponent), 1.0, 5124, 
5133, ArrayListTransferable(java.util.ArrayList), 1.0, 5132, 
5134, getTransferData(java.awt.datatransfer.DataFlavor), 1.0, 5132, 
5135, getTransferDataFlavors(), 0.0, 5132, 
5136, isDataFlavorSupported(java.awt.datatransfer.DataFlavor), 1.0, 5132, 
5139, initialize(java.util.List, java.util.Iterator, int, javax.swing.JPanel, freemind.controller.actions.generated.instance.ManageStyleEditorWindowConfigurationStorage, freemind.controller.actions.generated.instance.Pattern, javax.swing.Action), 1.0, 5137, 
5140, getDialogTitle(), 0.0, 5137, 
5141, close(freemind.controller.actions.generated.instance.ManageStyleEditorWindowConfigurationStorage), 0.0, 5137, 
5142, okPressed(), 0.0, 5137, 
5143, cancelPressed(), 0.0, 5137, 
5144, getJContentPane(java.util.List, javax.swing.JScrollPane, javax.swing.JMenuBar, javax.swing.JMenuItem, java.awt.event.ActionListener, javax.swing.JMenuItem, freemind.controller.StructuredMenuHolder, javax.swing.JMenu, java.awt.event.ActionListener, javax.swing.JMenuItem, java.awt.event.ActionListener, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem), 1.0, 5137, 
5145, addPattern(int, java.awt.event.ActionEvent, freemind.controller.actions.generated.instance.Pattern), 1.0, 5137, 
5146, duplicatePattern(java.awt.event.ActionEvent, int, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern, freemind.common.XmlBindingTools), 1.0, 5137, 
5147, insertPatternFromNode(int, java.awt.event.ActionEvent, freemind.controller.actions.generated.instance.Pattern), 1.0, 5137, 
5148, applyToNode(java.awt.event.ActionEvent, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode, int), 1.0, 5137, 
5149, searchForNameForNewPattern(java.lang.String, java.lang.String, java.util.Vector, freemind.controller.actions.generated.instance.Pattern, int, java.util.Iterator), 0.0, 5137, 
5150, removePattern(java.awt.event.ActionEvent, int), 1.0, 5137, 
5151, getJOKButton(), 0.0, 5137, 
5152, getJCancelButton(), 0.0, 5137, 
5153, getResult(), 0.0, 5137, 
5154, getText(java.lang.String), 1.0, 5137, 
5155, getPatternList(), 0.0, 5137, 
5156, writePatternBackToModel(java.util.Iterator, java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern), 0.0, 5137, 
5157, keyPressed(java.awt.event.KeyEvent), 1.0, 5137, 
5158, keyReleased(java.awt.event.KeyEvent), 1.0, 5137, 
5159, keyTyped(java.awt.event.KeyEvent), 1.0, 5137, 
5160, getLastSelectedPattern(), 0.0, 5137, 
5161, setLastSelectedPattern(freemind.controller.actions.generated.instance.Pattern), 1.0, 5137, 
5163, valueChanged(javax.swing.event.ListSelectionEvent, int, freemind.controller.actions.generated.instance.Pattern, javax.swing.JList), 1.0, 5162, 
5166, PatternListModel(java.util.List), 1.0, 5165, 
5167, getSize(), 0.0, 5165, 
5168, getElementAt(int), 1.0, 5165, 
5169, getPatternAt(int), 1.0, 5165, 
5170, getPatternList(), 0.0, 5165, 
5171, removePattern(int), 1.0, 5165, 
5173, printPatterns(int, freemind.controller.actions.generated.instance.Pattern, java.util.Iterator), 0.0, 5165, 
5174, getPatternByName(java.lang.String, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern), 1.0, 5165, 
5176, remove(int), 1.0, 5165, 
5178, windowClosing(java.awt.event.WindowEvent), 1.0, 5177, 
5180, actionPerformed(java.awt.event.ActionEvent), 1.0, 5179, 
5182, mouseDragged(java.awt.event.MouseEvent), 1.0, 5181, 
5183, mouseMoved(java.awt.event.MouseEvent), 1.0, 5181, 
5186, actionPerformed(java.awt.event.ActionEvent), 1.0, 5185, 
5189, actionPerformed(java.awt.event.ActionEvent), 1.0, 5188, 
5192, actionPerformed(java.awt.event.ActionEvent), 1.0, 5191, 
5195, actionPerformed(java.awt.event.ActionEvent), 1.0, 5194, 
5198, actionPerformed(java.awt.event.ActionEvent), 1.0, 5197, 
5201, mouseReleased(java.awt.event.MouseEvent), 1.0, 5200, 
5202, mousePressed(java.awt.event.MouseEvent), 1.0, 5200, 
5205, actionPerformed(java.awt.event.ActionEvent), 1.0, 5204, 
5207, actionPerformed(java.awt.event.ActionEvent), 1.0, 5206, 
5209, EnterPasswordDialog(), 0.0, 5208, 
5211, initialize(), 0.0, 5208, 
5212, close(), 0.0, 5208, 
5213, okPressed(), 0.0, 5208, 
5214, checkEqualAndMinimumSize(char[], char[], int), 0.0, 5208, 
5215, cancelPressed(), 0.0, 5208, 
5216, getJContentPane(java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints), 0.0, 5208, 
5217, getJPasswordField(), 0.0, 5208, 
5218, getJPasswordField1(), 0.0, 5208, 
5219, getJOKButton(), 0.0, 5208, 
5220, getJCancelButton(), 0.0, 5208, 
5221, getResult(), 0.0, 5208, 
5222, getPassword(), 0.0, 5208, 
5224, windowClosing(java.awt.event.WindowEvent), 1.0, 5223, 
5226, actionPerformed(java.awt.event.ActionEvent), 1.0, 5225, 
5228, actionPerformed(java.awt.event.ActionEvent), 1.0, 5227, 
5231, MindMapNodeDropListener(freemind.modes.mindmapmode.MindMapController), 1.0, 5230, 
5232, isDragAcceptable(java.awt.dnd.DropTargetDragEvent), 1.0, 5230, 
5233, isDropAcceptable(java.awt.dnd.DropTargetDropEvent, freemind.modes.MindMapNode, freemind.modes.MindMapNode), 1.0, 5230, 
5234, drop(java.awt.dnd.DropTargetDropEvent, java.util.ListIterator, java.util.List, java.lang.String, java.lang.String, java.awt.datatransfer.Transferable, freemind.view.mindmapview.NodeView, java.awt.datatransfer.Transferable, int, freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapNodeModel, boolean, freemind.modes.mindmapmode.MindMapMapModel, freemind.view.mindmapview.MainView, freemind.modes.mindmapmode.MindMapNodeModel, int, java.lang.Exception), 1.0, 5230, 
5235, dragEnter(java.awt.dnd.DropTargetDragEvent), 1.0, 5230, 
5236, dragOver(boolean, java.awt.dnd.DropTargetDragEvent, int, freemind.view.mindmapview.MainView, int), 1.0, 5230, 
5237, dragExit(java.awt.dnd.DropTargetEvent, freemind.view.mindmapview.MainView), 1.0, 5230, 
5238, dragScroll(java.awt.dnd.DropTargetDragEvent), 1.0, 5230, 
5239, dropActionChanged(java.awt.dnd.DropTargetDragEvent), 1.0, 5230, 
5241, MindMapNodeMotionListener(freemind.modes.mindmapmode.MindMapController), 1.0, 5240, 
5242, mouseMoved(java.awt.event.MouseEvent), 1.0, 5240, 
5243, mouseDragged(java.awt.Point, java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MapView, java.awt.Point, freemind.view.mindmapview.NodeMotionListenerView, freemind.modes.MindMapNode, freemind.modes.MindMapNode), 1.0, 5240, 
5247, mouseClicked(java.awt.event.MouseEvent, freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView), 1.0, 5240, 
5248, getNodeView(java.awt.event.MouseEvent), 1.0, 5240, 
5249, mouseEntered(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeMotionListenerView), 1.0, 5240, 
5250, mouseExited(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeMotionListenerView), 1.0, 5240, 
5251, stopDrag(), 0.0, 5240, 
5252, mouseReleased(java.awt.event.MouseEvent, freemind.modes.MindMapNode, int, int, freemind.view.mindmapview.NodeMotionListenerView, java.awt.Point, freemind.modes.MindMapNode, int, freemind.view.mindmapview.NodeView), 1.0, 5240, 
5253, resetPositions(freemind.modes.MindMapNode), 1.0, 5240, 
5254, isActive(), 0.0, 5240, 
5256, getDragStartingPoint(), 0.0, 5240, 
5258, run(java.awt.Rectangle, boolean), 0.0, 5257, 
5261, MindMapMouseMotionManager(freemind.modes.mindmapmode.MindMapController), 1.0, 5260, 
5262, mouseDragged(java.awt.event.MouseEvent, int, freemind.view.mindmapview.MapView, int), 1.0, 5260, 
5263, mousePressed(java.awt.event.MouseEvent), 1.0, 5260, 
5264, mouseReleased(java.awt.event.MouseEvent, java.awt.Point, java.awt.Point), 1.0, 5260, 
5267, filterAction(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 5266, 
5271, getDoAction(), 0.0, 5269, 
5272, getUndoAction(), 0.0, 5269, 
5273, reverse(), 0.0, 5269, 
5275, act(freemind.controller.actions.generated.instance.XmlAction), 1.0, 5274, 
5276, getDoActionClass(), 0.0, 5274, 
5279, actionPerformed(java.awt.event.ActionEvent), 1.0, 5277, 
5280, xmlActionPerformed(java.awt.event.ActionEvent), 1.0, 5277, 
5281, getActionFactory(), 0.0, 5277, 
5282, getMindMapController(), 0.0, 5277, 
5283, addActor(freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 5277, 
5284, getActor(), 0.0, 5277, 
5287, executeAction(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 5285, 
5288, startTransaction(java.lang.String), 1.0, 5285, 
5289, endTransaction(java.lang.String), 1.0, 5285, 
5291, AbstractActorXml(freemind.modes.mindmapmode.MindMapController), 1.0, 5290, 
5292, getNode(java.lang.String), 1.0, 5290, 
5293, getNodeID(freemind.modes.MindMapNode), 1.0, 5290, 
5294, getAttributeController(), 0.0, 5290, 
5295, getAttributeRegistry(), 0.0, 5290, 
5296, createCompoundAction(), 0.0, 5290, 
5298, executeAction(freemind.controller.actions.generated.instance.XmlAction), 1.0, 5297, 
5299, startTransaction(java.lang.String), 1.0, 5297, 
5300, endTransaction(java.lang.String), 1.0, 5297, 
5302, PrintActionHandler(freemind.modes.mindmapmode.MindMapController), 1.0, 5301, 
5303, startTransaction(java.lang.String), 1.0, 5301, 
5304, endTransaction(java.lang.String), 1.0, 5301, 
5305, executeAction(freemind.controller.actions.generated.instance.XmlAction, java.lang.String), 1.0, 5301, 
5307, ActionFactory(freemind.controller.Controller), 1.0, 5306, 
5308, registerHandler(freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 5306, 
5309, deregisterHandler(freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 5306, 
5310, registerFilter(freemind.modes.mindmapmode.actions.xml.ActionFilter), 1.0, 5306, 
5311, deregisterFilter(freemind.modes.mindmapmode.actions.xml.ActionFilter), 1.0, 5306, 
5312, startTransaction(java.lang.String, java.util.Iterator, freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 5306, 
5313, endTransaction(java.lang.String, java.util.Iterator, freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 5306, 
5314, executeAction(freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.mindmapmode.actions.xml.ActionPair, boolean, freemind.modes.mindmapmode.actions.xml.ActionFilter, Object[], int, freemind.modes.mindmapmode.actions.xml.ActionHandler, java.lang.Exception), 1.0, 5306, 
5315, getController(), 0.0, 5306, 
5317, deregisterActor(java.lang.Class), 1.0, 5306, 
5318, getActor(freemind.controller.actions.generated.instance.XmlAction, java.util.Iterator, java.lang.Class), 1.0, 5306, 
5319, registerUndoHandler(freemind.modes.mindmapmode.actions.xml.UndoActionHandler), 1.0, 5306, 
5321, getController(), 0.0, 5320, 
5322, NodeHookUndoableContentActor(freemind.modes.mindmapmode.MindMapController), 1.0, 5320, 
5328, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.HookContentNodeAction, freemind.modes.MindMapNode), 1.0, 5320, 
5329, getDoActionClass(), 0.0, 5320, 
5332, getControls(freemind.common.TextTranslator), 1.0, 5331, 
5337, AttributeTable(freemind.view.mindmapview.attributeview.AttributeView, freemind.modes.MindMapNode, int, freemind.modes.attributes.AttributeController), 1.0, 5336, 
5341, getPreferredScrollableViewportSize(java.awt.Dimension, float), 0.0, 5336, 
5342, getDefaultComboBoxModel(), 0.0, 5336, 
5344, changeSelectedRowHeight(int, int), 1.0, 5336, 
5345, updateAttributeTable(), 0.0, 5336, 
5346, updateColumnWidths(int, int, float), 0.0, 5336, 
5347, updateRowHeights(int, int, float, int, int, float, int, float), 0.0, 5336, 
5348, getTableHeaderHeight(javax.swing.table.JTableHeader), 0.0, 5336, 
5350, getZoom(), 0.0, 5336, 
5351, tableChanged(javax.swing.event.TableModelEvent, freemind.view.mindmapview.MapView), 1.0, 5336, 
5352, viewRemoved(), 0.0, 5336, 
5353, removeNotify(), 0.0, 5336, 
5354, getFontSize(), 0.0, 5336, 
5355, setModel(javax.swing.table.TableModel), 1.0, 5336, 
5356, removeListenerFromEditor(javax.swing.JComboBox), 0.0, 5336, 
5357, removeEditor(), 0.0, 5336, 
5358, getAttributeTableModel(), 0.0, 5336, 
5359, getAttributeView(), 0.0, 5336, 
5360, setOptimalColumnWidths(java.awt.Component, int, int, int, int), 0.0, 5336, 
5361, insertRow(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 5336, 
5362, removeRow(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 5336, 
5363, moveRowUp(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 5336, 
5364, moveRowDown(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 5336, 
5365, columnWidthChanged(freemind.modes.attributes.ColumnWidthChangeEvent, freemind.modes.attributes.AttributeTableLayoutModel, int, int, float), 1.0, 5336, 
5367, isVisible(), 0.0, 5336, 
5369, focusGained(java.awt.event.FocusEvent, java.awt.Component, java.awt.Component), 1.0, 5368, 
5370, focusLost(java.awt.event.FocusEvent, freemind.view.mindmapview.attributeview.AttributeView, java.awt.Component, java.awt.Component, java.lang.String), 1.0, 5368, 
5373, run(java.awt.Component, freemind.view.mindmapview.NodeView), 0.0, 5372, 
5376, mouseReleased(java.awt.event.MouseEvent, java.awt.Dimension, int, float, javax.swing.table.JTableHeader, freemind.view.mindmapview.attributeview.AttributeTable, int, int, javax.swing.JViewport, freemind.modes.attributes.AttributeTableModel, java.awt.Dimension), 1.0, 5375, 
5379, ExtendedAttributeTableModelDecorator(freemind.view.mindmapview.attributeview.AttributeView), 1.0, 5378, 
5380, getRowCount(), 0.0, 5378, 
5382, insertRow(int), 1.0, 5378, 
5384, removeRow(int), 1.0, 5378, 
5386, stateChanged(javax.swing.event.ChangeEvent), 1.0, 5378, 
5387, editingCanceled(int), 0.0, 5378, 
5388, areAttributesVisible(), 0.0, 5378, 
5389, moveRowUp(int, freemind.modes.attributes.Attribute), 1.0, 5378, 
5390, moveRowDown(int, freemind.modes.attributes.Attribute), 1.0, 5378, 
5392, AttributeViewScrollPane(freemind.view.mindmapview.attributeview.AttributeTable), 1.0, 5391, 
5393, getPreferredSize(), 0.0, 5391, 
5394, getMaximumSize(), 0.0, 5391, 
5395, isVisible(), 0.0, 5391, 
5397, AttributeTableModelDecoratorAdapter(freemind.view.mindmapview.attributeview.AttributeView, freemind.modes.MindMapNode), 1.0, 5396, 
5398, getNode(), 0.0, 5396, 
5399, getColumnCount(), 0.0, 5396, 
5400, getColumnClass(int), 1.0, 5396, 
5401, getColumnName(int), 1.0, 5396, 
5402, getColumnWidth(int), 1.0, 5396, 
5404, addListeners(), 0.0, 5396, 
5405, removeListeners(), 0.0, 5396, 
5406, viewRemoved(), 0.0, 5396, 
5407, tableChanged(javax.swing.event.TableModelEvent), 1.0, 5396, 
5408, editingCanceled(), 0.0, 5396, 
5409, areAttributesVisible(), 0.0, 5396, 
5411, AttributeView(freemind.view.mindmapview.NodeView), 1.0, 5410, 
5412, getAttributeRegistry(), 0.0, 5410, 
5413, getAttributes(), 0.0, 5410, 
5414, syncronizeAttributeView(), 0.0, 5410, 
5415, provideAttributeTable(), 0.0, 5410, 
5416, addListeners(), 0.0, 5410, 
5417, getModeController(), 0.0, 5410, 
5418, addTableModelListeners(freemind.modes.ModeController), 0.0, 5410, 
5419, removeListeners(), 0.0, 5410, 
5420, update(), 0.0, 5410, 
5421, areAttributesVisible(java.lang.String), 0.0, 5410, 
5422, getExtendedAttributeTableModel(), 0.0, 5410, 
5423, setViewType(javax.swing.table.JTableHeader, java.lang.String), 1.0, 5410, 
5424, getCurrentAttributeTableModel(), 0.0, 5410, 
5425, getNode(), 0.0, 5410, 
5426, stateChanged(javax.swing.event.ChangeEvent), 1.0, 5410, 
5427, getNodeView(), 0.0, 5410, 
5428, getMapView(), 0.0, 5410, 
5429, viewRemoved(), 0.0, 5410, 
5430, ancestorMoved(javax.swing.event.AncestorEvent), 1.0, 5410, 
5431, tableChanged(javax.swing.event.TableModelEvent, freemind.view.mindmapview.MapView), 1.0, 5410, 
5432, getViewType(), 0.0, 5410, 
5433, startEditing(), 0.0, 5410, 
5434, startEditingTable(), 0.0, 5410, 
5435, isPopupShown(), 0.0, 5410, 
5436, stopEditing(java.lang.String), 0.0, 5410, 
5438, run(), 0.0, 5437, 
5441, getOptimalWidth(), 0.0, 5440, 
5442, getInsert(), 0.0, 5440, 
5443, getDelete(), 0.0, 5440, 
5444, getUp(), 0.0, 5440, 
5445, getDown(), 0.0, 5440, 
5446, mouseClicked(java.awt.event.MouseEvent), 1.0, 5440, 
5447, mousePressed(java.awt.event.MouseEvent), 1.0, 5440, 
5448, mouseReleased(java.awt.event.MouseEvent), 1.0, 5440, 
5449, maybeShowPopup(java.awt.event.MouseEvent), 1.0, 5440, 
5450, make(int, freemind.modes.attributes.AttributeTableModel, java.lang.String), 0.0, 5440, 
5452, mouseEntered(java.awt.event.MouseEvent), 1.0, 5440, 
5453, mouseExited(java.awt.event.MouseEvent), 1.0, 5440, 
5454, firePopupMenuWillBecomeInvisible(), 0.0, 5440, 
5455, firePopupMenuWillBecomeVisible(), 0.0, 5440, 
5456, getTable(), 0.0, 5440, 
5459, actionPerformed(java.awt.event.ActionEvent), 1.0, 5458, 
5462, actionPerformed(java.awt.event.ActionEvent), 1.0, 5461, 
5465, actionPerformed(java.awt.event.ActionEvent), 1.0, 5464, 
5468, actionPerformed(java.awt.event.ActionEvent), 1.0, 5467, 
5471, actionPerformed(java.awt.event.ActionEvent), 1.0, 5470, 
5474, run(java.awt.Component, java.awt.KeyboardFocusManager), 0.0, 5473, 
5477, ReducedAttributeTableModelDecorator(freemind.view.mindmapview.attributeview.AttributeView), 1.0, 5476, 
5478, getIndex(), 0.0, 5476, 
5479, getRowCount(), 0.0, 5476, 
5482, calcRow(int), 1.0, 5476, 
5485, addRow(freemind.modes.attributes.Attribute), 1.0, 5476, 
5486, removeRow(int), 1.0, 5476, 
5487, stateChanged(javax.swing.event.ChangeEvent), 1.0, 5476, 
5488, rebuildTableModel(int, java.lang.String), 0.0, 5476, 
5489, tableChanged(javax.swing.event.TableModelEvent), 1.0, 5476, 
5490, areAttributesVisible(), 0.0, 5476, 
5493, paint(java.awt.Graphics, java.awt.Graphics2D, java.awt.geom.AffineTransform), 1.0, 5491, 
5494, getHeight(), 0.0, 5491, 
5495, getWidth(), 0.0, 5491, 
5499, DatabaseBasics(), 0.0, 5498, 
5500, startupMapHook(), 0.0, 5498, 
5501, togglePermanentHook(freemind.modes.mindmapmode.MindMapController, freemind.modes.MindMapNode, java.util.List), 1.0, 5498, 
5502, setPortProperty(freemind.common.NumberProperty), 1.0, 5498, 
5503, getPortProperty(freemind.common.NumberProperty), 0.0, 5498, 
5504, setUpdateThread(plugins.collaboration.database.UpdateThread), 1.0, 5498, 
5505, getUpdateThread(), 0.0, 5498, 
5507, processResults(java.sql.ResultSet), 1.0, 5506, 
5509, isValid(), 0.0, 5508, 
5512, isSuccess(), 0.0, 5511, 
5513, FormDialog(freemind.modes.mindmapmode.MindMapController), 1.0, 5511, 
5514, setUp(java.util.Vector), 1.0, 5511, 
5516, closeWindow(), 0.0, 5511, 
5517, getText(java.lang.String), 1.0, 5511, 
5518, propertyChange(java.beans.PropertyChangeEvent), 1.0, 5511, 
5520, isValid(), 0.0, 5519, 
5522, actionPerformed(java.awt.event.ActionEvent), 1.0, 5521, 
5525, actionPerformed(java.awt.event.ActionEvent), 1.0, 5524, 
5528, windowClosing(java.awt.event.WindowEvent), 1.0, 5527, 
5530, actionPerformed(java.awt.event.ActionEvent), 1.0, 5529, 
5532, actionPerformed(java.awt.event.ActionEvent), 1.0, 5531, 
5535, run(java.lang.String, java.lang.Exception), 0.0, 5533, 
5536, commitSuicide(int, java.lang.InterruptedException), 0.0, 5533, 
5537, shutdown(boolean, java.sql.Statement, java.lang.Exception), 1.0, 5533, 
5538, processResults(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, java.sql.ResultSet, java.lang.String, long, java.lang.String, java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.Exception), 1.0, 5533, 
5539, createNewMap(freemind.modes.mindmapmode.MindMapController, java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel, java.io.StringReader, java.util.Iterator, java.util.HashMap, java.util.Collection, freemind.extensions.PermanentNodeHook, plugins.collaboration.database.DatabaseConnectionHook, freemind.modes.MapAdapter), 1.0, 5533, 
5540, executeTransaction(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 5533, 
5541, insertIntoActionTable(java.lang.String), 1.0, 5533, 
5543, update(java.sql.Statement, java.lang.String, int), 1.0, 5533, 
5544, filterAction(freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.String, java.lang.String, java.lang.String, java.sql.SQLException), 1.0, 5533, 
5545, escapeQuotations(java.lang.String), 1.0, 5533, 
5546, deregisterFilter(), 0.0, 5533, 
5547, registerFilter(), 0.0, 5533, 
5548, setupTables(java.lang.String, java.io.StringWriter, java.lang.String), 1.0, 5533, 
5549, createTables(java.lang.String), 1.0, 5533, 
5550, signalEndOfSession(java.lang.String, java.lang.Exception), 0.0, 5533, 
5552, run(), 0.0, 5551, 
5555, startupMapHook(freemind.modes.mindmapmode.MindMapController, java.sql.Connection, freemind.common.NumberProperty, plugins.collaboration.database.DatabaseBasics.FormDialog, freemind.common.StringProperty, freemind.common.StringProperty, java.util.Vector, plugins.collaboration.database.DatabaseConnectionHook, java.lang.String, java.lang.Exception), 0.0, 5554, 
5556, isConnected(freemind.extensions.PermanentNodeHook, java.util.Iterator, java.util.Collection), 0.0, 5554, 
5558, startupMapHook(), 0.0, 5557, 
5559, loadFrom(freemind.main.XMLElement), 1.0, 5557, 
5560, save(freemind.main.XMLElement), 1.0, 5557, 
5561, shutdownMapHook(), 0.0, 5557, 
5562, shutdownConnection(), 0.0, 5557, 
5563, onAddChild(freemind.modes.MindMapNode), 1.0, 5557, 
5564, onAddChildren(freemind.modes.MindMapNode), 1.0, 5557, 
5565, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 5557, 
5566, onNewChild(freemind.modes.MindMapNode), 1.0, 5557, 
5567, onRemoveChild(freemind.modes.MindMapNode), 1.0, 5557, 
5569, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 5557, 
5570, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 5557, 
5571, onUpdateNodeHook(), 0.0, 5557, 
5572, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 5557, 
5573, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 5557, 
5575, startupMapHook(java.sql.Connection, freemind.modes.mindmapmode.MindMapController, java.lang.Thread, freemind.common.StringProperty, plugins.collaboration.database.DatabaseBasics.FormDialog, freemind.common.NumberProperty, java.lang.String, java.lang.String, freemind.common.StringProperty, java.util.Vector, java.lang.Exception), 0.0, 5574, 
5576, loadFrom(freemind.main.XMLElement), 1.0, 5574, 
5577, save(freemind.main.XMLElement), 1.0, 5574, 
5578, shutdownMapHook(), 0.0, 5574, 
5579, onAddChild(freemind.modes.MindMapNode), 1.0, 5574, 
5580, onAddChildren(freemind.modes.MindMapNode), 1.0, 5574, 
5581, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 5574, 
5582, onNewChild(freemind.modes.MindMapNode), 1.0, 5574, 
5583, onRemoveChild(freemind.modes.MindMapNode), 1.0, 5574, 
5585, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 5574, 
5586, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 5574, 
5587, onUpdateNodeHook(), 0.0, 5574, 
5588, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 5574, 
5589, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 5574, 
5591, isValid(), 0.0, 5590, 
5593, run(), 0.0, 5592, 
5597, register(), 0.0, 5595, 
5598, deRegister(), 0.0, 5595, 
5600, isMaster(java.util.Collection, java.util.Iterator, freemind.extensions.PermanentNodeHook), 0.0, 5595, 
5601, isSlave(freemind.extensions.PermanentNodeHook, java.util.Iterator, java.util.Collection), 0.0, 5595, 
5606, toString(), 0.0, 5604, 
5607, rename(), 0.0, 5604, 
5608, getModel(), 0.0, 5604, 
5609, getView(), 0.0, 5604, 
5610, getMode(), 0.0, 5604, 
5611, setName(java.lang.String), 1.0, 5604, 
5612, getModeController(), 0.0, 5604, 
5613, getName(), 0.0, 5604, 
5614, getDisplayName(), 0.0, 5604, 
5615, setDisplayName(java.lang.String), 1.0, 5604, 
5618, FilterController(freemind.controller.Controller), 1.0, 5617, 
5619, getConditionRenderer(), 0.0, 5617, 
5620, getFilterToolbar(), 0.0, 5617, 
5621, showFilterToolbar(boolean, freemind.controller.filter.Filter), 1.0, 5617, 
5622, refreshMap(), 0.0, 5617, 
5623, getConditionFactory(), 0.0, 5617, 
5624, getMap(), 0.0, 5617, 
5625, setFilterToolbar(freemind.controller.filter.FilterToolbar), 1.0, 5617, 
5630, numberOfOpenMapInformation(int), 1.0, 5617, 
5631, createTransparentFilter(), 0.0, 5617, 
5632, saveConditions(), 0.0, 5617, 
5633, getFilterConditionModel(), 0.0, 5617, 
5634, setFilterConditionModel(javax.swing.DefaultComboBoxModel), 1.0, 5617, 
5638, getFileChooser(javax.swing.JFileChooser, freemind.modes.ModeController), 0.0, 5637, 
5640, getAttributeValue(freemind.modes.MindIcon, java.lang.Object), 0.0, 5637, 
5641, mapChanged(freemind.modes.MindMap), 1.0, 5637, 
5642, selectCondition(int, int), 0.0, 5637, 
5643, setSelectedItem(java.lang.Object), 1.0, 5637, 
5644, show(), 0.0, 5637, 
5645, initInternalConditionModel(int, int, java.lang.Object), 0.0, 5637, 
5646, applyChanges(), 0.0, 5637, 
5648, AddConditionAction(), 0.0, 5647, 
5649, actionPerformed(java.lang.String, freemind.controller.filter.condition.Condition, java.awt.event.ActionEvent, javax.swing.DefaultComboBoxModel, java.lang.String, java.lang.Object, freemind.common.NamedObject, boolean, java.lang.Object, java.lang.NullPointerException), 1.0, 5647, 
5651, DeleteConditionAction(), 0.0, 5650, 
5652, actionPerformed(int, java.awt.event.ActionEvent, javax.swing.DefaultComboBoxModel, int, int), 1.0, 5650, 
5654, CreateNotSatisfiedConditionAction(), 0.0, 5653, 
5655, actionPerformed(freemind.controller.filter.condition.Condition, java.awt.event.ActionEvent, freemind.controller.filter.condition.Condition, int, int, javax.swing.DefaultComboBoxModel), 1.0, 5653, 
5657, CreateConjunctConditionAction(), 0.0, 5656, 
5658, actionPerformed(Object[], java.awt.event.ActionEvent, javax.swing.DefaultComboBoxModel, freemind.controller.filter.condition.Condition), 1.0, 5656, 
5660, CreateDisjunctConditionAction(), 0.0, 5659, 
5661, actionPerformed(Object[], java.awt.event.ActionEvent, freemind.controller.filter.condition.Condition, javax.swing.DefaultComboBoxModel), 1.0, 5659, 
5663, valueChanged(javax.swing.event.ListSelectionEvent), 1.0, 5662, 
5664, intervalAdded(javax.swing.event.ListDataEvent), 1.0, 5662, 
5665, intervalRemoved(javax.swing.event.ListDataEvent), 1.0, 5662, 
5666, contentsChanged(javax.swing.event.ListDataEvent), 1.0, 5662, 
5669, mouseClicked(java.awt.event.MouseEvent), 1.0, 5668, 
5672, run(), 0.0, 5671, 
5675, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 5674, 
5678, accept(java.io.File, java.lang.String), 1.0, 5677, 
5679, getDescription(), 0.0, 5677, 
5682, actionPerformed(java.lang.String, java.awt.event.ActionEvent, javax.swing.JFileChooser, java.io.File, int, java.lang.String, java.lang.Exception), 1.0, 5681, 
5683, handleSavingException(java.lang.Exception), 1.0, 5681, 
5686, actionPerformed(java.awt.event.ActionEvent, javax.swing.JFileChooser, java.io.File, int, java.lang.Exception), 1.0, 5685, 
5687, handleLoadingException(java.lang.Exception), 1.0, 5685, 
5690, itemStateChanged(java.awt.event.ItemEvent, boolean), 1.0, 5689, 
5693, itemStateChanged(java.awt.event.ItemEvent, java.lang.String), 1.0, 5692, 
5696, FilterToolbar(freemind.controller.Controller), 1.0, 5695, 
5697, addStandardConditions(javax.swing.DefaultComboBoxModel, freemind.controller.filter.condition.Condition), 0.0, 5695, 
5698, initConditions(java.lang.Exception), 0.0, 5695, 
5699, resetFilter(), 0.0, 5695, 
5700, getSelectedCondition(), 0.0, 5695, 
5701, setMapFilter(freemind.modes.MindMap), 0.0, 5695, 
5702, getFilterDialog(), 0.0, 5695, 
5703, mapChanged(freemind.controller.filter.Filter, freemind.modes.MindMap), 1.0, 5695, 
5704, refreshMap(), 0.0, 5695, 
5705, saveConditions(java.lang.Exception), 0.0, 5695, 
5706, getFilterConditionModel(), 0.0, 5695, 
5707, setFilterConditionModel(javax.swing.ComboBoxModel), 1.0, 5695, 
5709, FilterChangeListener(), 0.0, 5708, 
5710, actionPerformed(java.awt.event.ActionEvent), 1.0, 5708, 
5711, itemStateChanged(java.awt.event.ItemEvent), 1.0, 5708, 
5712, filterChanged(freemind.modes.MindMap), 0.0, 5708, 
5713, propertyChange(java.beans.PropertyChangeEvent), 1.0, 5708, 
5715, EditFilterAction(), 0.0, 5714, 
5716, getFilterDialog(), 0.0, 5714, 
5717, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 5714, 
5719, UnfoldAncestorsAction(), 0.0, 5718, 
5720, unfoldAncestors(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 5718, 
5722, actionPerformed(java.awt.event.ActionEvent), 1.0, 5718, 
5724, getMaximumSize(), 0.0, 5723, 
5727, applyFilter(freemind.controller.Controller, freemind.modes.MindMapNode, freemind.modes.MindMap, freemind.view.mindmapview.MapView), 1.0, 5725, 
5728, selectVisibleNode(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MapView, freemind.view.mindmapview.NodeView, int, java.util.ListIterator, java.util.LinkedList), 1.0, 5725, 
5729, getNearestVisibleParent(freemind.view.mindmapview.NodeView), 1.0, 5725, 
5732, isVisible(freemind.modes.MindMapNode, int), 1.0, 5725, 
5733, resetFilter(freemind.modes.MindMapNode), 1.0, 5725, 
5735, areMatchedShown(), 0.0, 5725, 
5736, areHiddenShown(), 0.0, 5725, 
5737, areAncestorsShown(), 0.0, 5725, 
5738, areDescendantsShown(), 0.0, 5725, 
5739, areEclipsedShown(), 0.0, 5725, 
5740, getCondition(), 0.0, 5725, 
5742, FilterInfo(), 0.0, 5741, 
5743, reset(), 0.0, 5741, 
5744, setAncestor(), 0.0, 5741, 
5745, setDescendant(), 0.0, 5741, 
5746, setMatched(), 0.0, 5741, 
5747, add(int), 1.0, 5741, 
5748, get(), 0.0, 5741, 
5749, isAncestor(), 0.0, 5741, 
5750, isMatched(), 0.0, 5741, 
5752, applyFilter(freemind.controller.Controller), 1.0, 5751, 
5753, isVisible(freemind.modes.MindMapNode), 1.0, 5751, 
5754, areMatchedShown(), 0.0, 5751, 
5755, areHiddenShown(), 0.0, 5751, 
5756, areAncestorsShown(), 0.0, 5751, 
5757, areDescendantsShown(), 0.0, 5751, 
5758, areEclipsedShown(), 0.0, 5751, 
5759, getCondition(), 0.0, 5751, 
5763, keyTyped(java.awt.event.KeyEvent), 1.0, 5761, 
5764, keyPressed(boolean, java.awt.event.KeyEvent), 1.0, 5761, 
5765, keyReleased(java.awt.event.KeyEvent), 1.0, 5761, 
5769, CommonToggleFoldedAction(freemind.modes.ControllerAdapter), 1.0, 5768, 
5770, actionPerformed(java.awt.event.ActionEvent), 1.0, 5768, 
5771, toggleFolded(), 0.0, 5768, 
5772, toggleFolded(java.util.ListIterator, freemind.modes.MindMapNode, boolean, java.util.Iterator), 1.0, 5768, 
5773, reset(java.util.ListIterator), 1.0, 5768, 
5774, getFoldingState(boolean, boolean, freemind.main.Tools.BooleanHolder, java.util.ListIterator, java.util.ListIterator, freemind.modes.MindMapNode), 1.0, 5768, 
5777, actionPerformed(java.awt.event.ActionEvent), 1.0, 5775, 
5780, CompileXsdStart(java.io.InputStream), 1.0, 5779, 
5781, main(String[], de.foltin.CompileXsdStart), 1.0, 5779, 
5782, print(java.util.Iterator, java.io.File, java.lang.String, java.io.FileOutputStream, java.lang.String, java.util.Iterator, java.lang.String, java.util.HashMap), 0.0, 5779, 
5783, generate(javax.xml.parsers.SAXParserFactory, javax.xml.parsers.SAXParser), 0.0, 5779, 
5785, createClass(java.lang.String, java.util.HashMap), 1.0, 5779, 
5787, firstLetterCapitalized(java.lang.String), 1.0, 5779, 
5788, getNameFromXml(java.lang.String, java.lang.String, java.util.StringTokenizer), 1.0, 5779, 
5789, getType(java.lang.String), 1.0, 5779, 
5791, ElementTypes(int), 1.0, 5790, 
5792, getId(), 0.0, 5790, 
5794, XsdHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5793, 
5795, getClassName(), 0.0, 5793, 
5796, getClassMap(java.lang.String), 0.0, 5793, 
5798, addArrayListImport(), 0.0, 5793, 
5799, getExtendsClassName(), 0.0, 5793, 
5802, createElementHandler(), 0.0, 5793, 
5804, startClass(java.lang.String, org.xml.sax.Attributes, java.util.HashMap, java.lang.String), 1.0, 5793, 
5806, ExtensionHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5805, 
5809, SchemaHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5808, 
5811, ChoiceHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5810, 
5812, createElementHandler(), 0.0, 5810, 
5813, isSingleChoice(), 0.0, 5810, 
5817, ChoiceElementHandler(de.foltin.CompileXsdStart.XsdHandler, de.foltin.CompileXsdStart.ChoiceHandler), 1.0, 5816, 
5820, GroupHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5819, 
5823, SequenceHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5822, 
5824, createElementHandler(), 0.0, 5822, 
5826, SequenceElementHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5825, 
5829, ComplexTypeHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5828, 
5833, ComplexContentHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5832, 
5835, AttributeHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 5834, 
5839, toString(java.lang.String, java.awt.event.KeyEvent), 1.0, 5838, 
5842, getShortcut(), 0.0, 5838, 
5843, isOK(), 0.0, 5838, 
5844, isManagingFocus(), 0.0, 5838, 
5845, getFocusTraversalKeysEnabled(), 0.0, 5838, 
5846, processKeyEvent(java.awt.event.KeyEvent), 1.0, 5838, 
5848, getSymbolicName(Field[], int, java.lang.String, int, java.lang.reflect.Field, java.lang.Exception), 1.0, 5838, 
5849, updateAssignedTo(java.lang.String, freemind.preferences.layout.GrabKeyDialog.KeyBinding, java.lang.String), 1.0, 5838, 
5850, getKeyBinding(freemind.preferences.layout.GrabKeyDialog.KeyBinding, java.lang.String, java.lang.String, java.lang.String, java.util.Enumeration), 1.0, 5838, 
5851, getText(java.lang.String), 1.0, 5838, 
5852, getModifierMask(), 0.0, 5838, 
5853, isMacOS(), 0.0, 5838, 
5855, getLength(), 0.0, 5854, 
5858, isManagingFocus(), 0.0, 5857, 
5859, getFocusTraversalKeysEnabled(), 0.0, 5857, 
5862, isAssigned(), 0.0, 5860, 
5864, getFocusTraversalKeysEnabled(), 0.0, 5863, 
5865, processKeyEvent(java.awt.event.KeyEvent, java.awt.event.KeyEvent, freemind.preferences.layout.KeyEventTranslator.Key, java.lang.String, java.lang.StringBuffer), 1.0, 5863, 
5868, actionPerformed(java.awt.event.ActionEvent), 1.0, 5867, 
5869, canClose(freemind.preferences.layout.GrabKeyDialog.KeyBinding, java.lang.String, int), 0.0, 5867, 
5873, setProperties(java.util.Iterator, freemind.common.PropertyControl, java.lang.String, java.lang.String, freemind.common.PropertyBean), 0.0, 5871, 
5874, getOptionProperties(freemind.common.PropertyControl, java.util.Iterator, java.lang.String, java.util.Properties, freemind.common.PropertyBean), 0.0, 5871, 
5875, buildPanel(com.jgoodies.forms.layout.FormLayout, java.lang.String, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JPanel, javax.swing.JScrollPane, com.jgoodies.forms.layout.FormLayout, java.awt.CardLayout, freemind.preferences.layout.OptionPanel.ChangeTabAction, javax.swing.JButton, freemind.common.PropertyControl, javax.swing.JButton, java.util.Iterator, freemind.preferences.layout.OptionPanel.NewTabProperty, javax.swing.JButton, com.jgoodies.forms.builder.DefaultFormBuilder, javax.swing.JSplitPane), 0.0, 5871, 
5876, getText(java.lang.String), 1.0, 5871, 
5877, checkConnectionToFreeMindMain(), 0.0, 5871, 
5879, getTabButton(java.lang.String), 1.0, 5871, 
5880, getAllButtons(), 0.0, 5871, 
5881, getControls(java.util.Vector, java.lang.String, freemind.modes.ModeController, String[], java.lang.String, LookAndFeelInfo[], java.util.Vector, java.util.Iterator, freemind.modes.mindmapmode.MindMapController, javax.swing.UIManager.LookAndFeelInfo, java.lang.String, freemind.preferences.layout.OptionPanel.KeyProperty, java.util.Iterator, java.lang.String, freemind.preferences.FreemindPropertyContributor, int, java.util.Vector, java.util.Vector, int), 0.0, 5871, 
5882, closeWindow(freemind.controller.actions.generated.instance.OptionPanelWindowConfigurationStorage), 0.0, 5871, 
5883, addContributor(freemind.preferences.FreemindPropertyContributor), 1.0, 5871, 
5884, removeContributor(freemind.preferences.FreemindPropertyContributor), 1.0, 5871, 
5886, writeProperties(java.util.Properties), 1.0, 5885, 
5888, actionPerformed(java.awt.event.ActionEvent), 1.0, 5887, 
5891, actionPerformed(java.awt.event.ActionEvent), 1.0, 5890, 
5895, actionPerformed(java.awt.event.ActionEvent, javax.swing.JButton, java.util.Collection, java.util.Iterator), 1.0, 5893, 
5897, NewTabProperty(java.lang.String), 1.0, 5896, 
5899, getDescription(), 0.0, 5896, 
5900, getLabel(), 0.0, 5896, 
5902, setEnabled(boolean), 1.0, 5896, 
5905, disableModifiers(), 0.0, 5903, 
5906, getDescription(), 0.0, 5903, 
5907, getLabel(), 0.0, 5903, 
5908, setValue(java.lang.String), 1.0, 5903, 
5909, getValue(), 0.0, 5903, 
5911, setEnabled(boolean), 1.0, 5903, 
5912, setLabelText(java.lang.String), 1.0, 5903, 
5913, setImageIcon(javax.swing.ImageIcon), 1.0, 5903, 
5915, actionPerformed(java.util.Vector, java.awt.event.ActionEvent, freemind.preferences.layout.GrabKeyDialog), 1.0, 5914, 
5918, getText(java.lang.String), 1.0, 5917, 
5922, translateKeyEvent(char, int, java.awt.event.KeyEvent, int, freemind.preferences.layout.KeyEventTranslator.Key, freemind.preferences.layout.KeyEventTranslator.Key, int), 1.0, 5920, 
5923, parseKey(int, int, java.lang.String, java.lang.String, int, int, java.lang.Exception), 1.0, 5920, 
5925, getSymbolicModifierName(int), 1.0, 5920, 
5926, modifiersToString(java.lang.StringBuffer, int), 1.0, 5920, 
5927, getModifierString(java.awt.event.InputEvent, java.lang.StringBuffer), 1.0, 5920, 
5930, hashCode(), 0.0, 5928, 
5931, equals(java.lang.Object, freemind.preferences.layout.KeyEventTranslator.Key), 1.0, 5928, 
5932, toString(), 0.0, 5928, 
5934, VariableSizeCardLayout(), 0.0, 5933, 
5936, preferredLayoutSize(java.awt.Dimension, int, int, java.awt.Container, java.awt.Insets, int, java.awt.Component, int), 1.0, 5933, 
5938, processKeyEvent(int, char, java.awt.event.KeyEvent), 1.0, 5937, 
5939, numericKeypadKey(), 0.0, 5937, 
5942, SetAttributeNameActor(freemind.modes.mindmapmode.MindMapController), 1.0, 5941, 
5945, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeNameElementaryAction), 1.0, 5941, 
5947, getDoActionClass(), 0.0, 5941, 
5949, UnregistryAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 5948, 
5950, createAction(java.lang.String, freemind.controller.actions.generated.instance.UnregistryAttributeElementaryAction), 1.0, 5948, 
5951, createActionPair(java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 5948, 
5952, createUndoAction(java.lang.String, freemind.controller.filter.util.SortedComboBoxModel, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, java.lang.String, freemind.controller.actions.generated.instance.CompoundAction, int), 1.0, 5948, 
5953, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UnregistryAttributeElementaryAction), 1.0, 5948, 
5954, act(java.lang.String, freemind.modes.attributes.AttributeRegistry), 1.0, 5948, 
5955, getDoActionClass(), 0.0, 5948, 
5957, attributesChanged(javax.swing.event.ChangeEvent), 1.0, 5956, 
5959, SetAttributeVisibleActor(freemind.modes.mindmapmode.MindMapController), 1.0, 5958, 
5962, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeVisibleElementaryAction), 1.0, 5958, 
5964, getDoActionClass(), 0.0, 5958, 
5966, SetAttributeRestrictedActor(freemind.modes.mindmapmode.MindMapController), 1.0, 5965, 
5969, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeRestrictedElementaryAction), 1.0, 5965, 
5971, getDoActionClass(), 0.0, 5965, 
5974, show(), 0.0, 5972, 
5975, performImport(boolean, javax.swing.tree.DefaultMutableTreeNode, java.lang.String, javax.swing.tree.DefaultMutableTreeNode, java.lang.String, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, int, int, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo), 1.0, 5972, 
5976, createMapSubTrees(freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, java.lang.String, javax.swing.tree.DefaultMutableTreeNode, freemind.view.MapModule, freemind.controller.MapModuleManager, java.util.Iterator, freemind.modes.MindMap, javax.swing.tree.DefaultMutableTreeNode, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, java.util.Map.Entry, freemind.modes.MindMap), 1.0, 5972, 
5979, valueChanged(int, javax.swing.event.TreeSelectionEvent, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, javax.swing.tree.DefaultMutableTreeNode), 1.0, 5972, 
5983, TreeNodeInfo(java.lang.String), 1.0, 5982, 
5984, getSelected(), 0.0, 5982, 
5985, setSelected(int), 1.0, 5982, 
5986, getInfo(), 0.0, 5982, 
5987, toString(), 0.0, 5982, 
5990, isRestricted(), 0.0, 5988, 
5992, MyRenderer(), 0.0, 5991, 
5995, actionPerformed(java.awt.event.ActionEvent), 1.0, 5994, 
5998, actionPerformed(java.awt.event.ActionEvent), 1.0, 5997, 
6001, UnregistryAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6000, 
6004, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UnregistryAttributeValueElementaryAction), 1.0, 6000, 
6006, getDoActionClass(), 0.0, 6000, 
6009, updateButtons(int, boolean, java.lang.String), 0.0, 6007, 
6010, getCurrentText(javax.swing.text.Document, java.lang.String, javax.swing.text.BadLocationException), 0.0, 6007, 
6011, selectText(), 0.0, 6007, 
6013, getIndexOf(java.lang.String, int), 1.0, 6007, 
6015, update(), 0.0, 6014, 
6016, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 6014, 
6017, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 6014, 
6018, changedUpdate(javax.swing.event.DocumentEvent), 1.0, 6014, 
6021, valueChanged(javax.swing.event.ListSelectionEvent, int, int), 1.0, 6020, 
6024, actionPerformed(java.awt.event.ActionEvent), 1.0, 6023, 
6027, actionPerformed(Object[], java.awt.event.ActionEvent, int), 1.0, 6026, 
6030, actionPerformed(Object[], java.awt.event.ActionEvent, int), 1.0, 6029, 
6033, actionPerformed(java.awt.event.ActionEvent), 1.0, 6032, 
6038, mouseClicked(java.awt.event.MouseEvent), 1.0, 6037, 
6040, MindMapModeAttributeController(freemind.modes.mindmapmode.MindMapController), 1.0, 6039, 
6042, endTransaction(java.lang.String), 1.0, 6039, 
6043, startTransaction(java.lang.String), 1.0, 6039, 
6053, performRemoveAttribute(java.lang.String, freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.MindMapNode, freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Iterator), 1.0, 6039, 
6054, performRegistryAttribute(java.lang.String, freemind.modes.attributes.AttributeRegistryElement, freemind.modes.mindmapmode.actions.xml.ActionPair, java.util.NoSuchElementException), 1.0, 6039, 
6056, getAttributeRegistry(), 0.0, 6039, 
6057, performRegistrySubtreeAttributes(freemind.modes.mindmapmode.MindMapNodeModel, int, java.util.ListIterator, java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String), 1.0, 6039, 
6059, visit(freemind.modes.attributes.NodeAttributeTableModel), 1.0, 6058, 
6062, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6060, 
6065, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6063, 
6067, AttributeRemover(java.lang.Object), 1.0, 6066, 
6068, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6066, 
6071, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6069, 
6073, Iterator(freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor), 1.0, 6072, 
6074, iterate(freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.ListIterator), 1.0, 6072, 
6076, SetAttributeColumnWidthActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6075, 
6079, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeColumnWidthElementaryAction), 1.0, 6075, 
6081, getDoActionClass(), 0.0, 6075, 
6083, applyChanges(java.lang.Object, int), 0.0, 6082, 
6084, resetChanges(int), 0.0, 6082, 
6085, AttributeManagerDialog(freemind.controller.Controller, javax.swing.JButton, javax.swing.JScrollPane, javax.swing.JButton, javax.swing.Box, javax.swing.JButton, javax.swing.JButton), 1.0, 6082, 
6089, numberOfOpenMapInformation(int), 1.0, 6082, 
6092, ApplyAction(), 0.0, 6091, 
6093, actionPerformed(java.awt.event.ActionEvent), 1.0, 6091, 
6095, OKAction(), 0.0, 6094, 
6096, actionPerformed(java.awt.event.ActionEvent), 1.0, 6094, 
6098, CancelAction(), 0.0, 6097, 
6099, actionPerformed(java.awt.event.ActionEvent), 1.0, 6097, 
6101, ImportAction(), 0.0, 6100, 
6102, actionPerformed(java.awt.event.ActionEvent), 1.0, 6100, 
6104, EditListAction(), 0.0, 6103, 
6105, actionPerformed(java.awt.event.ActionEvent), 1.0, 6103, 
6106, getRow(), 0.0, 6103, 
6107, setRow(int), 1.0, 6103, 
6110, windowClosing(java.awt.event.WindowEvent), 1.0, 6109, 
6113, itemStateChanged(java.awt.event.ItemEvent), 1.0, 6112, 
6116, componentShown(java.awt.event.ComponentEvent), 1.0, 6115, 
6118, RemoveAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6117, 
6121, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.DeleteAttributeElementaryAction), 1.0, 6117, 
6123, getDoActionClass(), 0.0, 6117, 
6125, RegistryAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6124, 
6126, createAction(java.lang.String, freemind.controller.actions.generated.instance.RegistryAttributeElementaryAction), 1.0, 6124, 
6127, createActionPair(java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6124, 
6128, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RegistryAttributeElementaryAction), 1.0, 6124, 
6129, act(java.lang.String, freemind.modes.attributes.AttributeRegistry, int, freemind.modes.attributes.AttributeRegistryElement), 1.0, 6124, 
6130, getDoActionClass(), 0.0, 6124, 
6132, InsertAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6131, 
6135, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.InsertAttributeElementaryAction), 1.0, 6131, 
6137, getDoActionClass(), 0.0, 6131, 
6139, ReplaceAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6138, 
6142, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.ReplaceAttributeValueElementaryAction), 1.0, 6138, 
6144, getDoActionClass(), 0.0, 6138, 
6146, RegistryAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6145, 
6149, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RegistryAttributeValueElementaryAction), 1.0, 6145, 
6151, getDoActionClass(), 0.0, 6145, 
6153, SetAttributeFontSizeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6152, 
6154, createAction(int, freemind.controller.actions.generated.instance.SetAttributeFontSizeElementaryAction), 1.0, 6152, 
6155, createActionPair(int, freemind.modes.mindmapmode.actions.xml.ActionPair, int), 1.0, 6152, 
6156, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeFontSizeElementaryAction), 1.0, 6152, 
6157, act(int), 1.0, 6152, 
6158, getDoActionClass(), 0.0, 6152, 
6160, AssignAttributeDialog(java.awt.Dimension, java.lang.String, freemind.view.mindmapview.MapView, javax.swing.Box, javax.swing.border.Border, javax.swing.border.Border, javax.swing.JButton, javax.swing.Box, javax.swing.JButton, javax.swing.Box, javax.swing.JButton, javax.swing.Box, javax.swing.JLabel, javax.swing.JButton, javax.swing.ButtonGroup, javax.swing.Box, javax.swing.Box, javax.swing.border.Border, javax.swing.JButton, javax.swing.Box), 1.0, 6159, 
6161, mapChanged(freemind.view.mindmapview.MapView, freemind.modes.attributes.AttributeRegistry, freemind.modes.MindMap), 1.0, 6159, 
6163, attributesChanged(javax.swing.event.ChangeEvent), 1.0, 6159, 
6164, attributesChanged(javax.swing.ComboBoxModel, freemind.modes.attributes.AttributeRegistry, java.lang.Object), 0.0, 6159, 
6168, numberOfOpenMapInformation(int), 1.0, 6159, 
6171, ClonedComboBoxModel(javax.swing.ComboBoxModel), 1.0, 6170, 
6172, addListDataListener(javax.swing.event.ListDataListener), 1.0, 6170, 
6173, getElementAt(int), 1.0, 6170, 
6174, getSize(), 0.0, 6170, 
6175, removeListDataListener(javax.swing.event.ListDataListener), 1.0, 6170, 
6176, setSelectedItem(java.lang.Object), 1.0, 6170, 
6177, getContentChangedEvent(), 0.0, 6170, 
6178, getSelectedItem(), 0.0, 6170, 
6180, actionPerformed(java.awt.event.ActionEvent, freemind.view.mindmapview.NodeView, java.util.ListIterator, java.util.LinkedList, freemind.view.mindmapview.NodeView, java.lang.NullPointerException), 1.0, 6179, 
6181, iterate(freemind.view.mindmapview.NodeView, int, int, java.awt.Component), 1.0, 6179, 
6182, performAction(freemind.view.mindmapview.NodeView), 1.0, 6179, 
6183, performAction(freemind.modes.MindMapNode), 1.0, 6179, 
6184, showEmptyStringErrorMessage(), 0.0, 6179, 
6186, performAction(freemind.modes.MindMapNode, freemind.modes.attributes.NodeAttributeTableModel), 1.0, 6185, 
6187, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 6185, 
6190, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 6189, 
6191, performAction(freemind.modes.MindMapNode, freemind.modes.attributes.NodeAttributeTableModel, int), 1.0, 6189, 
6194, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 6193, 
6195, performAction(freemind.modes.MindMapNode, freemind.modes.attributes.NodeAttributeTableModel, freemind.modes.attributes.Attribute, int), 1.0, 6193, 
6198, actionPerformed(java.awt.event.ActionEvent, java.lang.Object, java.lang.Object), 1.0, 6197, 
6199, performAction(freemind.modes.MindMapNode, int, freemind.modes.attributes.NodeAttributeTableModel, freemind.modes.attributes.Attribute), 1.0, 6197, 
6202, itemStateChanged(java.awt.event.ItemEvent), 1.0, 6201, 
6205, itemStateChanged(java.awt.event.ItemEvent), 1.0, 6204, 
6208, actionPerformed(java.awt.event.ActionEvent), 1.0, 6207, 
6211, AttributeRegistryTable(freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.EditListAction), 1.0, 6210, 
6212, setModel(javax.swing.table.TableModel, int, int), 1.0, 6210, 
6217, ButtonEditor(javax.swing.Icon), 1.0, 6216, 
6218, ButtonEditor(javax.swing.Action), 1.0, 6216, 
6220, getCellEditorValue(), 0.0, 6216, 
6221, setAction(javax.swing.Action), 1.0, 6216, 
6225, setEnabled(boolean), 1.0, 6222, 
6227, ToggleAllAction(), 0.0, 6226, 
6228, actionPerformed(java.lang.Boolean, java.awt.event.ActionEvent, int), 1.0, 6226, 
6230, SetAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 6229, 
6233, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeValueElementaryAction), 1.0, 6229, 
6235, getDoActionClass(), 0.0, 6229, 
6240, getLinkRegistry(), 0.0, 6237, 
6241, getRestoreable(), 0.0, 6237, 
6243, toString(), 0.0, 6237, 
6244, getAsHTML(java.io.StringWriter, java.util.List, java.io.BufferedWriter, java.lang.Exception), 1.0, 6237, 
6245, getAsPlainText(java.io.StringWriter, java.util.List, java.io.BufferedWriter, java.util.ListIterator, java.lang.Exception), 1.0, 6237, 
6247, getAsRTF(java.io.StringWriter, java.util.List, java.io.BufferedWriter, java.lang.Exception), 1.0, 6237, 
6249, save(java.io.File), 1.0, 6237, 
6253, getXml(java.io.Writer), 1.0, 6237, 
6254, getFilteredXml(java.io.Writer), 1.0, 6237, 
6255, tryToLock(java.io.File, java.lang.String, java.lang.String), 1.0, 6237, 
6256, load(java.net.URL, java.io.File), 1.0, 6237, 
6257, load(java.io.File, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String, java.lang.Exception), 1.0, 6237, 
6258, destroy(), 0.0, 6237, 
6259, loadTree(java.io.File), 1.0, 6237, 
6260, loadTree(freemind.modes.mindmapmode.MindMapMapModel.ReaderCreator), 1.0, 6237, 
6263, scheduleTimerForAutomaticSaving(int, java.lang.String, java.io.File, int, boolean), 0.0, 6237, 
6265, run(), 0.0, 6264, 
6268, StringReaderCreator(java.lang.String), 1.0, 6267, 
6269, createReader(), 0.0, 6267, 
6270, toString(), 0.0, 6267, 
6272, FileReaderCreator(java.io.File), 1.0, 6271, 
6273, createReader(), 0.0, 6271, 
6274, toString(), 0.0, 6271, 
6276, createReader(), 0.0, 6275, 
6278, getSemaphoreFile(java.io.File), 1.0, 6277, 
6279, popLockingUserOfOldLock(java.lang.String), 0.0, 6277, 
6280, writeSemaphoreFile(java.io.FileOutputStream, java.nio.channels.FileLock, java.io.File, java.lang.NoClassDefFoundError, java.lang.UnsatisfiedLinkError), 1.0, 6277, 
6281, tryToLock(java.io.File, java.lang.String, java.io.File, long, long, java.io.BufferedReader, java.io.FileNotFoundException), 1.0, 6277, 
6282, releaseLock(), 0.0, 6277, 
6283, releaseTimer(), 0.0, 6277, 
6284, run(java.lang.Exception), 0.0, 6277, 
6287, popLockingUserOfOldLock(), 0.0, 6286, 
6288, tryToLock(java.io.File), 1.0, 6286, 
6289, releaseLock(), 0.0, 6286, 
6290, releaseTimer(), 0.0, 6286, 
6291, run(), 0.0, 6286, 
6295, run(java.lang.InterruptedException), 0.0, 6293, 
6297, run(java.io.File, java.lang.Exception), 0.0, 6296, 
6301, clone(), 0.0, 6299, 
6302, toString(), 0.0, 6299, 
6306, MindMapController(java.io.InputStream, freemind.modes.Mode, java.awt.Toolkit, java.io.IOException), 1.0, 6305, 
6307, createStandardActions(), 0.0, 6305, 
6308, loadPatternActions(boolean, java.io.File, java.lang.String, int, java.lang.Exception, java.lang.Exception), 0.0, 6305, 
6309, getPatternReader(java.io.Reader, java.io.File), 0.0, 6305, 
6310, isUndoAction(), 0.0, 6305, 
6311, load(java.lang.String), 1.0, 6305, 
6312, loadPatterns(java.io.Reader), 1.0, 6305, 
6313, createPatterns(java.util.List, freemind.controller.actions.generated.instance.Pattern, int, freemind.controller.actions.generated.instance.PatternIcon), 1.0, 6305, 
6314, startupController(freemind.extensions.HookFactory.RegistrationContainer, java.util.List, java.util.Iterator, java.lang.reflect.Constructor, freemind.extensions.HookRegistration, freemind.extensions.HookFactory, java.lang.Class, java.lang.Exception), 0.0, 6305, 
6315, shutdownController(java.util.Iterator, freemind.extensions.HookRegistration), 0.0, 6305, 
6316, newModel(freemind.modes.ModeController), 1.0, 6305, 
6317, createIconActions(java.lang.String, String[], freemind.modes.MindIcon, int, java.util.Vector, freemind.modes.mindmapmode.actions.IconAction, java.io.File), 0.0, 6305, 
6318, createNodeHookActions(java.lang.String, java.util.List, freemind.modes.mindmapmode.actions.NodeHookAction, java.util.Iterator, java.util.List, freemind.modes.mindmapmode.hooks.MindMapHookFactory), 0.0, 6305, 
6319, getFileFilter(), 0.0, 6305, 
6320, nodeChanged(freemind.modes.MindMapNode, freemind.view.MapModule), 1.0, 6305, 
6321, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 6305, 
6322, updateToolbar(freemind.modes.MindMapNode), 1.0, 6305, 
6323, setNewNodeCreator(freemind.modes.mindmapmode.MindMapController.NewNodeCreator), 1.0, 6305, 
6325, updateMenus(freemind.controller.StructuredMenuHolder, freemind.modes.mindmapmode.hooks.MindMapHookFactory, java.lang.String, java.lang.String, java.util.List, java.util.Iterator, javax.swing.AbstractAction, int, java.lang.String), 1.0, 6305, 
6328, updateMenusFromXml(java.io.InputStream, freemind.controller.actions.generated.instance.MenuStructure, org.jibx.runtime.IUnmarshallingContext, org.jibx.runtime.JiBXException), 1.0, 6305, 
6330, getPopupMenu(), 0.0, 6305, 
6331, getPopupForModel(freemind.modes.mindmapmode.MindMapArrowLinkModel, java.lang.Object, javax.swing.JRadioButtonMenuItem, javax.swing.JRadioButtonMenuItem, boolean, javax.swing.JRadioButtonMenuItem, javax.swing.JPopupMenu, javax.swing.JRadioButtonMenuItem, java.util.HashSet, int, freemind.modes.mindmapmode.MindMapArrowLinkModel, boolean, java.util.Vector), 1.0, 6305, 
6332, getMindMapMapModel(), 0.0, 6305, 
6333, getModeToolBar(), 0.0, 6305, 
6334, getToolBar(), 0.0, 6305, 
6335, getLeftToolBar(), 0.0, 6305, 
6336, setAllActions(boolean, int), 1.0, 6305, 
6346, blendNodeColor(java.awt.Color, freemind.modes.MindMapNode, java.awt.Color), 1.0, 6305, 
6351, removeAllIcons(freemind.modes.MindMapNode), 1.0, 6305, 
6352, removeLastIcon(freemind.modes.MindMapNode), 1.0, 6305, 
6354, removeReference(freemind.modes.MindMapLink), 1.0, 6305, 
6366, cut(), 0.0, 6305, 
6367, cut(java.util.List), 1.0, 6305, 
6373, deleteNode(freemind.modes.MindMapNode), 1.0, 6305, 
6374, toggleFolded(), 0.0, 6305, 
6378, setLinkByFileChooser(java.lang.String), 0.0, 6305, 
6379, setImageByFileChooser(boolean, java.lang.String, java.lang.String, freemind.modes.MindMapNode, java.lang.String, java.util.ListIterator, freemind.main.ExampleFileFilter, java.lang.String), 0.0, 6305, 
6380, getLinkByFileChooser(java.io.File, java.net.URL, javax.swing.JFileChooser, java.lang.String, javax.swing.filechooser.FileFilter, int, java.net.MalformedURLException), 1.0, 6305, 
6381, loadURL(java.lang.String, boolean), 1.0, 6305, 
6384, plainClick(freemind.view.mindmapview.MainView, java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 6305, 
6385, getHookFactory(), 0.0, 6305, 
6387, invokeHook(freemind.extensions.ModeControllerHook, java.lang.Exception), 1.0, 6305, 
6388, getActionFactory(), 0.0, 6305, 
6393, updateNode(freemind.modes.MindMapNode), 1.0, 6305, 
6395, doubleClick(java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 6305, 
6396, select(freemind.view.mindmapview.NodeView), 1.0, 6305, 
6400, getNodeView(java.lang.Object), 1.0, 6305, 
6402, extendSelection(java.lang.String, boolean, boolean, boolean, java.awt.event.MouseEvent, boolean, freemind.view.mindmapview.NodeView), 1.0, 6305, 
6403, registerMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 6305, 
6404, deRegisterMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 6305, 
6405, getRegisteredMouseWheelEventHandler(), 0.0, 6305, 
6406, marshall(freemind.controller.actions.generated.instance.XmlAction), 1.0, 6305, 
6407, unMarshall(java.lang.String), 1.0, 6305, 
6410, getAttributeController(), 0.0, 6305, 
6411, getAttributeTablePopupMenu(), 0.0, 6305, 
6412, createXMLElement(), 0.0, 6305, 
6418, removeNodeFromParent(freemind.modes.MindMapNode), 1.0, 6305, 
6419, nodeStyleChanged(freemind.modes.MindMapNode, java.util.ListIterator, freemind.modes.MindMapNode), 1.0, 6305, 
6420, repaintMap(), 0.0, 6305, 
6421, clearNodeContents(freemind.modes.MindMapNode, java.lang.String, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, java.util.List), 1.0, 6305, 
6424, registerPlugin(freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin), 1.0, 6305, 
6425, deregisterPlugin(freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin), 1.0, 6305, 
6426, getPlugins(), 0.0, 6305, 
6427, getClipboardContents(), 0.0, 6305, 
6428, setClipboardContents(java.awt.datatransfer.Transferable), 1.0, 6305, 
6430, AssignAttributesAction(), 0.0, 6429, 
6431, actionPerformed(java.awt.event.ActionEvent), 1.0, 6429, 
6451, ExportToHTMLAction(freemind.modes.mindmapmode.MindMapController), 1.0, 6450, 
6452, actionPerformed(java.awt.event.ActionEvent, java.io.File, java.io.IOException), 1.0, 6450, 
6454, ExportBranchToHTMLAction(freemind.modes.mindmapmode.MindMapController), 1.0, 6453, 
6455, actionPerformed(java.awt.event.ActionEvent, java.io.File, java.io.IOException), 1.0, 6453, 
6457, ImportBranchAction(), 0.0, 6456, 
6458, actionPerformed(java.awt.event.ActionEvent, int, javax.swing.JFileChooser, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.Exception), 1.0, 6456, 
6460, ImportLinkedBranchAction(), 0.0, 6459, 
6461, actionPerformed(java.net.URL, java.lang.String, java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.Exception), 1.0, 6459, 
6463, ImportLinkedBranchWithoutRootAction(), 0.0, 6462, 
6464, actionPerformed(java.net.URL, java.lang.String, java.awt.event.ActionEvent, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.Exception), 1.0, 6462, 
6466, accept(java.io.File, java.lang.String), 1.0, 6465, 
6467, getDescription(), 0.0, 6465, 
6470, SetLinkByFileChooserAction(), 0.0, 6469, 
6471, actionPerformed(java.awt.event.ActionEvent), 1.0, 6469, 
6473, SetImageByFileChooserAction(), 0.0, 6472, 
6474, actionPerformed(java.awt.event.ActionEvent), 1.0, 6472, 
6476, FollowLinkAction(), 0.0, 6475, 
6477, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 6475, 
6480, EditLongAction(), 0.0, 6479, 
6481, actionPerformed(java.awt.event.ActionEvent), 1.0, 6479, 
6483, JAutoScrollBarPane(java.awt.Component), 1.0, 6482, 
6484, doLayout(int, boolean, java.awt.Insets, int, java.awt.Dimension, boolean), 0.0, 6482, 
6485, getPreferredSize(), 0.0, 6482, 
6491, getPlainTextContent(), 0.0, 6488, 
6494, collectColors(java.util.HashSet, java.util.ListIterator), 1.0, 6488, 
6495, saveRFT_escapeUnicodeAndSpecialCharacters(char, int, int, java.lang.String, int, java.lang.StringBuffer), 1.0, 6488, 
6498, isWriteable(), 0.0, 6488, 
6500, MindMapXMLElement(freemind.modes.ModeController), 1.0, 6499, 
6502, init(), 0.0, 6499, 
6503, createAnotherElement(), 0.0, 6499, 
6508, createEncryptedNode(java.lang.String, freemind.modes.NodeAdapter), 1.0, 6499, 
6511, setMap(freemind.modes.MindMap), 1.0, 6509, 
6512, decrypt(java.lang.StringBuffer, String[], int, java.lang.String, int, java.lang.String, freemind.modes.MindMapNode, java.lang.String, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.Exception), 1.0, 6509, 
6513, paste(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 6509, 
6514, getNodeFromXml(java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 6509, 
6515, getMindMapMapModel(), 0.0, 6509, 
6516, checkPassword(java.lang.StringBuffer, java.lang.String), 1.0, 6509, 
6518, encrypt(), 0.0, 6509, 
6519, getChildCount(), 0.0, 6509, 
6520, childrenFolded(), 0.0, 6509, 
6521, childrenUnfolded(), 0.0, 6509, 
6522, hasChildren(), 0.0, 6509, 
6523, updateIcon(), 0.0, 6509, 
6524, setPassword(java.lang.StringBuffer), 1.0, 6509, 
6525, isFolded(), 0.0, 6509, 
6526, setFolded(boolean), 1.0, 6509, 
6527, setAdditionalInfo(java.lang.String), 1.0, 6509, 
6528, getAdditionalInfo(), 0.0, 6509, 
6530, generateEncryptedContent(freemind.modes.MindMapLinkRegistry, java.io.StringWriter, java.lang.StringBuffer), 1.0, 6509, 
6531, encryptXml(java.lang.StringBuffer, freemind.main.Tools.SingleDesEncrypter, java.lang.String, java.lang.Exception), 1.0, 6509, 
6533, setShuttingDown(boolean), 1.0, 6509, 
6534, setAccessible(boolean), 1.0, 6509, 
6535, isAccessible(), 0.0, 6509, 
6537, isWriteable(), 0.0, 6509, 
6538, isStoringEncryptedContent(), 0.0, 6509, 
6539, setStoringEncryptedContent(boolean), 1.0, 6509, 
6543, MindMapToolBar(freemind.modes.mindmapmode.MindMapController), 1.0, 6542, 
6544, update(freemind.controller.StructuredMenuHolder, int), 1.0, 6542, 
6545, selectFontSize(java.lang.String), 1.0, 6542, 
6546, getLeftToolBar(), 0.0, 6542, 
6547, selectFontName(java.lang.String), 1.0, 6542, 
6548, setAllActions(boolean), 1.0, 6542, 
6550, itemStateChanged(java.awt.event.ItemEvent), 1.0, 6549, 
6553, itemStateChanged(java.awt.event.ItemEvent), 1.0, 6552, 
6556, MindMapHTMLWriter(java.io.Writer), 1.0, 6555, 
6557, convertSpecialChar(java.lang.String, char), 1.0, 6555, 
6558, saveHTML_escapeUnicodeAndSpecialCharacters(int, java.lang.String, boolean, java.lang.StringBuffer, int, boolean, char, int), 1.0, 6555, 
6559, saveHTML(java.util.List, freemind.modes.mindmapmode.MindMapNodeModel, java.util.Iterator), 1.0, 6555, 
6560, saveHTML(freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String), 1.0, 6555, 
6561, writeBodyWithFolding(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 6555, 
6562, writeJavaScript(), 0.0, 6555, 
6563, writeStyle(), 0.0, 6555, 
6565, fontStyle(java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String, int, int), 1.0, 6555, 
6566, writeModelContent(java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 6555, 
6567, writeIcons(freemind.modes.mindmapmode.MindMapNodeModel, int), 1.0, 6555, 
6568, writeFoldingButtons(java.lang.String), 1.0, 6555, 
6570, hasHtml(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 6555, 
6571, getProperty(java.lang.String), 1.0, 6555, 
6573, MindMapMode(), 0.0, 6572, 
6574, init(freemind.controller.Controller), 1.0, 6572, 
6575, createModeController(freemind.modes.mindmapmode.MindMapController), 0.0, 6572, 
6576, toString(), 0.0, 6572, 
6577, activate(), 0.0, 6572, 
6578, restore(java.lang.String), 1.0, 6572, 
6579, getController(), 0.0, 6572, 
6580, getDefaultModeController(), 0.0, 6572, 
6582, MindMapPopupMenu(freemind.modes.mindmapmode.MindMapController), 1.0, 6581, 
6583, update(freemind.controller.StructuredMenuHolder), 1.0, 6581, 
6586, SignedScriptHandler(), 0.0, 6585, 
6587, initializeKeystore(java.io.FileInputStream, char[], java.io.IOException), 1.0, 6585, 
6591, ScriptContents(), 0.0, 6590, 
6592, ScriptContents(java.lang.String, int, java.util.regex.Matcher, int), 1.0, 6590, 
6593, toString(java.lang.String), 0.0, 6590, 
6597, updateFields(int, plugins.script.ScriptEditorPanel.ScriptHolder), 0.0, 6594, 
6598, select(int), 1.0, 6594, 
6599, storeCurrent(int), 0.0, 6594, 
6600, disposeDialog(boolean, freemind.controller.actions.generated.instance.ScriptEditorWindowConfigurationStorage, int), 1.0, 6594, 
6601, getPrintStream(), 0.0, 6594, 
6602, getErrorHandler(), 0.0, 6594, 
6604, write(int), 1.0, 6603, 
6605, write(byte[]), 1.0, 6603, 
6608, RunAction(java.lang.String), 1.0, 6607, 
6609, actionPerformed(java.awt.event.ActionEvent), 1.0, 6607, 
6611, SignAction(java.lang.String), 1.0, 6610, 
6612, actionPerformed(java.awt.event.ActionEvent, plugins.script.ScriptEditorPanel.ScriptHolder, int, java.lang.String), 1.0, 6610, 
6614, CancelAction(java.lang.String), 1.0, 6613, 
6615, actionPerformed(java.awt.event.ActionEvent), 1.0, 6613, 
6617, ExitAction(java.lang.String), 1.0, 6616, 
6618, actionPerformed(java.awt.event.ActionEvent), 1.0, 6616, 
6620, NewScriptAction(java.lang.String), 1.0, 6619, 
6621, actionPerformed(java.awt.event.ActionEvent, int), 1.0, 6619, 
6624, getScript(), 0.0, 6622, 
6625, getScriptName(), 0.0, 6622, 
6626, setScript(java.lang.String), 1.0, 6622, 
6627, setScriptName(java.lang.String), 1.0, 6622, 
6629, getAmountOfScripts(), 0.0, 6628, 
6630, getScript(int), 1.0, 6628, 
6635, endDialog(boolean), 1.0, 6628, 
6636, isDirty(), 0.0, 6628, 
6637, addNewScript(), 0.0, 6628, 
6639, windowClosing(java.awt.event.WindowEvent), 1.0, 6638, 
6641, actionPerformed(java.awt.event.ActionEvent), 1.0, 6640, 
6643, valueChanged(javax.swing.event.ListSelectionEvent), 1.0, 6642, 
6646, caretUpdate(javax.swing.event.CaretEvent, int, int, javax.swing.text.BadLocationException), 1.0, 6645, 
6649, gotoLine(int, javax.swing.text.Element, javax.swing.text.Element), 1.0, 6648, 
6652, startupMapHook(freemind.modes.MindMapNode, java.lang.String, freemind.main.Tools.BooleanHolder), 0.0, 6651, 
6658, gotoLine(int), 1.0, 6657, 
6660, gotoLine(int), 1.0, 6659, 
6663, gotoLine(int), 1.0, 6662, 
6669, register(), 0.0, 6667, 
6670, deRegister(), 0.0, 6667, 
6672, getScriptCookies(), 0.0, 6667, 
6674, ScriptingPluginPropertyContributor(freemind.modes.mindmapmode.MindMapController), 1.0, 6673, 
6675, getControls(freemind.common.TextTranslator, java.util.Vector), 1.0, 6673, 
6677, PatternScriptModel(java.lang.String), 1.0, 6676, 
6679, endDialog(boolean), 1.0, 6676, 
6681, getAmountOfScripts(), 0.0, 6676, 
6682, getScript(int), 1.0, 6676, 
6683, isDirty(), 0.0, 6676, 
6686, getScript(), 0.0, 6676, 
6687, addNewScript(), 0.0, 6676, 
6689, startEditor(java.lang.String, plugins.script.ScriptingRegistration.PatternScriptModel, plugins.script.ScriptEditorPanel), 1.0, 6688, 
6692, gotoLine(int), 1.0, 6691, 
6699, checkListen(int), 1.0, 6694, 
6701, checkMulticast(java.net.InetAddress), 1.0, 6694, 
6702, checkSetFactory(), 0.0, 6694, 
6703, checkExec(java.lang.String), 1.0, 6694, 
6704, checkLink(java.lang.String, java.util.HashSet), 1.0, 6694, 
6705, checkDelete(java.lang.String), 1.0, 6694, 
6706, checkRead(java.io.FileDescriptor), 1.0, 6694, 
6708, checkRead(java.lang.String), 1.0, 6694, 
6709, checkWrite(java.io.FileDescriptor), 1.0, 6694, 
6710, checkWrite(java.lang.String), 1.0, 6694, 
6712, checkAccess(java.lang.Thread), 1.0, 6694, 
6713, checkAccess(java.lang.ThreadGroup), 1.0, 6694, 
6714, checkAwtEventQueueAccess(), 0.0, 6694, 
6715, checkCreateClassLoader(), 0.0, 6694, 
6716, checkExit(int), 1.0, 6694, 
6718, checkPackageAccess(java.lang.String), 1.0, 6694, 
6719, checkPackageDefinition(java.lang.String), 1.0, 6694, 
6721, checkPermission(java.security.Permission), 1.0, 6694, 
6722, checkPrintJobAccess(), 0.0, 6694, 
6723, checkPropertiesAccess(), 0.0, 6694, 
6724, checkPropertyAccess(java.lang.String), 1.0, 6694, 
6725, checkSecurityAccess(java.lang.String), 1.0, 6694, 
6726, checkSystemClipboardAccess(), 0.0, 6694, 
6727, checkTopLevelWindow(java.lang.Object), 1.0, 6694, 
6729, startupMapHook(int, plugins.script.ScriptEditor.NodeScriptModel, java.util.Vector, freemind.modes.attributes.Attribute, freemind.modes.MindMapNode, plugins.script.ScriptEditorPanel), 0.0, 6728, 
6736, getAmountOfScripts(), 0.0, 6732, 
6737, getScript(int, freemind.modes.attributes.Attribute), 1.0, 6732, 
6740, endDialog(boolean, plugins.script.ScriptEditor.AttributeHolder, freemind.modes.attributes.Attribute, java.util.Iterator, int, int), 1.0, 6732, 
6741, isDirty(), 0.0, 6732, 
6742, addNewScript(boolean, int, java.util.Iterator, int, int, java.lang.String, plugins.script.ScriptEditor.AttributeHolder), 0.0, 6732, 
6745, JZoomedHotEqn(plugins.latex.LatexNodeHook), 1.0, 6744, 
6746, getPreferredSize(java.awt.Dimension), 0.0, 6744, 
6747, paint(java.awt.Graphics, java.awt.geom.AffineTransform, java.awt.Graphics2D), 1.0, 6744, 
6749, mouseClicked(java.awt.event.MouseEvent), 1.0, 6744, 
6750, edit(javax.swing.JTextArea, javax.swing.JScrollPane, java.lang.String, javax.swing.JDialog), 0.0, 6744, 
6751, setModel(plugins.latex.LatexNodeHook), 1.0, 6744, 
6753, LatexNodeHook(), 0.0, 6752, 
6754, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 6752, 
6755, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 6752, 
6756, deleteViewer(freemind.view.mindmapview.NodeView, java.awt.Container, int, java.awt.Component, int), 1.0, 6752, 
6757, invoke(freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView, java.util.Iterator), 1.0, 6752, 
6758, createViewer(freemind.view.mindmapview.NodeView, plugins.latex.JZoomedHotEqn), 1.0, 6752, 
6759, getContent(java.lang.String), 1.0, 6752, 
6761, loadFrom(freemind.main.XMLElement), 1.0, 6752, 
6762, save(freemind.main.XMLElement), 1.0, 6752, 
6763, shutdownMapHook(java.util.Iterator, plugins.latex.JZoomedHotEqn), 0.0, 6752, 
6766, FileMode(), 0.0, 6765, 
6767, init(freemind.controller.Controller), 1.0, 6765, 
6768, toString(), 0.0, 6765, 
6769, activate(), 0.0, 6765, 
6770, restore(java.lang.String), 1.0, 6765, 
6771, getController(), 0.0, 6765, 
6772, getDefaultModeController(), 0.0, 6765, 
6773, createModeController(), 0.0, 6765, 
6776, FilePopupMenu(freemind.modes.filemode.FileController), 1.0, 6774, 
6778, FileController(freemind.modes.Mode), 1.0, 6777, 
6779, newModel(freemind.modes.ModeController), 1.0, 6777, 
6781, getPopupMenu(), 0.0, 6777, 
6782, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 6777, 
6783, getHookFactory(), 0.0, 6777, 
6784, plainClick(freemind.view.mindmapview.MainView, java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 6777, 
6785, toggleFolded(freemind.modes.MindMapNode), 1.0, 6777, 
6787, CenterAction(), 0.0, 6786, 
6788, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 6786, 
6790, OpenPathAction(), 0.0, 6789, 
6791, actionPerformed(java.lang.String, java.io.File, java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 6789, 
6794, getStyle(), 0.0, 6792, 
6795, getFile(), 0.0, 6792, 
6796, getColor(), 0.0, 6792, 
6797, toString(java.lang.String), 0.0, 6792, 
6798, getText(), 0.0, 6792, 
6799, hasChildren(), 0.0, 6792, 
6800, childrenFolded(), 0.0, 6792, 
6801, childrenUnfolded(java.lang.String, java.io.File, String[], int, freemind.modes.filemode.FileNodeModel, java.lang.SecurityException), 0.0, 6792, 
6802, isLeaf(), 0.0, 6792, 
6803, getLink(java.net.MalformedURLException), 0.0, 6792, 
6804, isWriteable(), 0.0, 6792, 
6808, getLinkRegistry(), 0.0, 6805, 
6809, save(java.io.File), 1.0, 6805, 
6810, destroy(), 0.0, 6805, 
6811, load(java.net.URL), 1.0, 6805, 
6812, isSaved(), 0.0, 6805, 
6813, toString(), 0.0, 6805, 
6815, setLinkInclinationChanged(), 0.0, 6805, 
6816, getXml(java.io.Writer), 1.0, 6805, 
6817, getFilteredXml(java.io.Writer), 1.0, 6805, 
6819, FileToolBar(freemind.modes.filemode.FileController, javax.swing.JButton), 1.0, 6818, 
6824, PermanentMindMapNodeHookAdapter(), 0.0, 6823, 
6825, getMindMapController(), 0.0, 6823, 
6826, propagate(freemind.modes.MindMapNode, freemind.extensions.PermanentNodeHook), 1.0, 6823, 
6830, MindMapHookAdapter(), 0.0, 6829, 
6831, getMindMapController(), 0.0, 6829, 
6833, MindMapNodeHookAdapter(), 0.0, 6832, 
6834, getMindMapController(), 0.0, 6832, 
6836, MindMapHookFactory(freemind.main.FreeMindMain), 1.0, 6835, 
6837, getPossibleNodeHooks(), 0.0, 6835, 
6838, getPossibleModeControllerHooks(), 0.0, 6835, 
6840, actualizePlugins(java.lang.String, freemind.controller.actions.generated.instance.Plugin, freemind.controller.actions.generated.instance.PluginRegistration, freemind.controller.actions.generated.instance.PluginAction, org.jibx.runtime.IUnmarshallingContext, java.net.URL, java.io.InputStream, java.lang.Object, java.util.Iterator, java.util.Iterator, java.lang.Exception), 0.0, 6835, 
6841, createModeControllerHook(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 6835, 
6843, createNodeHook(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 6835, 
6846, getHookMenuPositions(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 6835, 
6847, getInstanciationMethod(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 6835, 
6848, getRegistrations(freemind.extensions.HookFactory.RegistrationContainer, boolean, java.lang.Class, freemind.controller.actions.generated.instance.Plugin, freemind.controller.actions.generated.instance.PluginMode, java.util.Vector, java.util.Iterator, freemind.extensions.HookDescriptorRegistration, java.lang.ClassLoader, java.lang.Class, java.util.Iterator, java.lang.ClassNotFoundException), 0.0, 6835, 
6849, getPluginBaseClass(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 6835, 
6850, getPluginBaseClass(java.lang.Object, freemind.extensions.HookDescriptorPluginAction, java.lang.String), 1.0, 6835, 
6851, getHookDescriptor(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 6835, 
6854, getPluginBaseObject(), 0.0, 6853, 
6858, testTagRemoval(java.lang.String), 0.0, 6857, 
6859, testTagRemovalWithNewlines(java.lang.String), 0.0, 6857, 
6860, testTagRemovalOnlyForHtmlText(java.lang.String), 0.0, 6857, 
6861, testFlatNodeTableFilter(javax.swing.table.AbstractTableModel, accessories.plugins.time.FlatNodeTableFilterModel), 0.0, 6857, 
6862, testPositions(freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, java.util.ArrayList, freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair), 0.0, 6857, 
6863, testDirectReplace(), 0.0, 6857, 
6864, testGetPureRegularExpression(), 0.0, 6857, 
6866, testReplaceNodeText(accessories.plugins.time.TimeList.IReplaceInputInformation), 0.0, 6857, 
6868, getRowCount(), 0.0, 6867, 
6869, getColumnCount(), 0.0, 6867, 
6873, getLength(), 0.0, 6871, 
6874, getNodeHolderAt(tests.freemind.findreplace.TestMindMapNode, int), 1.0, 6871, 
6877, getText(), 0.0, 6876, 
6878, setText(java.lang.String), 1.0, 6876, 
6879, getObjectId(freemind.modes.ModeController), 1.0, 6876, 
6880, childrenFolded(), 0.0, 6876, 
6881, childrenUnfolded(), 0.0, 6876, 
6882, hasChildren(), 0.0, 6876, 
6883, getFilterInfo(), 0.0, 6876, 
6884, getChildPosition(freemind.modes.MindMapNode), 1.0, 6876, 
6885, getPreferredChild(), 0.0, 6876, 
6886, setPreferredChild(freemind.modes.MindMapNode), 1.0, 6876, 
6887, getNodeLevel(), 0.0, 6876, 
6888, getLink(), 0.0, 6876, 
6889, getShortText(freemind.modes.ModeController), 1.0, 6876, 
6890, getEdge(), 0.0, 6876, 
6891, getColor(), 0.0, 6876, 
6892, getStyle(), 0.0, 6876, 
6893, setStyle(java.lang.String), 1.0, 6876, 
6894, hasStyle(), 0.0, 6876, 
6895, getParentNode(), 0.0, 6876, 
6896, isBold(), 0.0, 6876, 
6897, isItalic(), 0.0, 6876, 
6898, isUnderlined(), 0.0, 6876, 
6899, getFont(), 0.0, 6876, 
6900, getFontSize(), 0.0, 6876, 
6901, getFontFamilyName(), 0.0, 6876, 
6902, getViewers(), 0.0, 6876, 
6903, addViewer(freemind.view.mindmapview.NodeView), 1.0, 6876, 
6904, getPlainTextContent(), 0.0, 6876, 
6905, getPath(), 0.0, 6876, 
6906, isDescendantOf(freemind.modes.MindMapNode), 1.0, 6876, 
6907, isRoot(), 0.0, 6876, 
6908, isFolded(), 0.0, 6876, 
6909, isLeft(), 0.0, 6876, 
6910, isOnLeftSideOfRoot(), 0.0, 6876, 
6911, setLeft(boolean), 1.0, 6876, 
6912, setFolded(boolean), 1.0, 6876, 
6913, setFont(java.awt.Font), 1.0, 6876, 
6914, setShiftY(int), 1.0, 6876, 
6915, getShiftY(), 0.0, 6876, 
6916, calcShiftY(), 0.0, 6876, 
6917, setVGap(int), 1.0, 6876, 
6918, getVGap(), 0.0, 6876, 
6919, calcVGap(), 0.0, 6876, 
6920, setHGap(int), 1.0, 6876, 
6921, getHGap(), 0.0, 6876, 
6922, setLink(java.lang.String), 1.0, 6876, 
6923, setFontSize(int), 1.0, 6876, 
6924, setColor(java.awt.Color), 1.0, 6876, 
6925, getIcons(), 0.0, 6876, 
6927, removeIcon(int), 1.0, 6876, 
6928, getCloud(), 0.0, 6876, 
6929, setCloud(freemind.modes.MindMapCloud), 1.0, 6876, 
6930, getBackgroundColor(), 0.0, 6876, 
6931, setBackgroundColor(java.awt.Color), 1.0, 6876, 
6932, getHooks(), 0.0, 6876, 
6933, getActivatedHooks(), 0.0, 6876, 
6934, addHook(freemind.extensions.PermanentNodeHook), 1.0, 6876, 
6935, invokeHook(freemind.extensions.NodeHook), 1.0, 6876, 
6936, removeHook(freemind.extensions.PermanentNodeHook), 1.0, 6876, 
6938, getToolTip(), 0.0, 6876, 
6939, setAdditionalInfo(java.lang.String), 1.0, 6876, 
6940, getAdditionalInfo(), 0.0, 6876, 
6941, shallowCopy(), 0.0, 6876, 
6943, getStateIcons(), 0.0, 6876, 
6945, getHistoryInformation(), 0.0, 6876, 
6946, setHistoryInformation(freemind.modes.HistoryInformation), 1.0, 6876, 
6947, isVisible(), 0.0, 6876, 
6948, hasOneVisibleChild(), 0.0, 6876, 
6949, getMap(), 0.0, 6876, 
6950, getAttributes(), 0.0, 6876, 
6951, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 6876, 
6952, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 6876, 
6954, remove(int), 1.0, 6876, 
6955, remove(javax.swing.tree.MutableTreeNode), 1.0, 6876, 
6956, setUserObject(java.lang.Object), 1.0, 6876, 
6957, removeFromParent(), 0.0, 6876, 
6958, setParent(javax.swing.tree.MutableTreeNode), 1.0, 6876, 
6959, getChildAt(int), 1.0, 6876, 
6960, getChildCount(), 0.0, 6876, 
6961, getParent(), 0.0, 6876, 
6962, getIndex(javax.swing.tree.TreeNode), 1.0, 6876, 
6963, getAllowsChildren(), 0.0, 6876, 
6964, isLeaf(), 0.0, 6876, 
6965, children(), 0.0, 6876, 
6966, getXmlText(), 0.0, 6876, 
6967, setXmlText(java.lang.String), 1.0, 6876, 
6968, getXmlNoteText(), 0.0, 6876, 
6969, setXmlNoteText(java.lang.String), 1.0, 6876, 
6970, getChildren(), 0.0, 6876, 
6971, getNoteText(), 0.0, 6876, 
6972, setNoteText(java.lang.String), 1.0, 6876, 
6973, getAttribute(int), 1.0, 6876, 
6974, getAttributeKeyList(), 0.0, 6876, 
6975, getAttributePosition(java.lang.String), 1.0, 6876, 
6977, getAttributeTableLength(), 0.0, 6876, 
6978, removeViewer(freemind.view.mindmapview.NodeView), 1.0, 6876, 
6979, acceptViewVisitor(freemind.view.mindmapview.NodeViewVisitor), 1.0, 6876, 
6980, getListeners(), 0.0, 6876, 
6981, isNewChildLeft(), 0.0, 6876, 
6982, createAttributeTableModel(), 0.0, 6876, 
6983, getAttribute(java.lang.String), 1.0, 6876, 
6984, isWriteable(), 0.0, 6876, 
6988, startupMapHook(plugins.collaboration.jabber.mindmap.MapSharingController), 0.0, 6987, 
6993, sendMapSharingStopRequest(java.lang.String, freemind.controller.actions.generated.instance.CollaborationAction, java.lang.Exception), 0.0, 6990, 
6996, marshal(freemind.controller.actions.generated.instance.XmlAction), 1.0, 6990, 
6998, isMapShared(boolean), 1.0, 6990, 
6999, setShareMapUser(java.lang.String), 1.0, 6990, 
7000, filterAction(freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.controller.actions.generated.instance.CompoundAction, com.echomine.common.SendMessageFailedException), 1.0, 6990, 
7003, getSession(), 0.0, 7001, 
7005, FreeMindJabberMessageListener(plugins.collaboration.jabber.mindmap.MapSharingController), 1.0, 7004, 
7006, messageReceived(com.echomine.jabber.JabberMessageEvent, java.lang.String, freemind.controller.actions.generated.instance.XmlAction, java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.CompoundAction, java.lang.String, freemind.controller.actions.generated.instance.CollaborationAction, com.echomine.jabber.JabberChatMessage, com.echomine.jabber.JabberChatMessage, java.lang.Exception), 1.0, 7004, 
7007, executeRemoteCommand(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 7004, 
7009, run(java.lang.Exception), 0.0, 7008, 
7013, addListeners(), 0.0, 7011, 
7016, showMapSharingDialogue(), 0.0, 7011, 
7017, stopSharing(), 0.0, 7011, 
7018, setSharingStopped(java.lang.String), 1.0, 7011, 
7019, setState(int), 1.0, 7011, 
7020, getController(), 0.0, 7011, 
7021, setSendingEnabled(boolean), 1.0, 7011, 
7022, isSendingEnabled(), 0.0, 7011, 
7024, mouseClicked(java.awt.event.MouseEvent), 1.0, 7023, 
7025, mouseEntered(java.awt.event.MouseEvent), 1.0, 7023, 
7026, mouseExited(java.awt.event.MouseEvent), 1.0, 7023, 
7027, mousePressed(java.awt.event.MouseEvent), 1.0, 7023, 
7028, mouseReleased(java.awt.event.MouseEvent), 1.0, 7023, 
7031, mouseClicked(java.awt.event.MouseEvent), 1.0, 7030, 
7032, mouseEntered(java.awt.event.MouseEvent), 1.0, 7030, 
7033, mouseExited(java.awt.event.MouseEvent), 1.0, 7030, 
7034, mousePressed(java.awt.event.MouseEvent), 1.0, 7030, 
7035, mouseReleased(java.awt.event.MouseEvent), 1.0, 7030, 
7038, mouseClicked(java.awt.event.MouseEvent), 1.0, 7037, 
7039, mouseEntered(java.awt.event.MouseEvent), 1.0, 7037, 
7040, mouseExited(java.awt.event.MouseEvent), 1.0, 7037, 
7041, mousePressed(java.awt.event.MouseEvent), 1.0, 7037, 
7042, mouseReleased(java.awt.event.MouseEvent), 1.0, 7037, 
7045, mouseClicked(freemind.controller.actions.generated.instance.RevertXmlAction, java.awt.event.MouseEvent, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 7044, 
7046, mouseEntered(java.awt.event.MouseEvent), 1.0, 7044, 
7047, mouseExited(java.awt.event.MouseEvent), 1.0, 7044, 
7048, mousePressed(java.awt.event.MouseEvent), 1.0, 7044, 
7049, mouseReleased(java.awt.event.MouseEvent), 1.0, 7044, 
7052, mouseClicked(java.awt.event.MouseEvent), 1.0, 7051, 
7053, mouseEntered(java.awt.event.MouseEvent), 1.0, 7051, 
7054, mouseExited(java.awt.event.MouseEvent), 1.0, 7051, 
7055, mousePressed(java.awt.event.MouseEvent), 1.0, 7051, 
7056, mouseReleased(java.awt.event.MouseEvent), 1.0, 7051, 
7060, MapSharingWizardView(), 0.0, 7059, 
7061, addCloseButtonMouseListener(java.awt.event.MouseListener), 1.0, 7059, 
7062, addNextButtonMouseListener(java.awt.event.MouseListener), 1.0, 7059, 
7063, addBackButtonMouseListener(java.awt.event.MouseListener), 1.0, 7059, 
7064, addAcceptButtonMouseListener(java.awt.event.MouseListener), 1.0, 7059, 
7065, addDeclineButtonMouseListener(java.awt.event.MouseListener), 1.0, 7059, 
7066, buildShareMapSelectionGui(javax.swing.SpringLayout, javax.swing.ButtonGroup, javax.swing.JPanel), 0.0, 7059, 
7067, buildConnectToServerGui(javax.swing.SpringLayout, javax.swing.JLabel, javax.swing.JPanel, javax.swing.JLabel, javax.swing.JLabel), 0.0, 7059, 
7068, buildSelectUserGui(javax.swing.SpringLayout, javax.swing.JPanel), 0.0, 7059, 
7070, buildMapShareAcceptDeclineGui(java.lang.String, javax.swing.SpringLayout), 1.0, 7059, 
7072, addCloseButton(javax.swing.JPanel), 1.0, 7059, 
7073, addAcceptDeclineButtons(javax.swing.JPanel), 1.0, 7059, 
7074, removeUIs(), 0.0, 7059, 
7075, showMapSharingSelectionDialog(), 0.0, 7059, 
7076, showConnectToServerDialog(), 0.0, 7059, 
7077, showSelectUserDialog(), 0.0, 7059, 
7078, showAwaitMapSharingMessage(), 0.0, 7059, 
7079, showSharingAcceptedMessage(java.lang.String, java.lang.String), 1.0, 7059, 
7080, showSharingDeclinedMessage(java.lang.String, java.lang.String), 1.0, 7059, 
7081, showSharingStoppedMessage(java.lang.String, java.lang.String), 1.0, 7059, 
7082, showMapShareAcceptDeclineMessage(java.lang.String, java.lang.String), 1.0, 7059, 
7083, isShareMapSelected(), 0.0, 7059, 
7084, isWaitForMapSharingSelected(), 0.0, 7059, 
7085, getServername(), 0.0, 7059, 
7086, getUsername(), 0.0, 7059, 
7087, getPassword(), 0.0, 7059, 
7088, getMapShareUserName(), 0.0, 7059, 
7090, printSizes(java.awt.Component), 1.0, 7089, 
7096, NewMapAction(freemind.modes.ModeController), 1.0, 7095, 
7097, actionPerformed(java.awt.event.ActionEvent), 1.0, 7095, 
7099, getSubterms(), 0.0, 7098, 
7100, getSearchTerm(), 0.0, 7098, 
7101, getFindFromText(java.lang.String), 0.0, 7098, 
7102, FindAction(freemind.modes.ControllerAdapter), 1.0, 7098, 
7103, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.lang.String, boolean, java.util.Collection, java.lang.String), 1.0, 7098, 
7106, breakSearchTermIntoSubterms(boolean, char, char, java.lang.String, java.lang.StringBuffer, int, java.util.ArrayList, int), 1.0, 7098, 
7108, findNext(), 0.0, 7098, 
7109, centerNode(freemind.modes.MindMapNode), 1.0, 7098, 
7112, actionPerformed(java.awt.event.ActionEvent, java.lang.String, boolean, java.util.Collection, java.lang.String), 1.0, 7110, 
7116, ReminderHookBase(), 0.0, 7115, 
7117, loadFrom(java.lang.String, freemind.main.XMLElement, java.util.HashMap), 1.0, 7115, 
7118, save(freemind.main.XMLElement, java.util.HashMap), 1.0, 7115, 
7119, shutdownMapHook(), 0.0, 7115, 
7120, invoke(freemind.modes.MindMapNode), 1.0, 7115, 
7121, scheduleTimer(freemind.modes.MindMapNode), 1.0, 7115, 
7123, getClockIcon(), 0.0, 7115, 
7124, getBellIcon(), 0.0, 7115, 
7125, getFlagIcon(), 0.0, 7115, 
7127, nodeRefresh(freemind.modes.MindMapNode), 1.0, 7115, 
7129, getRemindUserAt(), 0.0, 7115, 
7130, setRemindUserAt(long), 1.0, 7115, 
7131, getStateKey(), 0.0, 7115, 
7133, CheckReminder(), 0.0, 7132, 
7134, run(), 0.0, 7132, 
7136, run(java.lang.String, int, java.text.MessageFormat, Object[]), 0.0, 7135, 
7139, TimerBlinkTask(boolean), 1.0, 7138, 
7140, run(), 0.0, 7138, 
7142, run(), 0.0, 7141, 
7147, generateHtml(java.lang.StringBuffer, java.util.Iterator, accessories.plugins.util.html.ClickableImageCreator.AreaHolder), 0.0, 7145, 
7148, createArea(), 0.0, 7145, 
7149, createArea(accessories.plugins.util.html.ClickableImageCreator.AreaHolder, freemind.modes.MindMapNode, java.awt.Point, java.util.Iterator, freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode, javax.swing.JComponent), 1.0, 7145, 
7157, ExportListener(accessories.plugins.util.xslt.ExportDialog), 1.0, 7156, 
7159, actionPerformed(java.awt.event.ActionEvent), 1.0, 7156, 
7161, FileChooseListener(), 0.0, 7160, 
7163, actionPerformed(freemind.main.ExampleFileFilter, javax.swing.JFileChooser, java.awt.event.ActionEvent, int, int, java.lang.StringBuffer, java.lang.Object, java.lang.Exception), 1.0, 7160, 
7165, XmlExporter(), 0.0, 7164, 
7169, startupMapHook(java.io.BufferedOutputStream, java.io.FileOutputStream, org.w3c.dom.Document, java.io.File, org.apache.batik.svggen.SVGGraphics2D, freemind.view.mindmapview.MapView, org.apache.fop.svg.PDFTranscoder, org.apache.batik.transcoder.TranscoderOutput, org.apache.batik.transcoder.TranscoderInput, org.w3c.dom.Element, java.lang.Exception), 0.0, 7168, 
7171, startupMapHook(java.io.BufferedOutputStream, java.io.FileOutputStream, java.io.File, java.io.OutputStreamWriter, org.apache.batik.svggen.SVGGraphics2D, freemind.view.mindmapview.MapView, java.lang.Exception), 0.0, 7170, 
7173, fillSVGGraphics2D(java.awt.Rectangle, org.apache.batik.svggen.SVGGeneratorContext, freemind.view.mindmapview.MapView, org.apache.batik.svggen.SVGGraphics2D, org.w3c.dom.Document, java.lang.String, org.w3c.dom.DOMImplementation, org.apache.batik.svggen.SVGGeneratorContext.GraphicContextDefaults), 1.0, 7172, 
7177, CommonToggleChildrenFoldedAction(freemind.modes.viewmodes.ViewControllerAdapter), 1.0, 7176, 
7178, actionPerformed(java.awt.event.ActionEvent, freemind.view.mindmapview.NodeView), 1.0, 7176, 
7180, ViewControllerAdapter(freemind.modes.Mode), 1.0, 7179, 
7181, doubleClick(java.awt.event.MouseEvent), 1.0, 7179, 
7182, plainClick(java.awt.event.MouseEvent), 1.0, 7179, 
7183, extendSelection(boolean, java.lang.String, boolean, boolean, java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView, boolean), 1.0, 7179, 
7185, startupController(), 0.0, 7179, 
7186, shutdownController(), 0.0, 7179, 
7187, setAllActions(boolean), 1.0, 7179, 
7188, createXMLElement(), 0.0, 7179, 
7194, startupMapHook(java.net.URL, java.lang.ClassLoader, javax.help.HelpSet, java.lang.String, javax.help.HelpBroker, java.lang.Exception), 0.0, 7193, 
7198, init(java.awt.CardLayout, java.lang.String, com.jgoodies.forms.layout.FormLayout, javax.swing.JPanel, freemind.common.PropertyControl, com.jgoodies.forms.builder.DefaultFormBuilder, java.util.Iterator), 0.0, 7196, 
7199, addListeners(java.util.Iterator, freemind.common.PropertyBean, freemind.common.PropertyControl), 0.0, 7196, 
7200, getControls(java.util.Vector, java.util.Vector, freemind.modes.mindmapmode.MindMapController, java.util.Enumeration, freemind.modes.mindmapmode.actions.IconAction, java.util.Vector, freemind.modes.MindIcon, int, freemind.main.FreeMind, java.util.Vector), 0.0, 7196, 
7201, getPatternNames(freemind.controller.actions.generated.instance.Pattern, java.util.Iterator, java.util.Vector), 0.0, 7196, 
7202, getText(java.lang.String), 1.0, 7196, 
7203, setPattern(freemind.common.ThreeCheckBoxProperty, freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindIcon, java.util.Iterator, freemind.main.FreeMind), 1.0, 7196, 
7206, transformEdgeWidth(java.lang.String, java.util.HashMap, java.lang.String, java.lang.Integer, java.util.Iterator, int), 1.0, 7196, 
7207, transformStringToWidth(java.lang.String, int, java.util.HashMap), 1.0, 7196, 
7208, getEdgeWidthTransformation(java.util.HashMap), 0.0, 7196, 
7209, getResultPattern(freemind.controller.actions.generated.instance.Pattern), 0.0, 7196, 
7210, getResultPattern(freemind.controller.actions.generated.instance.Pattern), 1.0, 7196, 
7213, propertyChange(java.beans.PropertyChangeEvent, freemind.common.ThreeCheckBoxProperty, freemind.common.PropertyControl), 1.0, 7196, 
7214, setPatternList(java.util.List, java.util.Vector), 1.0, 7196, 
7216, StylePatternFrameType(), 0.0, 7215, 
7218, propertyChange(java.beans.PropertyChangeEvent, java.util.Iterator, freemind.common.ThreeCheckBoxProperty), 1.0, 7217, 
7221, transform(java.lang.String), 1.0, 7220, 
7223, transform(java.lang.String), 1.0, 7222, 
7226, transform(java.lang.String), 1.0, 7225, 
7229, transform(java.lang.String), 1.0, 7228, 
