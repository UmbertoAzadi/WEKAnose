3, MindMapMock(java.lang.String), 1.0, 2, 
4, getModeController(), 0.0, 2, 
5, nodeChanged(javax.swing.tree.TreeNode), 1.0, 2, 
6, nodeRefresh(javax.swing.tree.TreeNode), 1.0, 2, 
7, getAsPlainText(java.util.List), 1.0, 2, 
8, getAsRTF(java.util.List), 1.0, 2, 
9, getAsHTML(java.util.List), 1.0, 2, 
11, getFile(), 0.0, 2, 
12, getURL(), 0.0, 2, 
13, getXml(java.io.Writer), 1.0, 2, 
14, getFilteredXml(java.io.Writer), 1.0, 2, 
15, getRestoreable(), 0.0, 2, 
16, getPathToRoot(javax.swing.tree.TreeNode), 1.0, 2, 
17, getBackgroundColor(), 0.0, 2, 
18, setBackgroundColor(java.awt.Color), 1.0, 2, 
19, getLinkRegistry(), 0.0, 2, 
20, destroy(), 0.0, 2, 
21, isReadOnly(), 0.0, 2, 
22, getRegistry(), 0.0, 2, 
23, getFilter(), 0.0, 2, 
24, setFilter(freemind.controller.filter.Filter), 1.0, 2, 
25, getRoot(), 0.0, 2, 
27, getChildCount(java.lang.Object), 1.0, 2, 
28, isLeaf(java.lang.Object), 1.0, 2, 
31, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 2, 
32, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 2, 
33, getRootNode(), 0.0, 2, 
35, nodeStructureChanged(javax.swing.tree.TreeNode), 1.0, 2, 
36, setSaved(boolean), 1.0, 2, 
37, isSaved(), 0.0, 2, 
39, main(String[], junit.framework.TestResult), 1.0, 38, 
40, suite(junit.framework.TestSuite), 0.0, 38, 
42, testNewLines(java.lang.String, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.PatternChild), 0.0, 41, 
44, testLightBuldSplash(freemind.main.IFreeMindSplash, int), 0.0, 43, 
46, FreeMindMainMock(), 0.0, 45, 
47, getJFrame(), 0.0, 45, 
48, isApplet(), 0.0, 45, 
49, getView(), 0.0, 45, 
50, setView(freemind.view.mindmapview.MapView), 1.0, 45, 
51, getController(), 0.0, 45, 
52, setWaitingCursor(boolean), 1.0, 45, 
53, getPatternsFile(), 0.0, 45, 
54, getFreeMindMenuBar(), 0.0, 45, 
55, getResources(), 0.0, 45, 
56, getResourceString(java.lang.String), 1.0, 45, 
58, getContentPane(), 0.0, 45, 
59, out(java.lang.String), 1.0, 45, 
60, err(java.lang.String), 1.0, 45, 
61, openDocument(java.net.URL), 1.0, 45, 
62, repaint(), 0.0, 45, 
63, getResource(java.lang.String), 1.0, 45, 
65, getProperties(), 0.0, 45, 
66, getProperty(java.lang.String), 1.0, 45, 
68, saveProperties(), 0.0, 45, 
69, getFreemindDirectory(), 0.0, 45, 
70, getLayeredPane(), 0.0, 45, 
71, getViewport(), 0.0, 45, 
72, setTitle(java.lang.String), 1.0, 45, 
73, getWinHeight(), 0.0, 45, 
74, getWinWidth(), 0.0, 45, 
75, getWinState(), 0.0, 45, 
76, getWinX(), 0.0, 45, 
77, getWinY(), 0.0, 45, 
78, getFreemindVersion(), 0.0, 45, 
79, getLogger(java.lang.String), 1.0, 45, 
80, getFreeMindClassLoader(), 0.0, 45, 
81, getFreemindBaseDir(), 0.0, 45, 
82, getAdjustableProperty(java.lang.String), 1.0, 45, 
84, insertComponentIntoSplitPane(javax.swing.JComponent), 1.0, 45, 
85, removeSplitPane(), 0.0, 45, 
87, TransformTest(), 0.0, 86, 
88, testExportHtml(java.util.Properties, java.lang.String, java.lang.String), 0.0, 86, 
89, testExportHtmlWithImage(java.lang.String, java.lang.String, java.util.Properties), 0.0, 86, 
90, testExportHtmlApplet(java.lang.String, java.util.Properties, java.lang.String), 0.0, 86, 
91, testExportHtmlFlash(java.lang.String, java.lang.String, java.util.Properties), 0.0, 86, 
92, testExportOoo(java.util.Properties, java.lang.String, java.lang.String), 0.0, 86, 
97, testSignedInitialization(plugins.script.SignedScriptHandler, java.io.ByteArrayOutputStream), 0.0, 96, 
98, testScriptContents(plugins.script.SignedScriptHandler.ScriptContents), 0.0, 96, 
100, testSetHtml(freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 99, 
101, testEndContentMatcher(), 0.0, 99, 
102, matchingTest(java.lang.String), 1.0, 99, 
103, testNanoXmlContent(freemind.main.XMLElement), 0.0, 99, 
104, testXHtmlToHtmlConversion(), 0.0, 99, 
105, testWellFormedXml(), 0.0, 99, 
106, testBr(java.lang.String, java.lang.String), 0.0, 99, 
107, testSpaceHandling(java.lang.String), 0.0, 99, 
108, testSpaceHandlingInShtmlIdempotency(java.lang.String, com.lightdev.app.shtm.SHTMLPanel), 0.0, 99, 
109, testSpaceRemovalInShtml(java.lang.String, com.lightdev.app.shtm.SHTMLPanel), 0.0, 99, 
110, getInputStringWithManySpaces(java.lang.String, java.lang.String, java.lang.String), 1.0, 99, 
111, getHtmlBody(java.lang.String, java.lang.String), 1.0, 99, 
112, testUnicodeHandling(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String), 0.0, 99, 
113, testHtmlBodyExtraction(java.lang.String, java.lang.String), 0.0, 99, 
114, testIllegalXmlChars(), 0.0, 99, 
115, testSpaceReplacements(), 0.0, 99, 
117, testPanel(plugins.script.ScriptEditorPanel), 0.0, 116, 
118, testErrorLineNumbers(java.lang.String), 0.0, 116, 
120, getAmountOfScripts(), 0.0, 119, 
121, getScript(int), 1.0, 119, 
126, endDialog(boolean), 1.0, 119, 
127, isDirty(), 0.0, 119, 
128, addNewScript(), 0.0, 119, 
131, testDialog(int, javax.swing.JFrame), 0.0, 130, 
133, getText(java.lang.String), 1.0, 132, 
136, getProperty(), 0.0, 135, 
137, setProperty(java.lang.String), 1.0, 135, 
140, getText(java.lang.String), 1.0, 139, 
143, getProperty(), 0.0, 142, 
144, setProperty(java.lang.String), 1.0, 142, 
147, getText(java.lang.String), 1.0, 146, 
150, getProperty(), 0.0, 149, 
151, setProperty(java.lang.String), 1.0, 149, 
154, getText(java.lang.String), 1.0, 153, 
157, getProperty(), 0.0, 156, 
158, setProperty(java.lang.String), 1.0, 156, 
161, FreeMindTestBase(), 0.0, 160, 
162, FreeMindTestBase(java.lang.String), 1.0, 160, 
163, setUp(), 0.0, 160, 
164, getFrame(), 0.0, 160, 
167, centerNode(freemind.modes.MindMapNode), 1.0, 165, 
170, deregisterNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 165, 
171, deregisterNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 165, 
172, displayNode(freemind.modes.MindMapNode), 1.0, 165, 
173, doubleClick(java.awt.event.MouseEvent), 1.0, 165, 
174, extendSelection(java.awt.event.MouseEvent), 1.0, 165, 
175, fireNodePreDeleteEvent(freemind.modes.MindMapNode), 1.0, 165, 
176, firePreSaveEvent(freemind.modes.MindMapNode), 1.0, 165, 
177, getAttributeController(), 0.0, 165, 
178, getController(), 0.0, 165, 
179, getFrame(), 0.0, 165, 
180, getHookFactory(), 0.0, 165, 
181, getLastCurrentDir(), 0.0, 165, 
182, getLeftToolBar(), 0.0, 165, 
183, getLinkShortText(freemind.modes.MindMapNode), 1.0, 165, 
184, getMap(), 0.0, 165, 
185, getMode(), 0.0, 165, 
186, getModeToolBar(), 0.0, 165, 
187, getNodeFromID(java.lang.String), 1.0, 165, 
188, getNodeID(freemind.modes.MindMapNode), 1.0, 165, 
189, getPopupForModel(java.lang.Object), 1.0, 165, 
190, getPopupMenu(), 0.0, 165, 
191, getResource(java.lang.String), 1.0, 165, 
192, getSelected(), 0.0, 165, 
193, getSelecteds(), 0.0, 165, 
194, getSelectedsByDepth(), 0.0, 165, 
195, getSelectionColor(), 0.0, 165, 
196, getText(java.lang.String), 1.0, 165, 
197, getView(), 0.0, 165, 
198, isBlocked(), 0.0, 165, 
199, load(java.net.URL), 1.0, 165, 
200, loadURL(java.lang.String), 1.0, 165, 
201, newMap(), 0.0, 165, 
202, nodeChanged(freemind.modes.MindMapNode), 1.0, 165, 
203, nodeRefresh(freemind.modes.MindMapNode), 1.0, 165, 
204, cut(freemind.modes.MindMapNode), 1.0, 165, 
206, copy(freemind.modes.MindMapNode), 1.0, 165, 
207, copy(), 0.0, 165, 
208, copySingle(), 0.0, 165, 
210, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 165, 
211, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 165, 
212, open(), 0.0, 165, 
213, plainClick(java.awt.event.MouseEvent), 1.0, 165, 
214, registerNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 165, 
215, registerNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 165, 
216, save(java.io.File), 1.0, 165, 
217, save(), 0.0, 165, 
218, saveAs(), 0.0, 165, 
219, select(freemind.view.mindmapview.NodeView), 1.0, 165, 
220, select(freemind.modes.MindMapNode), 1.0, 165, 
222, setLastCurrentDir(java.io.File), 1.0, 165, 
223, setModel(freemind.modes.MapAdapter), 1.0, 165, 
224, setVisible(boolean), 1.0, 165, 
225, showPopupMenu(java.awt.event.MouseEvent), 1.0, 165, 
226, shutdownController(), 0.0, 165, 
227, sortNodesByDepth(java.util.List), 1.0, 165, 
228, startupController(), 0.0, 165, 
229, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 165, 
230, updatePopupMenu(freemind.controller.StructuredMenuHolder), 1.0, 165, 
231, getSelectedView(), 0.0, 165, 
232, getNodeView(freemind.modes.MindMapNode), 1.0, 165, 
233, refreshMap(), 0.0, 165, 
234, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 165, 
235, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 165, 
236, setBackgroundColor(java.awt.Color), 1.0, 165, 
237, getFileChooser(javax.swing.filechooser.FileFilter), 1.0, 165, 
238, load(java.io.File), 1.0, 165, 
240, testDifferentBase64ers(java.lang.String, java.lang.String, java.lang.String, java.lang.String), 0.0, 239, 
243, FormatPaste(), 0.0, 242, 
244, invoke(freemind.modes.MindMapNode, java.lang.String), 1.0, 242, 
245, pasteFormat(freemind.modes.MindMapNode), 1.0, 242, 
246, copyFormat(freemind.modes.MindMapNode), 1.0, 242, 
248, IconSelectionPlugin(), 0.0, 247, 
249, invoke(javax.swing.Action, java.util.Vector, freemind.main.FreeMind, freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapController, freemind.view.mindmapview.MapView, java.util.Vector, freemind.modes.common.dialogs.IconSelectionPopupDialog, int, freemind.view.mindmapview.NodeView), 1.0, 247, 
251, EncryptNode(), 0.0, 250, 
252, invoke(freemind.modes.MindMapNode, java.lang.String), 1.0, 250, 
253, newEncryptedMap(freemind.modes.mindmapmode.EncryptedMindMapNode, freemind.modes.ModeController, java.lang.StringBuffer, freemind.modes.MapAdapter, freemind.modes.mindmapmode.MindMapController), 0.0, 250, 
254, encrypt(freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.lang.StringBuffer, freemind.modes.mindmapmode.MindMapController, java.lang.Exception), 1.0, 250, 
255, getUsersPassword(freemind.modes.common.dialogs.EnterPasswordDialog, java.lang.StringBuffer), 0.0, 250, 
256, toggleCryptState(freemind.modes.MindMapNode, freemind.view.mindmapview.MapView, freemind.modes.mindmapmode.MindMapController, freemind.modes.mindmapmode.EncryptedMindMapNode), 1.0, 250, 
257, doPasswordCheckAndDecryptNode(freemind.modes.mindmapmode.EncryptedMindMapNode, freemind.modes.common.dialogs.EnterPasswordDialog), 1.0, 250, 
260, register(), 0.0, 258, 
261, deRegister(), 0.0, 258, 
267, AutomaticLayout(), 0.0, 266, 
268, setStyle(int, int, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.Pattern), 1.0, 266, 
269, depth(freemind.modes.MindMapNode), 1.0, 266, 
270, onAddChildren(freemind.modes.MindMapNode), 1.0, 266, 
271, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 266, 
272, onUpdateNodeHook(), 0.0, 266, 
273, invoke(freemind.modes.MindMapNode), 1.0, 266, 
274, reloadPatterns(java.lang.String), 0.0, 266, 
275, setStyleRecursive(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 266, 
278, register(), 0.0, 276, 
279, deRegister(), 0.0, 276, 
284, StylePropertyTranslator(freemind.modes.mindmapmode.MindMapController), 1.0, 283, 
285, getText(java.lang.String), 1.0, 283, 
288, getDescription(), 0.0, 286, 
289, getLabel(), 0.0, 286, 
290, setValue(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Pattern), 1.0, 286, 
291, getValue(), 0.0, 286, 
293, actionPerformed(freemind.controller.actions.generated.instance.Pattern, java.awt.event.ActionEvent, accessories.plugins.dialogs.ChooseFormatPopupDialog, freemind.controller.actions.generated.instance.Pattern), 1.0, 286, 
294, getPatternFromString(), 0.0, 286, 
295, setEnabled(boolean), 1.0, 286, 
298, getDescription(), 0.0, 296, 
299, getLabel(), 0.0, 296, 
300, setValue(java.lang.String, freemind.controller.actions.generated.instance.Patterns, int, java.util.Iterator, accessories.plugins.AutomaticLayout.StylePropertyTranslator, freemind.controller.actions.generated.instance.Pattern), 1.0, 296, 
301, getValue(), 0.0, 296, 
303, getPatternsFromString(), 0.0, 296, 
304, setEnabled(boolean), 1.0, 296, 
305, valueChanged(freemind.controller.actions.generated.instance.Pattern, javax.swing.event.ListSelectionEvent, accessories.plugins.dialogs.ChooseFormatPopupDialog, freemind.controller.actions.generated.instance.Patterns, javax.swing.JList), 1.0, 296, 
307, run(), 0.0, 306, 
310, AutomaticLayoutPropertyContributor(freemind.modes.mindmapmode.MindMapController), 1.0, 309, 
311, getControls(freemind.common.TextTranslator, java.util.Vector), 1.0, 309, 
313, ExportToImage(), 0.0, 312, 
314, startupMapHook(java.awt.image.BufferedImage, java.lang.String), 0.0, 312, 
318, SortNodes(), 0.0, 317, 
319, invoke(freemind.modes.MindMapNode, java.awt.datatransfer.Transferable, java.util.Iterator, java.util.Vector, java.util.Vector, freemind.modes.MindMapNode), 1.0, 317, 
325, shouldUseSplitPane(), 0.0, 323, 
326, register(java.lang.String, javax.swing.Action), 0.0, 323, 
327, deRegister(), 0.0, 323, 
328, showNotesPanel(java.lang.String, java.awt.Font, accessories.plugins.NodeNoteRegistration.SouthPanel), 0.0, 323, 
329, hideNotesPanel(), 0.0, 323, 
331, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.EditNoteToNodeAction, java.lang.String, java.lang.String), 1.0, 323, 
332, getDoActionClass(), 0.0, 323, 
334, getMindMapController(), 0.0, 323, 
335, getNoteViewerComponent(), 0.0, 323, 
336, getHtmlEditorPanel(), 0.0, 323, 
337, getSplitPane(), 0.0, 323, 
339, getDocumentText(java.lang.String), 0.0, 323, 
340, normalizeString(java.lang.String), 1.0, 323, 
342, getString(java.lang.String, java.lang.String), 1.0, 341, 
345, SouthPanel(), 0.0, 344, 
348, changedUpdate(javax.swing.event.DocumentEvent), 1.0, 347, 
349, docEvent(java.lang.String, java.lang.String), 0.0, 347, 
350, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 347, 
351, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 347, 
352, setNode(freemind.modes.MindMapNode), 1.0, 347, 
355, NotesManager(), 0.0, 354, 
356, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 354, 
357, onSelectHook(freemind.view.mindmapview.NodeView, javax.swing.text.html.HTMLDocument, java.lang.String, java.lang.Exception), 1.0, 354, 
358, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 354, 
359, onSaveNode(boolean, freemind.modes.MindMapNode, javax.swing.JEditorPane, int, int, java.lang.String, int, java.lang.String), 1.0, 354, 
360, onCreateNodeHook(freemind.modes.MindMapNode), 1.0, 354, 
361, onPreDeleteNode(freemind.modes.MindMapNode), 1.0, 354, 
364, actionPerformed(java.awt.event.ActionEvent), 1.0, 363, 
367, actionPerformed(java.awt.event.ActionEvent, java.lang.Exception), 1.0, 366, 
370, ExportToOoWriter(), 0.0, 369, 
371, startupMapHook(java.io.File, java.io.IOException), 0.0, 369, 
372, exportToOoWriter(java.io.File, java.io.StringWriter, java.lang.String), 1.0, 369, 
377, ApplyFormatPlugin(), 0.0, 376, 
378, invoke(freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode, java.util.List, java.util.Iterator, accessories.plugins.dialogs.ChooseFormatPopupDialog, freemind.modes.MindMapNode), 1.0, 376, 
380, NewParentNode(), 0.0, 379, 
381, invoke(boolean, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.List, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.Iterator, freemind.view.mindmapview.MapView, java.util.Vector, java.util.Vector, java.util.List, freemind.modes.MindMapNode, java.awt.datatransfer.Transferable), 1.0, 379, 
385, CreationModificationPlugin(), 0.0, 384, 
386, setStyle(freemind.modes.MindMapNode, java.lang.String, Object[], java.text.MessageFormat), 1.0, 384, 
387, shutdownMapHook(), 0.0, 384, 
388, removeToolTipRecursively(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 384, 
389, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 384, 
390, onUpdateNodeHook(), 0.0, 384, 
391, invoke(freemind.modes.MindMapNode), 1.0, 384, 
392, setStyleRecursive(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 384, 
393, onAddChildren(freemind.modes.MindMapNode), 1.0, 384, 
394, onNewChild(freemind.modes.MindMapNode), 1.0, 384, 
396, ChangeNodeLevelAction(), 0.0, 395, 
397, invoke(java.util.List, freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.List, freemind.modes.MindMapNode, boolean, freemind.modes.MindMapNode, java.util.Iterator, java.awt.datatransfer.Transferable, freemind.modes.MindMapNode, freemind.modes.MindMapNode, int, boolean, java.util.Vector, freemind.modes.MindMapNode, java.lang.String, java.util.Iterator, java.lang.String, int, int), 1.0, 395, 
400, SaveAll(), 0.0, 399, 
401, startupMapHook(freemind.view.MapModule, freemind.controller.Controller, java.util.Map, java.util.Vector, freemind.view.MapModule, java.util.Iterator), 0.0, 399, 
402, getMapModules(), 0.0, 399, 
404, ManagePatterns(), 0.0, 403, 
405, startupMapHook(java.io.File, freemind.main.FreeMind, accessories.plugins.dialogs.ManagePatternsPopupDialog, java.lang.Exception), 0.0, 403, 
407, RemoveNote(), 0.0, 406, 
408, invoke(freemind.modes.MindMapNode, java.util.Iterator, int, freemind.modes.MindMapNode), 1.0, 406, 
409, removeNote(freemind.modes.MindMapNode), 1.0, 406, 
413, deRegister(), 0.0, 410, 
414, register(), 0.0, 410, 
416, FormularEditor(), 0.0, 415, 
417, loadFrom(freemind.main.XMLElement, freemind.main.XMLElement, int, java.lang.String), 1.0, 415, 
418, save(freemind.main.XMLElement, java.util.Iterator, freemind.main.XMLElement, accessories.plugins.FormularEditor.FormularEntity), 1.0, 415, 
419, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 415, 
420, shutDownDisplay(freemind.main.FreeMindMain), 0.0, 415, 
421, onSelectHook(freemind.view.mindmapview.NodeView, freemind.main.FreeMindMain, int, java.util.Iterator, java.awt.GridBagLayout, accessories.plugins.FormularEditor.FormularEntity), 1.0, 415, 
422, shutdownMapHook(), 0.0, 415, 
424, getValue(), 0.0, 423, 
425, setValue(java.lang.String), 1.0, 423, 
426, getLabel(), 0.0, 423, 
427, setLabel(java.lang.String), 1.0, 423, 
430, save(freemind.main.XMLElement), 1.0, 423, 
431, getDisplayLabel(), 0.0, 423, 
432, FormularEntity(freemind.main.XMLElement), 1.0, 423, 
433, getType(), 0.0, 423, 
434, setDisplayLabel(java.lang.String), 1.0, 423, 
437, StringEntity(freemind.main.XMLElement), 1.0, 435, 
439, FitToPage(), 0.0, 438, 
440, startupMapHook(), 0.0, 438, 
442, scroll(java.awt.Rectangle, java.awt.Rectangle), 0.0, 438, 
443, zoom(double, double, java.awt.Dimension, java.awt.Rectangle, double, javax.swing.JViewport, javax.swing.JScrollPane), 0.0, 438, 
445, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 444, 
446, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 444, 
447, changedUpdate(javax.swing.event.DocumentEvent, java.lang.String, javax.swing.text.BadLocationException), 1.0, 444, 
450, CheckBoxEntity(freemind.main.XMLElement), 1.0, 449, 
453, run(), 0.0, 452, 
456, SplitNode(), 0.0, 455, 
457, invoke(freemind.modes.MindMapNode, java.util.List, java.util.ListIterator, freemind.modes.MindMapNode), 1.0, 455, 
458, splitNode(String[], freemind.modes.MindMapNode, java.lang.String, freemind.modes.mindmapmode.MindMapController, java.lang.String, int, freemind.modes.MindMapNode, int, int, freemind.modes.MindMapNode), 1.0, 455, 
459, splitNode(javax.swing.text.html.HTMLDocument, java.lang.String, int, java.io.StringWriter, int, javax.swing.text.Element, int, int, javax.swing.text.Element, int, String[], java.io.StringReader, java.lang.String, java.lang.String, javax.swing.text.html.HTMLEditorKit, javax.swing.text.BadLocationException), 1.0, 455, 
460, getParentElement(javax.swing.text.Element, javax.swing.text.html.HTMLDocument, javax.swing.text.Element), 1.0, 455, 
462, itemStateChanged(java.awt.event.ItemEvent), 1.0, 461, 
466, ChoiceEntity(freemind.main.XMLElement, freemind.main.XMLElement, int), 1.0, 464, 
467, save(freemind.main.XMLElement, int, freemind.main.XMLElement), 1.0, 464, 
469, run(freemind.view.mindmapview.MapView), 0.0, 468, 
472, ChoiceElement(freemind.main.XMLElement), 1.0, 471, 
473, save(freemind.main.XMLElement), 1.0, 471, 
475, chooseFile(java.lang.String), 0.0, 474, 
476, ExportWithXSLT(), 0.0, 474, 
477, startupMapHook(freemind.modes.MindMap, freemind.modes.ModeController, java.io.File), 0.0, 474, 
478, transform(boolean, java.io.File, java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.Exception), 1.0, 474, 
479, copyMap(java.lang.String, java.io.BufferedWriter, boolean), 1.0, 474, 
480, copyIcons(boolean, java.lang.String, java.lang.String), 1.0, 474, 
481, createImageFromMap(java.lang.String, java.io.FileOutputStream, java.awt.image.BufferedImage, java.io.IOException), 1.0, 474, 
482, copyIconsToDirectory(String[], java.lang.String, freemind.modes.MindIcon, java.lang.String, int, java.util.Vector, java.io.File), 1.0, 474, 
484, createDirectory(java.lang.String, java.io.File), 1.0, 474, 
486, getMapXml(java.io.StringWriter), 0.0, 474, 
487, getAreaCode(java.lang.String, boolean, freemind.modes.MindMapNode, accessories.plugins.util.html.ClickableImageCreator), 1.0, 474, 
488, export(java.io.File, accessories.plugins.util.xslt.ExportDialog), 1.0, 474, 
490, isTransformResultWithoutError(), 0.0, 474, 
495, itemStateChanged(java.awt.event.ItemEvent), 1.0, 494, 
498, UnfoldAll(), 0.0, 497, 
499, invoke(freemind.modes.MindMapNode, boolean, java.lang.String, java.lang.String), 1.0, 497, 
500, unfoldOneStage(freemind.modes.MindMapNode, int), 1.0, 497, 
501, foldOneStage(freemind.modes.MindMapNode), 1.0, 497, 
502, foldAll(freemind.modes.MindMapNode, java.util.Iterator), 1.0, 497, 
503, unfoldAll(freemind.modes.MindMapNode, java.util.Iterator), 1.0, 497, 
504, foldLastBranches(boolean, freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 497, 
508, getMinDepth(int, int, freemind.modes.MindMapNode, java.util.Iterator), 1.0, 497, 
509, getMaxDepth(int, int, freemind.modes.MindMapNode, java.util.Iterator), 1.0, 497, 
510, depth(freemind.modes.MindMapNode), 1.0, 497, 
513, register(), 0.0, 511, 
514, deRegister(), 0.0, 511, 
515, handleMouseWheelEvent(java.awt.event.MouseWheelEvent, freemind.modes.MindMapNode), 1.0, 511, 
517, NodeHistory(), 0.0, 516, 
518, invoke(accessories.plugins.NodeHistory.NodeHolder, boolean, freemind.view.MapModule, freemind.modes.MindMapNode, boolean, freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapController, freemind.view.MapModule, freemind.controller.Controller, accessories.plugins.NodeHistory.Registration, java.lang.String), 1.0, 516, 
519, printVector(accessories.plugins.NodeHistory.NodeHolder, java.lang.StringBuffer, java.util.Iterator, int), 0.0, 516, 
522, getNode(freemind.controller.Controller, freemind.modes.ModeController), 1.0, 520, 
523, getModeController(freemind.modes.ModeController, freemind.controller.Controller, freemind.view.MapModule), 1.0, 520, 
524, getMapModule(freemind.view.MapModule, freemind.controller.Controller, java.lang.String, java.util.Map, java.util.Iterator), 1.0, 520, 
526, getModuleGivenModeController(freemind.view.MapModule, freemind.modes.mindmapmode.MindMapController, java.util.Iterator, java.util.Map.Entry), 1.0, 520, 
529, register(), 0.0, 527, 
530, deRegister(), 0.0, 527, 
531, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 527, 
532, onSelectHook(freemind.view.mindmapview.NodeView, int), 1.0, 527, 
533, onSaveNode(freemind.modes.MindMapNode), 1.0, 527, 
534, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 527, 
537, run(freemind.modes.ModeController, freemind.view.mindmapview.NodeView, boolean), 0.0, 536, 
540, BlinkingNodeHook(), 0.0, 539, 
541, invoke(freemind.modes.MindMapNode), 1.0, 539, 
542, shutdownMapHook(), 0.0, 539, 
544, TimerColorChanger(), 0.0, 543, 
545, run(), 0.0, 543, 
547, run(), 0.0, 546, 
550, visit(int, freemind.view.mindmapview.NodeView, java.awt.Color), 1.0, 549, 
554, register(), 0.0, 552, 
555, deRegister(), 0.0, 552, 
556, executeAction(freemind.controller.actions.generated.instance.XmlAction), 1.0, 552, 
557, detectFormatChanges(freemind.controller.actions.generated.instance.XmlAction, java.util.Iterator, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CompoundAction), 1.0, 552, 
558, startTransaction(java.lang.String), 1.0, 552, 
559, endTransaction(java.lang.String), 1.0, 552, 
560, filterAction(freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.controller.actions.generated.instance.FormatNodeAction, java.util.Iterator, freemind.controller.actions.generated.instance.NodeAction, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.controller.actions.generated.instance.NewNodeAction), 1.0, 552, 
562, startupMapHook(javax.swing.JSplitPane, int, java.lang.String, accessories.plugins.NodeNoteRegistration), 0.0, 561, 
563, getSplitPaneToScreen(javax.swing.JSplitPane, accessories.plugins.NodeNoteRegistration), 1.0, 561, 
566, run(), 0.0, 565, 
569, ImportMindmanagerFiles(), 0.0, 568, 
570, startupMapHook(java.lang.String, java.awt.Container, int, javax.swing.JFileChooser, java.io.File, java.io.File), 0.0, 568, 
571, importMindmanagerFile(java.io.File, java.io.File, java.util.zip.ZipInputStream, java.lang.String, java.net.URL, java.io.InputStream, java.util.zip.ZipEntry, java.io.FileWriter, java.lang.String, java.io.IOException), 1.0, 568, 
574, shutdownMapHook(freemind.modes.MindMapNode), 0.0, 573, 
575, removeIcons(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 573, 
576, HierarchicalIcons(), 0.0, 573, 
577, setStyle(boolean, freemind.modes.MindMapNode, freemind.modes.MindIcon, java.util.TreeSet, java.lang.String, freemind.view.mindmapview.MultipleImage, java.util.Iterator, freemind.modes.MindMapNode, java.util.TreeSet), 1.0, 573, 
579, onAddChildren(freemind.modes.MindMapNode), 1.0, 573, 
581, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 573, 
582, onUpdateNodeHook(), 0.0, 573, 
583, invoke(freemind.modes.MindMapNode), 1.0, 573, 
584, gatherLeavesAndSetStyle(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 573, 
585, gatherLeavesAndSetParentsStyle(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 573, 
586, setStyleRecursive(freemind.modes.MindMapNode), 1.0, 573, 
588, RevisionPlugin(), 0.0, 587, 
589, invoke(freemind.modes.MindMapNode), 1.0, 587, 
590, shutdownMapHook(), 0.0, 587, 
591, executeAction(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.EditNodeAction, freemind.modes.NodeAdapter), 1.0, 587, 
592, startTransaction(java.lang.String), 1.0, 587, 
593, endTransaction(java.lang.String), 1.0, 587, 
596, MenuBar(freemind.controller.Controller), 1.0, 595, 
597, updateMenus(freemind.modes.ModeController), 1.0, 595, 
598, updateModeMenu(java.awt.event.ActionListener, java.util.List, java.lang.String, javax.swing.JRadioButtonMenuItem, javax.swing.JRadioButtonMenuItem, java.lang.String, javax.swing.ButtonGroup, java.util.ListIterator), 0.0, 595, 
599, addAdditionalPopupActions(javax.swing.JMenuItem), 0.0, 595, 
601, updateFileMenu(javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem), 0.0, 595, 
602, updateLastOpenedList(boolean, java.lang.String, javax.swing.JMenuItem, freemind.controller.LastOpenedList, java.util.ListIterator), 0.0, 595, 
603, updateEditMenu(javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem), 0.0, 595, 
604, updateViewMenu(javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.ButtonGroup, javax.swing.JRadioButtonMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenu, javax.swing.JMenuItem, javax.swing.JRadioButtonMenuItem, javax.swing.JRadioButtonMenuItem), 0.0, 595, 
606, getMapsPopupMenu(), 0.0, 595, 
608, getMenuHolder(), 0.0, 595, 
611, StructuredMenuHolder(java.util.Vector), 0.0, 610, 
615, adjustTooltips(freemind.controller.StructuredMenuItemHolder, java.lang.String, java.lang.String), 1.0, 610, 
616, addCategory(java.lang.String, java.util.StringTokenizer, freemind.controller.StructuredMenuHolder.MapTokenPair), 1.0, 610, 
617, addSeparator(java.lang.String, java.lang.String, java.util.StringTokenizer, freemind.controller.StructuredMenuHolder.MapTokenPair), 1.0, 610, 
623, adjustMenuItem(javax.swing.JMenuItem), 1.0, 610, 
625, toString(), 0.0, 610, 
626, print(java.lang.String, int), 1.0, 610, 
627, lastItemIsASeparator(javax.swing.JMenu), 1.0, 610, 
628, lastItemIsASeparator(javax.swing.JPopupMenu), 1.0, 610, 
631, actionPerformed(java.awt.event.ActionEvent), 1.0, 630, 
634, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 633, 
635, addSeparator(), 0.0, 633, 
636, addCategory(java.lang.String), 1.0, 633, 
639, run(), 0.0, 638, 
644, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 643, 
645, addSeparator(), 0.0, 643, 
646, addCategory(java.lang.String), 1.0, 643, 
649, actionPerformed(java.awt.event.ActionEvent, java.lang.String, java.lang.Exception), 1.0, 648, 
652, actionPerformed(java.awt.event.ActionEvent), 1.0, 651, 
655, addMenuItem(freemind.controller.StructuredMenuItemHolder, javax.swing.JMenuItem, freemind.controller.StructuredMenuHolder.MenuEventSupplier), 1.0, 654, 
656, addSeparator(), 0.0, 654, 
657, addCategory(java.lang.String), 1.0, 654, 
660, run(), 0.0, 659, 
663, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 662, 
664, addSeparator(), 0.0, 662, 
665, addCategory(java.lang.String), 1.0, 662, 
668, addMenuItem(freemind.controller.StructuredMenuItemHolder), 1.0, 667, 
669, addSeparator(), 0.0, 667, 
670, addCategory(java.lang.String), 1.0, 667, 
672, MenuItemAdder(javax.swing.JMenu), 1.0, 671, 
673, addMenuItem(freemind.controller.StructuredMenuItemHolder, javax.swing.JMenuItem), 1.0, 671, 
674, addSeparator(), 0.0, 671, 
675, addCategory(java.lang.String), 1.0, 671, 
677, createAdder(javax.swing.JMenu), 1.0, 676, 
679, createAdder(javax.swing.JMenu), 1.0, 678, 
682, SeparatorHolder(), 0.0, 681, 
684, createAdder(javax.swing.JMenu), 1.0, 683, 
687, addMenuListener(javax.swing.event.MenuListener), 1.0, 686, 
688, removeMenuListener(javax.swing.event.MenuListener), 1.0, 686, 
690, StructuredMenuListener(), 0.0, 689, 
691, menuSelected(boolean, boolean, javax.swing.event.MenuEvent, java.util.Iterator, javax.swing.JMenuItem, javax.swing.JCheckBoxMenuItem, javax.swing.Action, freemind.controller.StructuredMenuItemHolder, java.lang.Exception), 1.0, 689, 
692, menuDeselected(javax.swing.event.MenuEvent), 1.0, 689, 
693, menuCanceled(javax.swing.event.MenuEvent), 1.0, 689, 
694, addItem(freemind.controller.StructuredMenuItemHolder), 1.0, 689, 
697, mapOpened(freemind.view.MapModule, java.lang.String), 1.0, 695, 
698, mapClosed(freemind.view.MapModule), 1.0, 695, 
699, save(java.lang.String, java.util.ListIterator), 0.0, 695, 
700, load(java.lang.String, java.util.StringTokenizer), 1.0, 695, 
701, open(boolean, java.lang.String, java.lang.String, java.util.StringTokenizer, java.lang.String), 1.0, 695, 
702, listIterator(), 0.0, 695, 
704, addListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 703, 
705, removeListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 703, 
706, MapModuleManager(freemind.controller.Controller), 1.0, 703, 
707, getMapModules(java.util.HashMap, freemind.view.MapModule, java.util.Iterator), 0.0, 703, 
708, getMapModuleVector(), 0.0, 703, 
709, getMapKeys(freemind.view.MapModule, java.util.LinkedList, java.util.Iterator), 0.0, 703, 
710, getMapModule(), 0.0, 703, 
712, updateMapModuleName(), 0.0, 703, 
713, nextMapModule(int, int), 0.0, 703, 
714, previousMapModule(int, int), 0.0, 703, 
715, tryToChangeToMapModule(java.lang.String), 1.0, 703, 
716, checkIfFileIsAlreadyOpened(java.net.URL, java.util.Iterator, freemind.view.MapModule, java.net.URL), 1.0, 703, 
718, changeToMapModule(freemind.view.MapModule, freemind.view.MapModule, java.lang.String, java.util.Iterator), 1.0, 703, 
719, changeToMapModule(freemind.view.MapModule), 1.0, 703, 
720, changeToMapOfMode(freemind.modes.Mode, java.util.Iterator, freemind.view.MapModule), 1.0, 703, 
723, close(int, boolean, boolean, freemind.view.MapModule), 1.0, 703, 
729, numberOfOpenMapInformation(int), 1.0, 724, 
731, addListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 730, 
732, removeListener(freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 730, 
736, numberOfOpenMapInformation(int, java.util.Iterator, freemind.controller.MapModuleManager.MapModuleChangeObserver), 1.0, 730, 
742, MapMouseMotionListener(freemind.controller.Controller), 1.0, 741, 
743, register(freemind.controller.MapMouseMotionListener.MapMouseMotionReceiver), 1.0, 741, 
744, deregister(), 0.0, 741, 
745, handlePopup(javax.swing.JPopupMenu, java.awt.event.MouseEvent, java.lang.Object), 1.0, 741, 
746, mouseMoved(java.awt.event.MouseEvent), 1.0, 741, 
747, mouseDragged(java.awt.event.MouseEvent), 1.0, 741, 
748, mouseClicked(java.awt.event.MouseEvent), 1.0, 741, 
749, mouseEntered(java.awt.event.MouseEvent), 1.0, 741, 
750, mouseExited(java.awt.event.MouseEvent), 1.0, 741, 
751, mousePressed(java.awt.event.MouseEvent), 1.0, 741, 
752, mouseReleased(java.awt.event.MouseEvent), 1.0, 741, 
754, mouseDragged(java.awt.event.MouseEvent), 1.0, 753, 
755, mousePressed(java.awt.event.MouseEvent), 1.0, 753, 
756, mouseReleased(java.awt.event.MouseEvent), 1.0, 753, 
759, getTransferData(java.awt.datatransfer.DataFlavor, byte[]), 1.0, 757, 
760, getTransferDataFlavors(), 0.0, 757, 
761, isDataFlavorSupported(java.awt.datatransfer.DataFlavor), 1.0, 757, 
763, setDropAction(java.lang.String), 1.0, 757, 
765, firePopupMenuWillBecomeVisible(java.util.Iterator, javax.swing.event.MenuListener), 0.0, 764, 
766, addMenuListener(javax.swing.event.MenuListener), 1.0, 764, 
767, removeMenuListener(javax.swing.event.MenuListener), 1.0, 764, 
768, firePopupMenuCanceled(java.util.Iterator, javax.swing.event.MenuListener), 0.0, 764, 
769, firePopupMenuWillBecomeInvisible(java.util.Iterator, javax.swing.event.MenuListener), 0.0, 764, 
772, MapMouseWheelListener(freemind.controller.Controller), 1.0, 771, 
773, mouseWheelMoved(java.awt.event.MouseWheelEvent), 1.0, 771, 
774, register(java.awt.event.MouseWheelListener), 1.0, 771, 
775, deregister(), 0.0, 771, 
777, Controller(freemind.main.FreeMindMain, java.awt.KeyboardFocusManager), 1.0, 776, 
778, getProperty(java.lang.String), 1.0, 776, 
782, getFrame(), 0.0, 776, 
783, getJFrame(freemind.main.FreeMindMain), 0.0, 776, 
784, getResource(java.lang.String), 1.0, 776, 
785, getResourceString(java.lang.String), 1.0, 776, 
786, getModeController(), 0.0, 776, 
787, getModel(), 0.0, 776, 
788, getView(), 0.0, 776, 
789, getModes(), 0.0, 776, 
790, getMode(), 0.0, 776, 
791, getZooms(), 0.0, 776, 
792, getMapModuleManager(), 0.0, 776, 
793, getLastOpenedList(), 0.0, 776, 
794, getMapModule(), 0.0, 776, 
795, getToolBar(), 0.0, 776, 
796, getFontThroughMap(java.awt.Font), 1.0, 776, 
797, setAntialiasEdges(boolean), 1.0, 776, 
798, setAntialiasAll(boolean), 1.0, 776, 
799, getAntialiasEdges(), 0.0, 776, 
800, getAntialiasAll(), 0.0, 776, 
801, getDefaultFont(java.lang.String, int, int), 0.0, 776, 
802, getDefaultFontFamilyName(java.lang.String), 0.0, 776, 
803, getDefaultFontStyle(int), 0.0, 776, 
804, getDefaultFontSize(int), 0.0, 776, 
805, getCommonJColorChooser(), 0.0, 776, 
811, numberOfOpenMapInformation(int), 1.0, 776, 
812, createNewMode(java.lang.String, Object[], freemind.modes.Mode, java.text.MessageFormat), 1.0, 776, 
813, setMenubarVisible(boolean), 1.0, 776, 
814, setToolbarVisible(boolean), 1.0, 776, 
815, getToolbar(), 0.0, 776, 
816, setLeftToolbarVisible(boolean, java.awt.Component), 1.0, 776, 
817, getNodeKeyListener(), 0.0, 776, 
818, getNodeMouseMotionListener(), 0.0, 776, 
819, getNodeMotionListener(), 0.0, 776, 
820, getMapMouseMotionListener(), 0.0, 776, 
821, getMapMouseWheelListener(), 0.0, 776, 
822, getNodeDragListener(), 0.0, 776, 
823, getNodeDropListener(), 0.0, 776, 
824, setFrame(freemind.main.FreeMindMain), 1.0, 776, 
825, moveToRoot(), 0.0, 776, 
826, close(boolean), 1.0, 776, 
827, informationMessage(java.lang.Object), 1.0, 776, 
829, errorMessage(java.lang.String, java.lang.Object), 1.0, 776, 
831, obtainFocusForSelected(), 0.0, 776, 
832, setZoom(float, Object[], java.lang.String), 1.0, 776, 
833, setTitle(java.lang.String, freemind.modes.MindMap, java.lang.String, java.text.MessageFormat, freemind.controller.MapModuleManager.MapTitleChangeListener, Object[], java.io.File, freemind.view.MapModule, java.util.Iterator), 0.0, 776, 
834, registerMapTitleChangeListener(freemind.controller.MapModuleManager.MapTitleChangeListener), 1.0, 776, 
835, deregisterMapTitleChangeListener(freemind.controller.MapModuleManager.MapTitleChangeListener), 1.0, 776, 
836, setAllActions(boolean), 1.0, 776, 
837, quit(boolean, int, java.lang.String, java.lang.String), 0.0, 776, 
838, acquirePrinterJobAndPageFormat(java.lang.SecurityException), 0.0, 776, 
839, getPropertyChangeListeners(), 0.0, 776, 
840, toggleSelectionAsRectangle(), 0.0, 776, 
841, isSelectionAsRectangle(), 0.0, 776, 
842, getMap(), 0.0, 776, 
843, addPropertyChangeListener(freemind.preferences.FreemindPropertyListener), 1.0, 776, 
844, addPropertyChangeListenerAndPropagate(freemind.preferences.FreemindPropertyListener, java.lang.String, java.util.Properties, java.util.Iterator), 1.0, 776, 
845, removePropertyChangeListener(freemind.preferences.FreemindPropertyListener), 1.0, 776, 
846, getFilterController(), 0.0, 776, 
847, getPageFormat(), 0.0, 776, 
849, setEdgesRenderingHint(java.awt.Graphics2D, java.lang.Object), 1.0, 776, 
850, setTextRenderingHint(java.awt.Graphics2D), 1.0, 776, 
852, propertyChange(java.beans.PropertyChangeEvent, java.lang.String, java.awt.Component), 1.0, 851, 
855, ColorTracker(javax.swing.JColorChooser), 1.0, 854, 
856, actionPerformed(java.awt.event.ActionEvent), 1.0, 854, 
857, getColor(), 0.0, 854, 
859, windowClosing(java.awt.event.WindowEvent, java.awt.Window), 1.0, 858, 
862, componentHidden(java.awt.event.ComponentEvent, java.awt.Window), 1.0, 861, 
865, QuitAction(freemind.controller.Controller), 1.0, 864, 
866, actionPerformed(java.awt.event.ActionEvent), 1.0, 864, 
868, CloseAction(freemind.controller.Controller), 1.0, 867, 
869, actionPerformed(java.awt.event.ActionEvent), 1.0, 867, 
872, actionPerformed(java.awt.event.ActionEvent, java.lang.Exception), 1.0, 870, 
874, PrintPreviewAction(freemind.controller.Controller), 1.0, 873, 
875, actionPerformed(java.awt.event.ActionEvent, freemind.controller.printpreview.PreviewDialog), 1.0, 873, 
877, PageAction(freemind.controller.Controller), 1.0, 876, 
878, actionPerformed(java.awt.GridBagConstraints, java.awt.event.ActionEvent, javax.swing.JPanel, javax.swing.JDialog, javax.swing.JButton, freemind.main.Tools.IntHolder, javax.swing.JCheckBox, javax.swing.JLabel, javax.swing.JTextField, java.awt.GridBagLayout), 1.0, 876, 
880, actionPerformed(java.awt.event.ActionEvent), 1.0, 879, 
883, itemStateChanged(java.awt.event.ItemEvent), 1.0, 882, 
886, convertLocalLink(java.lang.String), 1.0, 885, 
888, convertLocalLink(java.lang.String, java.lang.String), 1.0, 887, 
891, DocumentationAction(freemind.controller.Controller), 1.0, 890, 
892, actionPerformed(java.lang.String, java.net.URL, java.awt.event.ActionEvent, java.net.URL, java.net.MalformedURLException, java.security.AccessControlException), 1.0, 890, 
894, run(java.lang.Exception), 0.0, 893, 
897, KeyDocumentationAction(freemind.controller.Controller), 1.0, 896, 
898, actionPerformed(java.lang.String, java.net.URL, java.awt.event.ActionEvent, java.lang.Exception), 1.0, 896, 
900, AboutAction(freemind.controller.Controller), 1.0, 899, 
901, actionPerformed(java.awt.event.ActionEvent), 1.0, 899, 
903, LicenseAction(freemind.controller.Controller), 1.0, 902, 
904, actionPerformed(java.awt.event.ActionEvent), 1.0, 902, 
906, NavigationPreviousMapAction(freemind.controller.Controller), 1.0, 905, 
907, actionPerformed(java.awt.event.ActionEvent), 1.0, 905, 
909, ShowAttributeDialogAction(freemind.controller.Controller), 1.0, 908, 
910, getAttributeDialog(), 0.0, 908, 
911, actionPerformed(java.awt.event.ActionEvent), 1.0, 908, 
913, ShowFilterToolbarAction(freemind.controller.Controller), 1.0, 912, 
914, actionPerformed(java.awt.event.ActionEvent, javax.swing.JToggleButton), 1.0, 912, 
916, NavigationNextMapAction(freemind.controller.Controller), 1.0, 915, 
917, actionPerformed(java.awt.event.ActionEvent), 1.0, 915, 
919, MoveToRootAction(freemind.controller.Controller), 1.0, 918, 
920, actionPerformed(java.awt.event.ActionEvent), 1.0, 918, 
922, ToggleMenubarAction(freemind.controller.Controller), 1.0, 921, 
923, actionPerformed(java.awt.event.ActionEvent), 1.0, 921, 
926, ToggleToolbarAction(freemind.controller.Controller), 1.0, 925, 
927, actionPerformed(java.awt.event.ActionEvent), 1.0, 925, 
930, ToggleLeftToolbarAction(freemind.controller.Controller), 1.0, 929, 
931, actionPerformed(java.awt.event.ActionEvent), 1.0, 929, 
934, ZoomInAction(freemind.controller.Controller), 1.0, 933, 
935, actionPerformed(java.awt.event.ActionEvent), 1.0, 933, 
937, ZoomOutAction(freemind.controller.Controller), 1.0, 936, 
938, actionPerformed(java.awt.event.ActionEvent), 1.0, 936, 
940, ShowSelectionAsRectangleAction(freemind.controller.Controller), 1.0, 939, 
941, actionPerformed(java.awt.event.ActionEvent), 1.0, 939, 
944, ShowAllAttributesAction(), 0.0, 943, 
945, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 943, 
946, setAttributeViewType(freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 943, 
948, HideAllAttributesAction(), 0.0, 947, 
949, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 947, 
950, setAttributeViewType(freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 947, 
952, ShowSelectedAttributesAction(), 0.0, 951, 
953, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 951, 
954, setAttributeViewType(freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 951, 
956, PropertyAction(freemind.controller.Controller), 1.0, 955, 
957, actionPerformed(javax.swing.JDialog, java.awt.event.ActionEvent, freemind.preferences.layout.OptionPanel, javax.swing.Action), 1.0, 955, 
959, writeProperties(boolean, java.util.Properties, java.lang.String, java.util.Vector, java.lang.String, java.util.Iterator), 1.0, 958, 
962, windowClosing(java.awt.event.WindowEvent), 1.0, 961, 
964, actionPerformed(java.awt.event.ActionEvent), 1.0, 963, 
966, getColor(), 0.0, 965, 
969, OptionAntialiasAction(freemind.controller.Controller), 1.0, 968, 
970, actionPerformed(java.awt.event.ActionEvent, java.lang.String), 1.0, 968, 
971, changeAntialias(java.lang.String), 1.0, 968, 
974, OptionHTMLExportFoldingAction(freemind.controller.Controller), 1.0, 973, 
975, actionPerformed(java.awt.event.ActionEvent), 1.0, 973, 
977, OptionSelectionMechanismAction(freemind.controller.Controller), 1.0, 976, 
978, actionPerformed(java.awt.event.ActionEvent, java.lang.String), 1.0, 976, 
979, changeSelection(java.lang.String, java.lang.String), 1.0, 976, 
983, actionPerformed(java.awt.event.ActionEvent, java.net.MalformedURLException), 1.0, 981, 
985, BlindIcon(int), 1.0, 984, 
986, getIconHeight(), 0.0, 984, 
987, getIconWidth(), 0.0, 984, 
990, FreeMindToolBar(), 0.0, 989, 
991, FreeMindToolBar(int), 1.0, 989, 
992, FreeMindToolBar(java.lang.String), 1.0, 989, 
994, add(javax.swing.Action, javax.swing.JButton, java.lang.Object), 1.0, 989, 
996, ColorSwatch(), 0.0, 995, 
997, ColorSwatch(java.awt.Color), 1.0, 995, 
998, getIconWidth(), 0.0, 995, 
999, getIconHeight(), 0.0, 995, 
1000, getColor(), 0.0, 995, 
1003, NodeMotionListener(freemind.controller.Controller), 1.0, 1002, 
1004, register(freemind.controller.NodeMotionListener.NodeMotionAdapter), 1.0, 1002, 
1005, deregister(), 0.0, 1002, 
1006, mouseClicked(java.awt.event.MouseEvent), 1.0, 1002, 
1007, mouseDragged(java.awt.event.MouseEvent), 1.0, 1002, 
1008, mouseEntered(java.awt.event.MouseEvent), 1.0, 1002, 
1009, mouseExited(java.awt.event.MouseEvent), 1.0, 1002, 
1010, mouseMoved(java.awt.event.MouseEvent), 1.0, 1002, 
1011, mousePressed(java.awt.event.MouseEvent), 1.0, 1002, 
1012, mouseReleased(java.awt.event.MouseEvent), 1.0, 1002, 
1015, StructuredMenuItemHolder(), 0.0, 1014, 
1016, getAction(), 0.0, 1014, 
1017, setAction(javax.swing.Action, freemind.controller.MenuItemEnabledListener), 1.0, 1014, 
1018, getEnabledListener(), 0.0, 1014, 
1019, setEnabledListener(freemind.controller.MenuItemEnabledListener), 1.0, 1014, 
1020, getMenuItem(), 0.0, 1014, 
1021, setMenuItem(javax.swing.JMenuItem), 1.0, 1014, 
1022, getSelectionListener(), 0.0, 1014, 
1023, setSelectedListener(freemind.controller.MenuItemSelectedListener), 1.0, 1014, 
1027, NodeKeyListener(freemind.controller.Controller), 1.0, 1026, 
1028, register(java.awt.event.KeyListener), 1.0, 1026, 
1029, deregister(), 0.0, 1026, 
1030, keyPressed(java.awt.event.KeyEvent), 1.0, 1026, 
1031, keyReleased(java.awt.event.KeyEvent), 1.0, 1026, 
1032, keyTyped(java.awt.event.KeyEvent), 1.0, 1026, 
1034, NodeDropListener(freemind.controller.Controller), 1.0, 1033, 
1035, register(java.awt.dnd.DropTargetListener), 1.0, 1033, 
1036, deregister(), 0.0, 1033, 
1037, dragEnter(java.awt.dnd.DropTargetDragEvent), 1.0, 1033, 
1038, dragExit(java.awt.dnd.DropTargetEvent), 1.0, 1033, 
1039, dragOver(java.awt.dnd.DropTargetDragEvent), 1.0, 1033, 
1040, drop(java.awt.dnd.DropTargetDropEvent), 1.0, 1033, 
1041, dropActionChanged(java.awt.dnd.DropTargetDragEvent), 1.0, 1033, 
1043, NodeDragListener(freemind.controller.Controller), 1.0, 1042, 
1044, getCursorByAction(int), 1.0, 1042, 
1045, dragGestureRecognized(java.awt.Cursor, java.lang.String, java.awt.dnd.DragGestureEvent, freemind.modes.MindMapNode, java.awt.datatransfer.Transferable), 1.0, 1042, 
1047, dragDropEnd(java.awt.dnd.DragSourceDropEvent), 1.0, 1046, 
1048, dragEnter(java.awt.dnd.DragSourceDragEvent), 1.0, 1046, 
1049, dragExit(java.awt.dnd.DragSourceEvent), 1.0, 1046, 
1050, dragOver(java.awt.dnd.DragSourceDragEvent), 1.0, 1046, 
1051, dropActionChanged(java.awt.dnd.DragSourceDragEvent), 1.0, 1046, 
1056, NodeMouseMotionListener(freemind.controller.Controller), 1.0, 1055, 
1057, register(freemind.controller.NodeMouseMotionListener.NodeMouseMotionObserver), 1.0, 1055, 
1058, deregister(), 0.0, 1055, 
1059, mouseClicked(java.awt.event.MouseEvent), 1.0, 1055, 
1060, mouseDragged(java.awt.event.MouseEvent), 1.0, 1055, 
1061, mouseEntered(java.awt.event.MouseEvent), 1.0, 1055, 
1062, mouseExited(java.awt.event.MouseEvent), 1.0, 1055, 
1063, mouseMoved(java.awt.event.MouseEvent), 1.0, 1055, 
1064, mousePressed(java.awt.event.MouseEvent), 1.0, 1055, 
1065, mouseReleased(java.awt.event.MouseEvent), 1.0, 1055, 
1066, updateSelectionMethod(), 0.0, 1055, 
1068, updateSelectionMethod(), 0.0, 1067, 
1070, MainToolBar(freemind.controller.Controller, javax.swing.JToggleButton), 1.0, 1069, 
1071, setZoomByItem(java.lang.Object, float), 1.0, 1069, 
1072, getZoomValue(java.lang.Object, float, java.lang.String, java.lang.String), 1.0, 1069, 
1073, zoomOut(float), 0.0, 1069, 
1074, getCurrentZoomIndex(int, float, int, int), 0.0, 1069, 
1075, zoomIn(float), 0.0, 1069, 
1076, getItemForZoom(float), 1.0, 1069, 
1077, setZoomComboBox(float, int, java.lang.String), 1.0, 1069, 
1078, setAllActions(boolean), 1.0, 1069, 
1080, itemStateChanged(java.awt.event.ItemEvent), 1.0, 1079, 
1084, UseRichFormattingAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1083, 
1089, ChangeArrowLinkEndPoints(freemind.modes.mindmapmode.MindMapController), 1.0, 1088, 
1092, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.ArrowLinkPointXmlAction, freemind.modes.MindMapArrowLink), 1.0, 1088, 
1093, getDoActionClass(), 0.0, 1088, 
1094, actionPerformed(java.awt.event.ActionEvent), 1.0, 1088, 
1096, getLinkRegistry(), 0.0, 1088, 
1098, JoinNodesAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1097, 
1099, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMapNode, java.util.ArrayList), 1.0, 1097, 
1103, FontSizeAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1102, 
1104, actionPerformed(java.lang.String), 1.0, 1102, 
1106, getDoActionClass(), 0.0, 1102, 
1110, act(freemind.controller.actions.generated.instance.XmlAction, int, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.FontSizeNodeAction, java.lang.NumberFormatException), 1.0, 1102, 
1112, NodeUpAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1111, 
1113, actionPerformed(java.awt.event.ActionEvent), 1.0, 1111, 
1117, getSortedSiblings(freemind.modes.MindMapNode, java.util.Iterator, java.util.Vector), 1.0, 1111, 
1118, act(freemind.controller.actions.generated.instance.XmlAction, java.util.Iterator, freemind.controller.actions.generated.instance.NodeListMember, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.MoveNodesAction, java.util.Vector), 1.0, 1111, 
1119, getDoActionClass(), 0.0, 1111, 
1128, NodeBackgroundColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1127, 
1129, actionPerformed(java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, java.util.ListIterator, java.awt.Color), 1.0, 1127, 
1132, act(freemind.controller.actions.generated.instance.XmlAction, java.awt.Color, java.awt.Color, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.NodeBackgroundColorFormatAction), 1.0, 1127, 
1133, getDoActionClass(), 0.0, 1127, 
1135, RevertAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1134, 
1136, actionPerformed(freemind.controller.actions.generated.instance.RevertXmlAction, freemind.controller.actions.generated.instance.RevertXmlAction, java.awt.event.ActionEvent, java.io.File, java.io.IOException), 1.0, 1134, 
1137, openXmlInsteadOfMap(freemind.controller.actions.generated.instance.RevertXmlAction, freemind.controller.actions.generated.instance.RevertXmlAction, java.lang.String, java.io.IOException), 1.0, 1134, 
1138, createRevertXmlAction(int, java.io.File, java.io.FileReader, java.lang.String, java.lang.StringBuffer), 1.0, 1134, 
1141, act(java.lang.String, java.io.File, freemind.controller.actions.generated.instance.XmlAction, java.io.FileWriter, freemind.controller.actions.generated.instance.RevertXmlAction, java.lang.Exception), 1.0, 1134, 
1142, getDoActionClass(), 0.0, 1134, 
1144, RemoveNodeBackgroundColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1143, 
1149, ImportExplorerFavoritesAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1148, 
1150, actionPerformed(java.awt.event.ActionEvent, javax.swing.JFileChooser, int, java.io.File), 1.0, 1148, 
1154, AddLocalLinkAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1153, 
1155, actionPerformed(freemind.modes.MindMapNode, java.awt.event.ActionEvent, int, java.util.List, freemind.modes.MindMapNode, java.lang.String), 1.0, 1153, 
1160, edgeWidthStringToInt(java.lang.String), 1.0, 1156, 
1161, edgeWidthIntToString(int), 1.0, 1156, 
1162, getPattern(), 0.0, 1156, 
1167, actionPerformed(java.awt.event.ActionEvent), 1.0, 1165, 
1168, removeReference(freemind.modes.MindMapLink), 1.0, 1165, 
1169, getActionPair(freemind.modes.MindMapLink), 1.0, 1165, 
1170, getArrowLink(), 0.0, 1165, 
1171, setArrowLink(freemind.modes.mindmapmode.MindMapArrowLinkModel), 1.0, 1165, 
1172, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RemoveArrowLinkXmlAction, freemind.modes.MindMapLink), 1.0, 1165, 
1173, getDoActionClass(), 0.0, 1165, 
1174, getLinkRegistry(), 0.0, 1165, 
1175, createRemoveArrowLinkXmlAction(java.lang.String, freemind.controller.actions.generated.instance.RemoveArrowLinkXmlAction), 1.0, 1165, 
1176, createAddArrowLinkXmlAction(freemind.modes.MindMapLink, freemind.controller.actions.generated.instance.AddArrowLinkXmlAction, freemind.modes.MindMapArrowLink), 1.0, 1165, 
1178, setRemoveAction(freemind.modes.mindmapmode.actions.RemoveArrowLinkAction), 1.0, 1177, 
1179, AddArrowLinkAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1177, 
1180, actionPerformed(java.awt.event.ActionEvent, java.util.List, int), 1.0, 1177, 
1181, act(freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.XmlAction, java.lang.String, freemind.modes.mindmapmode.MindMapArrowLinkModel, freemind.controller.actions.generated.instance.AddArrowLinkXmlAction), 1.0, 1177, 
1182, getDoActionClass(), 0.0, 1177, 
1186, getLinkRegistry(), 0.0, 1177, 
1188, UnderlinedAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1187, 
1189, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UnderlinedNodeAction, freemind.modes.NodeAdapter), 1.0, 1187, 
1190, getDoActionClass(), 0.0, 1187, 
1199, getDoActionClass(), 0.0, 1196, 
1203, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, int, freemind.controller.actions.generated.instance.EdgeWidthFormatAction, freemind.modes.EdgeAdapter), 1.0, 1196, 
1206, CutAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1205, 
1207, actionPerformed(java.awt.event.ActionEvent, java.awt.datatransfer.Transferable, int), 1.0, 1205, 
1208, getCutNodeAction(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CutNodeAction), 1.0, 1205, 
1209, cut(freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CompoundAction, java.util.List, java.util.Iterator, java.awt.datatransfer.Transferable, freemind.controller.actions.generated.instance.CutNodeAction, freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate, java.awt.datatransfer.Transferable, freemind.controller.actions.generated.instance.XmlAction), 1.0, 1205, 
1210, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CutNodeAction, freemind.modes.MindMapNode), 1.0, 1205, 
1211, getDoActionClass(), 0.0, 1205, 
1214, actionPerformed(java.awt.event.ActionEvent, freemind.extensions.HookFactory, freemind.extensions.ModeControllerHook), 1.0, 1212, 
1215, getHookName(), 0.0, 1212, 
1217, SelectBranchAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1216, 
1218, actionPerformed(java.awt.event.ActionEvent), 1.0, 1216, 
1220, BoldAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1219, 
1221, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.BoldNodeAction), 1.0, 1219, 
1222, getDoActionClass(), 0.0, 1219, 
1229, PasteAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1228, 
1230, actionPerformed(java.awt.event.ActionEvent), 1.0, 1228, 
1231, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.PasteNodeAction), 1.0, 1228, 
1232, getDoActionClass(), 0.0, 1228, 
1236, addMindMapNodesFlavor(freemind.controller.actions.generated.instance.CutNodeAction, java.lang.String, java.util.ListIterator, freemind.modes.NodeAdapter, java.util.List, freemind.controller.actions.generated.instance.TransferableContent, java.awt.datatransfer.UnsupportedFlavorException), 0.0, 1228, 
1238, getFlavorHandlers(DataFlavorHandler[]), 0.0, 1228, 
1244, getTransferableContent(java.lang.String, java.awt.datatransfer.Transferable, freemind.controller.actions.generated.instance.TransferableContent, java.util.List, freemind.controller.actions.generated.instance.TransferableFile, java.io.File, java.util.Iterator, java.awt.datatransfer.UnsupportedFlavorException), 1.0, 1228, 
1245, getTransferable(java.util.Vector, freemind.controller.actions.generated.instance.TransferableContent, java.util.Iterator, freemind.controller.actions.generated.instance.TransferableFile, java.awt.datatransfer.Transferable), 1.0, 1228, 
1246, addUndoAction(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.CutNodeAction), 1.0, 1228, 
1249, getNode(freemind.modes.MindMapNode), 0.0, 1247, 
1253, getDataFlavor(), 0.0, 1251, 
1256, getDataFlavor(), 0.0, 1254, 
1260, getDataFlavor(), 0.0, 1258, 
1264, getDataFlavor(), 0.0, 1262, 
1268, getDataFlavor(), 0.0, 1266, 
1271, getDataFlavor(), 0.0, 1269, 
1276, getDoActionClass(), 0.0, 1273, 
1280, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapEdge, freemind.controller.actions.generated.instance.EdgeStyleFormatAction, java.lang.String, freemind.modes.MindMapNode), 1.0, 1273, 
1282, getController(), 0.0, 1281, 
1284, actionPerformed(java.awt.event.ActionEvent), 1.0, 1281, 
1290, getInstanciationMethod(java.lang.String, freemind.extensions.HookFactory, freemind.extensions.HookInstanciationMethod), 1.0, 1281, 
1291, getHookFactory(freemind.extensions.HookFactory), 0.0, 1281, 
1294, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.HookNodeAction, java.util.Iterator, freemind.controller.actions.generated.instance.NodeListMember, freemind.modes.MindMapNode, java.util.Vector), 1.0, 1281, 
1295, getDoActionClass(), 0.0, 1281, 
1296, getHookName(), 0.0, 1281, 
1299, NodeColorBlendAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1298, 
1304, SelectAllAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1303, 
1306, EdgeColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1305, 
1307, actionPerformed(java.awt.event.ActionEvent, java.awt.Color, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1305, 
1309, act(freemind.controller.actions.generated.instance.XmlAction, java.awt.Color, freemind.controller.actions.generated.instance.EdgeColorFormatAction, freemind.modes.MindMapNode, java.awt.Color), 1.0, 1305, 
1311, getDoActionClass(), 0.0, 1305, 
1316, NewSiblingAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1315, 
1317, actionPerformed(java.awt.event.ActionEvent), 1.0, 1315, 
1319, nodeChanged(freemind.modes.MindMapNode), 1.0, 1318, 
1320, nodeRefresh(freemind.modes.MindMapNode), 1.0, 1318, 
1321, nodeStructureChanged(freemind.modes.MindMapNode), 1.0, 1318, 
1327, deleteNode(freemind.modes.MindMapNode), 1.0, 1318, 
1328, cut(), 0.0, 1318, 
1329, cut(java.util.List), 1.0, 1318, 
1332, toggleFolded(), 0.0, 1318, 
1337, blendNodeColor(freemind.modes.MindMapNode), 1.0, 1318, 
1341, removeLastIcon(freemind.modes.MindMapNode), 1.0, 1318, 
1342, removeAllIcons(freemind.modes.MindMapNode), 1.0, 1318, 
1352, removeReference(freemind.modes.MindMapLink), 1.0, 1318, 
1365, invokeHook(freemind.extensions.ModeControllerHook), 1.0, 1318, 
1367, getActionFactory(), 0.0, 1318, 
1368, marshall(freemind.controller.actions.generated.instance.XmlAction), 1.0, 1318, 
1369, unMarshall(java.lang.String), 1.0, 1318, 
1370, isUndoAction(), 0.0, 1318, 
1371, getRootNode(), 0.0, 1318, 
1374, load(java.lang.String), 1.0, 1318, 
1375, registerMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 1318, 
1376, deRegisterMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 1318, 
1381, clearNodeContents(freemind.modes.MindMapNode), 1.0, 1318, 
1383, handleMouseWheelEvent(java.awt.event.MouseWheelEvent), 1.0, 1382, 
1385, ImportFolderStructureAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1384, 
1386, actionPerformed(java.awt.event.ActionEvent, freemind.main.FreeMindMain, int, javax.swing.JFileChooser, java.io.File, java.lang.Exception), 1.0, 1384, 
1387, getFrame(), 0.0, 1384, 
1391, MoveNodeAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1390, 
1392, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.MoveNodeXmlAction), 1.0, 1390, 
1393, getDoActionClass(), 0.0, 1390, 
1401, getDoActionClass(), 0.0, 1398, 
1405, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.NodeStyleFormatAction, java.lang.String, freemind.modes.MindMapNode), 1.0, 1398, 
1408, ItalicAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1407, 
1409, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.ItalicNodeAction), 1.0, 1407, 
1410, getDoActionClass(), 0.0, 1407, 
1417, NodeColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1416, 
1418, actionPerformed(java.awt.event.ActionEvent, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel, java.awt.Color), 1.0, 1416, 
1421, act(freemind.controller.actions.generated.instance.XmlAction, java.awt.Color, java.awt.Color, freemind.controller.actions.generated.instance.NodeColorFormatAction, freemind.modes.MindMapNode), 1.0, 1416, 
1422, getDoActionClass(), 0.0, 1416, 
1425, actionPerformed(java.awt.event.ActionEvent), 1.0, 1423, 
1426, addLastIcon(java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 1423, 
1427, removeIcon(boolean, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1423, 
1428, toggleIcon(java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 1423, 
1429, removeAllIcons(java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel), 0.0, 1423, 
1438, act(freemind.controller.actions.generated.instance.XmlAction, java.lang.String, freemind.modes.MindIcon, int, freemind.controller.actions.generated.instance.AddIconAction, freemind.modes.MindMapNode), 1.0, 1423, 
1439, getDoActionClass(), 0.0, 1423, 
1441, getMindIcon(), 0.0, 1423, 
1442, getKeyStroke(java.lang.String, java.lang.String), 0.0, 1423, 
1443, getDescription(), 0.0, 1423, 
1444, getIcon(), 0.0, 1423, 
1445, getKeystrokeResourceName(), 0.0, 1423, 
1449, ToggleFoldedAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1448, 
1450, actionPerformed(java.awt.event.ActionEvent), 1.0, 1448, 
1451, toggleFolded(), 0.0, 1448, 
1452, toggleFolded(freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.CompoundAction, java.util.ListIterator, boolean), 1.0, 1448, 
1455, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.FoldAction, boolean), 1.0, 1448, 
1456, getDoActionClass(), 0.0, 1448, 
1459, CompoundActionHandler(freemind.modes.mindmapmode.MindMapController), 1.0, 1458, 
1460, act(Object[], freemind.controller.actions.generated.instance.XmlAction, int, freemind.controller.actions.generated.instance.CompoundAction, java.lang.Object, freemind.controller.actions.generated.instance.XmlAction, freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 1458, 
1461, getDoActionClass(), 0.0, 1458, 
1462, actionPerformed(java.awt.event.ActionEvent), 1.0, 1458, 
1466, createRemoveAllIconsXmlAction(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.RemoveAllIconsXmlAction), 1.0, 1463, 
1467, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.RemoveAllIconsXmlAction), 1.0, 1463, 
1468, removeAllIcons(freemind.modes.MindMapNode), 1.0, 1463, 
1469, getDoActionClass(), 0.0, 1463, 
1470, getDescription(), 0.0, 1463, 
1471, getIcon(), 0.0, 1463, 
1472, getKeyStroke(), 0.0, 1463, 
1473, getKeystrokeResourceName(), 0.0, 1463, 
1475, NewChildAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1474, 
1476, actionPerformed(java.awt.event.ActionEvent), 1.0, 1474, 
1477, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, java.lang.String, freemind.controller.actions.generated.instance.NewNodeAction, java.util.Iterator, int, freemind.extensions.PermanentNodeHook, freemind.modes.MindMapNode, java.lang.String), 1.0, 1474, 
1478, getDoActionClass(), 0.0, 1474, 
1484, ToggleChildrenFoldedAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1483, 
1485, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMapNode, freemind.view.mindmapview.MapView), 1.0, 1483, 
1487, DeleteChildAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1486, 
1488, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, int, freemind.modes.MindMapNode), 1.0, 1486, 
1489, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.DeleteNodeAction, freemind.modes.MindMapNode), 1.0, 1486, 
1490, deleteWithoutUndo(freemind.modes.MindMapNode, long, freemind.modes.MindMapNode, long, freemind.extensions.PermanentNodeHook), 1.0, 1486, 
1491, getDoActionClass(), 0.0, 1486, 
1492, deleteNode(freemind.controller.actions.generated.instance.PasteNodeAction, freemind.controller.actions.generated.instance.DeleteNodeAction, freemind.modes.MindMapNode, java.lang.String, freemind.modes.MindMapNode, java.awt.datatransfer.Transferable, freemind.modes.mindmapmode.actions.PasteAction.NodeCoordinate), 1.0, 1486, 
1493, getDeleteNodeAction(java.lang.String, freemind.controller.actions.generated.instance.DeleteNodeAction), 1.0, 1486, 
1495, EditAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1494, 
1496, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMapNode), 1.0, 1494, 
1497, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.EditNodeAction, freemind.modes.NodeAdapter), 1.0, 1494, 
1498, getDoActionClass(), 0.0, 1494, 
1502, getMindMapController(), 0.0, 1494, 
1504, stopEditing(), 0.0, 1494, 
1506, ExportBranchAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1505, 
1507, actionPerformed(javax.swing.JFileChooser, java.net.URL, java.io.File, freemind.modes.ModeController, freemind.modes.mindmapmode.MindMapNodeModel, java.awt.event.ActionEvent, java.lang.String, freemind.modes.MindMapNode, freemind.modes.mindmapmode.MindMapMapModel, int, int, freemind.modes.mindmapmode.MindMapNodeModel, int, java.lang.String, java.lang.String, java.net.MalformedURLException), 1.0, 1505, 
1509, UsePlainTextAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1508, 
1517, actionPerformed(java.awt.event.ActionEvent), 1.0, 1515, 
1520, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.ArrowLinkArrowXmlAction, freemind.modes.MindMapLink), 1.0, 1515, 
1521, getDoActionClass(), 0.0, 1515, 
1524, getLinkRegistry(), 0.0, 1515, 
1526, CloudColorAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1525, 
1527, actionPerformed(java.awt.Color, java.awt.event.ActionEvent, java.util.ListIterator, freemind.modes.mindmapmode.MindMapNodeModel, java.awt.Color), 1.0, 1525, 
1530, act(java.awt.Color, freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapNode, java.awt.Color, freemind.controller.actions.generated.instance.CloudColorXmlAction), 1.0, 1525, 
1531, getDoActionClass(), 0.0, 1525, 
1534, cancel(), 0.0, 1533, 
1535, ok(java.lang.String), 1.0, 1533, 
1539, cancel(), 0.0, 1538, 
1540, ok(java.lang.String), 1.0, 1538, 
1544, cancel(), 0.0, 1543, 
1545, ok(java.lang.String), 1.0, 1543, 
1549, cancel(java.util.Vector), 0.0, 1548, 
1550, ok(java.lang.String), 1.0, 1548, 
1551, endEdit(), 0.0, 1548, 
1556, setName(java.lang.String), 1.0, 1554, 
1559, addActor(freemind.modes.mindmapmode.actions.NodeActorXml), 1.0, 1554, 
1560, setSingleNodeOperation(freemind.modes.mindmapmode.actions.SingleNodeOperation), 1.0, 1554, 
1561, xmlActionPerformed(freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.CompoundAction, java.awt.event.ActionEvent, java.util.ListIterator, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1554, 
1562, execute(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 1554, 
1563, act(freemind.controller.actions.generated.instance.XmlAction), 1.0, 1554, 
1564, getNodeFromID(java.lang.String), 1.0, 1554, 
1565, getNodeID(freemind.modes.MindMapNode), 1.0, 1554, 
1567, FontFamilyAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1566, 
1568, actionPerformed(java.lang.String), 1.0, 1566, 
1570, getDoActionClass(), 0.0, 1566, 
1574, act(java.lang.String, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.FontNodeAction, freemind.modes.MindMapNode), 1.0, 1566, 
1576, CloudAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1575, 
1577, getDoActionClass(), 0.0, 1575, 
1582, act(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.XmlAction, java.awt.Color, freemind.controller.actions.generated.instance.AddCloudXmlAction), 1.0, 1575, 
1585, CopySingleAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1584, 
1586, actionPerformed(java.awt.event.ActionEvent, java.awt.datatransfer.Transferable), 1.0, 1584, 
1588, UndoAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1587, 
1590, isUndoAction(), 0.0, 1587, 
1591, xmlActionPerformed(java.awt.event.ActionEvent, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 1587, 
1592, informUndoPartner(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 1587, 
1593, undoDoAction(freemind.controller.actions.generated.instance.UndoXmlAction, freemind.controller.actions.generated.instance.UndoXmlAction, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.String, java.lang.String), 1.0, 1587, 
1594, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UndoXmlAction), 1.0, 1587, 
1595, getDoActionClass(), 0.0, 1587, 
1596, setEnabled(boolean), 1.0, 1587, 
1597, add(freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.actions.generated.instance.CompoundAction, int, long, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.NumberFormatException), 1.0, 1587, 
1598, startActionFrame(), 0.0, 1587, 
1599, clear(), 0.0, 1587, 
1600, print(java.util.Iterator, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 0.0, 1587, 
1602, run(), 0.0, 1601, 
1605, SetLinkByTextFieldAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1604, 
1606, actionPerformed(java.lang.String, java.awt.event.ActionEvent), 1.0, 1604, 
1608, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.NodeAdapter, freemind.controller.actions.generated.instance.AddLinkXmlAction), 1.0, 1604, 
1609, getDoActionClass(), 0.0, 1604, 
1615, addActor(freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 1612, 
1616, getMindMapController(), 0.0, 1612, 
1618, getHookName(), 0.0, 1617, 
1620, CopyAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1619, 
1621, actionPerformed(java.awt.event.ActionEvent, java.awt.datatransfer.Transferable), 1.0, 1619, 
1623, RemoveIconAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1622, 
1625, getDoActionClass(), 0.0, 1622, 
1627, removeLastIcon(freemind.modes.MindMapNode), 1.0, 1622, 
1628, act(freemind.controller.actions.generated.instance.XmlAction, int, freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.RemoveIconXmlAction), 1.0, 1622, 
1629, setIconAction(freemind.modes.mindmapmode.actions.IconAction), 1.0, 1622, 
1630, getDescription(), 0.0, 1622, 
1631, getIcon(), 0.0, 1622, 
1632, getKeyStroke(), 0.0, 1622, 
1633, getKeystrokeResourceName(), 0.0, 1622, 
1635, RedoAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1634, 
1636, informUndoPartner(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 1634, 
1638, NewPreviousSiblingAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1637, 
1639, actionPerformed(java.awt.event.ActionEvent), 1.0, 1637, 
1642, actionPerformed(java.awt.event.ActionEvent, java.awt.Color, java.awt.Color), 1.0, 1640, 
1645, act(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.MindMapLink, freemind.controller.actions.generated.instance.ArrowLinkColorXmlAction), 1.0, 1640, 
1646, getDoActionClass(), 0.0, 1640, 
1648, getLinkRegistry(), 0.0, 1640, 
1650, ModeControllerActionHandler(freemind.modes.mindmapmode.actions.xml.ActionFactory), 1.0, 1649, 
1651, executeAction(freemind.controller.actions.generated.instance.XmlAction, freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 1649, 
1652, startTransaction(java.lang.String), 1.0, 1649, 
1653, endTransaction(java.lang.String), 1.0, 1649, 
1656, MindMapToolBar(freemind.modes.mindmapmode.MindMapController), 1.0, 1655, 
1657, update(freemind.controller.StructuredMenuHolder, int), 1.0, 1655, 
1658, selectFontSize(java.lang.String), 1.0, 1655, 
1659, getLeftToolBar(), 0.0, 1655, 
1660, selectFontName(java.lang.String), 1.0, 1655, 
1661, setAllActions(boolean), 1.0, 1655, 
1663, itemStateChanged(java.awt.event.ItemEvent), 1.0, 1662, 
1666, itemStateChanged(java.awt.event.ItemEvent), 1.0, 1665, 
1669, MindMapController(java.io.InputStream, freemind.modes.Mode, java.awt.Toolkit, java.io.IOException), 1.0, 1668, 
1670, createStandardActions(), 0.0, 1668, 
1671, loadPatternActions(boolean, java.io.File, int, java.lang.String, java.lang.Exception, java.lang.Exception), 0.0, 1668, 
1672, getPatternReader(java.io.Reader, java.io.File), 0.0, 1668, 
1673, isUndoAction(), 0.0, 1668, 
1674, load(java.lang.String), 1.0, 1668, 
1675, loadPatterns(java.io.Reader), 1.0, 1668, 
1676, createPatterns(java.util.List, freemind.controller.actions.generated.instance.Pattern, int, freemind.controller.actions.generated.instance.PatternIcon), 1.0, 1668, 
1677, startupController(freemind.extensions.HookFactory.RegistrationContainer, freemind.extensions.HookFactory, java.util.List, java.util.Iterator, java.lang.Class, java.lang.reflect.Constructor, freemind.extensions.HookRegistration, java.lang.Exception), 0.0, 1668, 
1678, shutdownController(java.util.Iterator, freemind.extensions.HookRegistration), 0.0, 1668, 
1679, newModel(freemind.modes.ModeController), 1.0, 1668, 
1680, createIconActions(java.lang.String, String[], freemind.modes.MindIcon, int, freemind.modes.mindmapmode.actions.IconAction, java.io.File, java.util.Vector), 0.0, 1668, 
1681, createNodeHookActions(java.lang.String, java.util.List, java.util.Iterator, freemind.modes.mindmapmode.hooks.MindMapHookFactory, java.util.List, freemind.modes.mindmapmode.actions.MindMapControllerHookAction), 0.0, 1668, 
1682, getFileFilter(), 0.0, 1668, 
1683, nodeChanged(freemind.modes.MindMapNode, freemind.view.MapModule), 1.0, 1668, 
1684, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 1668, 
1685, updateToolbar(freemind.modes.MindMapNode), 1.0, 1668, 
1686, setNewNodeCreator(freemind.modes.mindmapmode.MindMapController.NewNodeCreator), 1.0, 1668, 
1688, updateMenus(freemind.controller.StructuredMenuHolder, int, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.Iterator, freemind.modes.mindmapmode.hooks.MindMapHookFactory, javax.swing.AbstractAction), 1.0, 1668, 
1691, updateMenusFromXml(java.io.InputStream, org.jibx.runtime.IUnmarshallingContext, freemind.controller.actions.generated.instance.MenuStructure, org.jibx.runtime.JiBXException), 1.0, 1668, 
1693, getPopupMenu(), 0.0, 1668, 
1694, getPopupForModel(freemind.modes.mindmapmode.MindMapArrowLinkModel, java.lang.Object, javax.swing.JRadioButtonMenuItem, java.util.HashSet, javax.swing.JRadioButtonMenuItem, boolean, freemind.modes.mindmapmode.MindMapArrowLinkModel, javax.swing.JRadioButtonMenuItem, javax.swing.JPopupMenu, java.util.Vector, boolean, javax.swing.JRadioButtonMenuItem, int), 1.0, 1668, 
1695, getMindMapMapModel(), 0.0, 1668, 
1696, getModeToolBar(), 0.0, 1668, 
1697, getToolBar(), 0.0, 1668, 
1698, getLeftToolBar(), 0.0, 1668, 
1699, setAllActions(boolean, int), 1.0, 1668, 
1709, blendNodeColor(java.awt.Color, freemind.modes.MindMapNode, java.awt.Color), 1.0, 1668, 
1714, removeAllIcons(freemind.modes.MindMapNode), 1.0, 1668, 
1715, removeLastIcon(freemind.modes.MindMapNode), 1.0, 1668, 
1717, removeReference(freemind.modes.MindMapLink), 1.0, 1668, 
1729, cut(), 0.0, 1668, 
1730, cut(java.util.List), 1.0, 1668, 
1736, deleteNode(freemind.modes.MindMapNode), 1.0, 1668, 
1737, toggleFolded(), 0.0, 1668, 
1741, setLinkByFileChooser(java.lang.String), 0.0, 1668, 
1742, setImageByFileChooser(boolean, java.lang.String, java.lang.String, java.lang.String, freemind.main.ExampleFileFilter, java.lang.String, java.util.ListIterator, freemind.modes.MindMapNode), 0.0, 1668, 
1743, getLinkByFileChooser(javax.swing.JFileChooser, java.net.URL, java.io.File, java.lang.String, javax.swing.filechooser.FileFilter, int, java.net.MalformedURLException), 1.0, 1668, 
1744, loadURL(java.lang.String, boolean), 1.0, 1668, 
1747, plainClick(freemind.view.mindmapview.MainView, java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 1668, 
1748, getHookFactory(), 0.0, 1668, 
1750, invokeHook(freemind.extensions.ModeControllerHook, java.lang.Exception), 1.0, 1668, 
1751, getActionFactory(), 0.0, 1668, 
1756, updateNode(freemind.modes.MindMapNode), 1.0, 1668, 
1758, doubleClick(java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 1668, 
1759, select(freemind.view.mindmapview.NodeView), 1.0, 1668, 
1763, getNodeView(java.lang.Object), 1.0, 1668, 
1765, extendSelection(java.lang.String, boolean, boolean, boolean, java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView, boolean), 1.0, 1668, 
1766, registerMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 1668, 
1767, deRegisterMouseWheelEventHandler(freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler), 1.0, 1668, 
1768, getRegisteredMouseWheelEventHandler(), 0.0, 1668, 
1769, marshall(freemind.controller.actions.generated.instance.XmlAction), 1.0, 1668, 
1770, unMarshall(java.lang.String), 1.0, 1668, 
1773, getAttributeController(), 0.0, 1668, 
1774, getAttributeTablePopupMenu(), 0.0, 1668, 
1775, createXMLElement(), 0.0, 1668, 
1781, removeNodeFromParent(freemind.modes.MindMapNode), 1.0, 1668, 
1782, nodeStyleChanged(freemind.modes.MindMapNode, java.util.ListIterator, freemind.modes.MindMapNode), 1.0, 1668, 
1783, repaintMap(), 0.0, 1668, 
1784, clearNodeContents(freemind.modes.MindMapNode, java.util.List, java.lang.String, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern), 1.0, 1668, 
1787, registerPlugin(freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin), 1.0, 1668, 
1788, deregisterPlugin(freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin), 1.0, 1668, 
1789, getPlugins(), 0.0, 1668, 
1790, getClipboardContents(), 0.0, 1668, 
1791, setClipboardContents(java.awt.datatransfer.Transferable), 1.0, 1668, 
1793, AssignAttributesAction(), 0.0, 1792, 
1794, actionPerformed(java.awt.event.ActionEvent), 1.0, 1792, 
1814, ExportToHTMLAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1813, 
1815, actionPerformed(java.awt.event.ActionEvent, java.io.File, java.io.IOException), 1.0, 1813, 
1817, ExportBranchToHTMLAction(freemind.modes.mindmapmode.MindMapController), 1.0, 1816, 
1818, actionPerformed(java.awt.event.ActionEvent, java.io.File, java.io.IOException), 1.0, 1816, 
1820, ImportBranchAction(), 0.0, 1819, 
1821, actionPerformed(java.awt.event.ActionEvent, javax.swing.JFileChooser, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, int, java.lang.Exception), 1.0, 1819, 
1823, ImportLinkedBranchAction(), 0.0, 1822, 
1824, actionPerformed(java.net.URL, java.lang.String, java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.Exception), 1.0, 1822, 
1826, ImportLinkedBranchWithoutRootAction(), 0.0, 1825, 
1827, actionPerformed(java.net.URL, java.lang.String, java.awt.event.ActionEvent, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, freemind.modes.mindmapmode.MindMapNodeModel, java.util.ListIterator, java.lang.Exception), 1.0, 1825, 
1829, accept(java.io.File, java.lang.String), 1.0, 1828, 
1830, getDescription(), 0.0, 1828, 
1833, SetLinkByFileChooserAction(), 0.0, 1832, 
1834, actionPerformed(java.awt.event.ActionEvent), 1.0, 1832, 
1836, SetImageByFileChooserAction(), 0.0, 1835, 
1837, actionPerformed(java.awt.event.ActionEvent), 1.0, 1835, 
1839, FollowLinkAction(), 0.0, 1838, 
1840, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 1838, 
1843, EditLongAction(), 0.0, 1842, 
1844, actionPerformed(java.awt.event.ActionEvent), 1.0, 1842, 
1847, setMap(freemind.modes.MindMap), 1.0, 1845, 
1848, decrypt(java.lang.StringBuffer, java.lang.String, java.lang.String, int, int, freemind.modes.mindmapmode.MindMapNodeModel, String[], java.lang.String, java.util.ListIterator, freemind.modes.MindMapNode, java.lang.Exception), 1.0, 1845, 
1849, paste(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1845, 
1850, getNodeFromXml(java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1845, 
1851, getMindMapMapModel(), 0.0, 1845, 
1852, checkPassword(java.lang.StringBuffer, java.lang.String), 1.0, 1845, 
1854, encrypt(), 0.0, 1845, 
1855, getChildCount(), 0.0, 1845, 
1856, childrenFolded(), 0.0, 1845, 
1857, childrenUnfolded(), 0.0, 1845, 
1858, hasChildren(), 0.0, 1845, 
1859, updateIcon(), 0.0, 1845, 
1860, setPassword(java.lang.StringBuffer), 1.0, 1845, 
1861, isFolded(), 0.0, 1845, 
1862, setFolded(boolean), 1.0, 1845, 
1863, setAdditionalInfo(java.lang.String), 1.0, 1845, 
1864, getAdditionalInfo(), 0.0, 1845, 
1866, generateEncryptedContent(freemind.modes.MindMapLinkRegistry, java.io.StringWriter, java.lang.StringBuffer), 1.0, 1845, 
1867, encryptXml(java.lang.StringBuffer, freemind.main.Tools.SingleDesEncrypter, java.lang.String, java.lang.Exception), 1.0, 1845, 
1869, setShuttingDown(boolean), 1.0, 1845, 
1870, setAccessible(boolean), 1.0, 1845, 
1871, isAccessible(), 0.0, 1845, 
1873, isWriteable(), 0.0, 1845, 
1874, isStoringEncryptedContent(), 0.0, 1845, 
1875, setStoringEncryptedContent(boolean), 1.0, 1845, 
1878, clone(), 0.0, 1876, 
1879, toString(), 0.0, 1876, 
1883, MindMapPopupMenu(freemind.modes.mindmapmode.MindMapController), 1.0, 1882, 
1884, update(freemind.controller.StructuredMenuHolder), 1.0, 1882, 
1886, JAutoScrollBarPane(java.awt.Component), 1.0, 1885, 
1887, doLayout(boolean, int, boolean, java.awt.Dimension, int, java.awt.Insets), 0.0, 1885, 
1888, getPreferredSize(), 0.0, 1885, 
1890, MindMapHTMLWriter(java.io.Writer), 1.0, 1889, 
1891, convertSpecialChar(java.lang.String, char), 1.0, 1889, 
1892, saveHTML_escapeUnicodeAndSpecialCharacters(int, java.lang.String, java.lang.StringBuffer, char, boolean, int, boolean, int), 1.0, 1889, 
1893, saveHTML(java.util.List, java.util.Iterator, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1889, 
1894, saveHTML(freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String), 1.0, 1889, 
1895, writeBodyWithFolding(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1889, 
1896, writeJavaScript(), 0.0, 1889, 
1897, writeStyle(), 0.0, 1889, 
1899, fontStyle(java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel, int, java.lang.String, int), 1.0, 1889, 
1900, writeModelContent(java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1889, 
1901, writeIcons(freemind.modes.mindmapmode.MindMapNodeModel, int), 1.0, 1889, 
1902, writeFoldingButtons(java.lang.String), 1.0, 1889, 
1904, hasHtml(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 1889, 
1905, getProperty(java.lang.String), 1.0, 1889, 
1907, MindMapXMLElement(freemind.modes.ModeController), 1.0, 1906, 
1909, init(), 0.0, 1906, 
1910, createAnotherElement(), 0.0, 1906, 
1915, createEncryptedNode(java.lang.String, freemind.modes.NodeAdapter), 1.0, 1906, 
1917, MindMapMode(), 0.0, 1916, 
1918, init(freemind.controller.Controller), 1.0, 1916, 
1919, createModeController(freemind.modes.mindmapmode.MindMapController), 0.0, 1916, 
1920, toString(), 0.0, 1916, 
1921, activate(), 0.0, 1916, 
1922, restore(java.lang.String), 1.0, 1916, 
1923, getController(), 0.0, 1916, 
1924, getDefaultModeController(), 0.0, 1916, 
1928, getPlainTextContent(), 0.0, 1925, 
1931, collectColors(java.util.HashSet, java.util.ListIterator), 1.0, 1925, 
1932, saveRFT_escapeUnicodeAndSpecialCharacters(char, int, int, java.lang.String, int, java.lang.StringBuffer), 1.0, 1925, 
1935, isWriteable(), 0.0, 1925, 
1943, getLinkRegistry(), 0.0, 1940, 
1944, getRestoreable(), 0.0, 1940, 
1946, toString(), 0.0, 1940, 
1947, getAsHTML(java.io.StringWriter, java.util.List, java.io.BufferedWriter, java.lang.Exception), 1.0, 1940, 
1948, getAsPlainText(java.io.StringWriter, java.util.List, java.util.ListIterator, java.io.BufferedWriter, java.lang.Exception), 1.0, 1940, 
1950, getAsRTF(java.io.StringWriter, java.util.List, java.io.BufferedWriter, java.lang.Exception), 1.0, 1940, 
1952, save(java.io.File), 1.0, 1940, 
1956, getXml(java.io.Writer), 1.0, 1940, 
1957, getFilteredXml(java.io.Writer), 1.0, 1940, 
1958, tryToLock(java.io.File, java.lang.String, java.lang.String), 1.0, 1940, 
1959, load(java.net.URL, java.io.File), 1.0, 1940, 
1960, load(java.io.File, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String, java.lang.Exception), 1.0, 1940, 
1961, destroy(), 0.0, 1940, 
1962, loadTree(java.io.File), 1.0, 1940, 
1963, loadTree(freemind.modes.mindmapmode.MindMapMapModel.ReaderCreator), 1.0, 1940, 
1966, scheduleTimerForAutomaticSaving(int, java.lang.String, java.io.File, boolean, int), 0.0, 1940, 
1968, run(), 0.0, 1967, 
1971, StringReaderCreator(java.lang.String), 1.0, 1970, 
1972, createReader(), 0.0, 1970, 
1973, toString(), 0.0, 1970, 
1975, FileReaderCreator(java.io.File), 1.0, 1974, 
1976, createReader(), 0.0, 1974, 
1977, toString(), 0.0, 1974, 
1979, createReader(), 0.0, 1978, 
1981, getSemaphoreFile(java.io.File), 1.0, 1980, 
1982, popLockingUserOfOldLock(java.lang.String), 0.0, 1980, 
1983, writeSemaphoreFile(java.nio.channels.FileLock, java.io.FileOutputStream, java.io.File, java.lang.UnsatisfiedLinkError, java.lang.NoClassDefFoundError), 1.0, 1980, 
1984, tryToLock(java.io.File, java.lang.String, java.io.File, long, java.io.BufferedReader, long, java.io.FileNotFoundException), 1.0, 1980, 
1985, releaseLock(), 0.0, 1980, 
1986, releaseTimer(), 0.0, 1980, 
1987, run(java.lang.Exception), 0.0, 1980, 
1990, popLockingUserOfOldLock(), 0.0, 1989, 
1991, tryToLock(java.io.File), 1.0, 1989, 
1992, releaseLock(), 0.0, 1989, 
1993, releaseTimer(), 0.0, 1989, 
1994, run(), 0.0, 1989, 
1998, run(java.lang.InterruptedException), 0.0, 1996, 
2000, run(java.io.File, java.lang.Exception), 0.0, 1999, 
2004, BrowseXMLElement(freemind.modes.ModeController), 1.0, 2003, 
2006, createAnotherElement(), 0.0, 2003, 
2011, createEncryptedNode(java.lang.String, freemind.modes.NodeAdapter), 1.0, 2003, 
2013, BrowseReminderHook(), 0.0, 2012, 
2014, nodeRefresh(freemind.modes.MindMapNode), 1.0, 2012, 
2018, save(), 0.0, 2016, 
2019, setColor(java.awt.Color), 1.0, 2016, 
2020, setStyle(java.lang.String), 1.0, 2016, 
2024, save(), 0.0, 2021, 
2025, isWriteable(), 0.0, 2021, 
2027, BrowseToolBar(freemind.modes.ControllerAdapter), 1.0, 2026, 
2028, setURLField(java.lang.String), 1.0, 2026, 
2030, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.lang.Exception), 1.0, 2029, 
2033, NodeNoteViewer(freemind.modes.ControllerAdapter), 1.0, 2032, 
2034, getNoteViewerComponent(java.lang.String), 1.0, 2032, 
2035, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 2032, 
2036, onSelectHook(freemind.view.mindmapview.NodeView, java.lang.String), 1.0, 2032, 
2037, onSaveNode(freemind.modes.MindMapNode), 1.0, 2032, 
2038, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 2032, 
2042, BrowsePopupMenu(freemind.modes.browsemode.BrowseController), 1.0, 2040, 
2044, BrowseHookFactory(), 0.0, 2043, 
2045, getPossibleNodeHooks(), 0.0, 2043, 
2046, getPossibleModeControllerHooks(), 0.0, 2043, 
2047, createModeControllerHook(java.lang.String), 1.0, 2043, 
2048, createNodeHook(freemind.extensions.NodeHook, java.lang.String), 1.0, 2043, 
2049, getHookMenuPositions(java.lang.String), 1.0, 2043, 
2050, getInstanciationMethod(java.lang.String), 1.0, 2043, 
2051, getRegistrations(), 0.0, 2043, 
2052, getPluginBaseClass(java.lang.String), 1.0, 2043, 
2054, BrowseMode(), 0.0, 2053, 
2055, init(freemind.controller.Controller), 1.0, 2053, 
2056, toString(), 0.0, 2053, 
2057, activate(), 0.0, 2053, 
2058, restore(java.lang.String, java.lang.Exception), 1.0, 2053, 
2059, getController(), 0.0, 2053, 
2060, getDefaultModeController(), 0.0, 2053, 
2061, createModeController(), 0.0, 2053, 
2065, updateIcon(), 0.0, 2062, 
2066, setFolded(java.lang.String, freemind.modes.ControllerAdapter, boolean, freemind.modes.common.dialogs.EnterPasswordDialog, freemind.modes.NodeAdapter, freemind.modes.MapAdapter, freemind.main.Tools.SingleDesEncrypter, java.util.HashMap, int, java.lang.String, String[], freemind.main.XMLParseException), 1.0, 2062, 
2067, setAdditionalInfo(java.lang.String), 1.0, 2062, 
2069, BrowseController(freemind.modes.Mode), 1.0, 2068, 
2070, newModel(freemind.modes.ModeController), 1.0, 2068, 
2071, plainClick(freemind.view.mindmapview.MainView, java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 2068, 
2072, doubleClick(), 0.0, 2068, 
2074, getPopupMenu(), 0.0, 2068, 
2075, getPopupForModel(java.lang.Object, int, java.util.Vector, freemind.modes.browsemode.BrowseArrowLinkModel, java.util.HashSet, freemind.modes.browsemode.BrowseArrowLinkModel, javax.swing.JPopupMenu), 1.0, 2068, 
2076, getGotoLinkNodeAction(freemind.modes.MindMapNode), 1.0, 2068, 
2077, getModeToolBar(), 0.0, 2068, 
2078, getToolBar(), 0.0, 2068, 
2079, load(java.net.URL, freemind.modes.ModeController), 1.0, 2068, 
2080, load(java.io.File, freemind.modes.ModeController), 1.0, 2068, 
2081, newMap(freemind.modes.MindMap), 1.0, 2068, 
2082, setNoteIcon(freemind.modes.MindMapNode, java.util.ListIterator, java.lang.String), 1.0, 2068, 
2083, setAllActions(boolean), 1.0, 2068, 
2084, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 2068, 
2085, getHookFactory(), 0.0, 2068, 
2086, createXMLElement(), 0.0, 2068, 
2088, FollowLinkAction(), 0.0, 2087, 
2089, actionPerformed(java.awt.event.ActionEvent), 1.0, 2087, 
2093, getLinkRegistry(), 0.0, 2090, 
2094, toString(), 0.0, 2090, 
2095, getFile(), 0.0, 2090, 
2096, setFile(), 0.0, 2090, 
2097, getURL(), 0.0, 2090, 
2098, setURL(java.net.URL), 1.0, 2090, 
2099, save(java.io.File), 1.0, 2090, 
2100, isSaved(), 0.0, 2090, 
2101, load(java.net.URL, freemind.modes.browsemode.BrowseNodeModel), 1.0, 2090, 
2102, loadTree(java.io.InputStreamReader, freemind.modes.browsemode.BrowseNodeModel, java.net.URL, java.util.HashMap, java.lang.Exception), 1.0, 2090, 
2103, setLinkInclinationChanged(), 0.0, 2090, 
2104, getXml(java.io.Writer), 1.0, 2090, 
2105, getFilteredXml(java.io.Writer), 1.0, 2090, 
2108, save(), 0.0, 2106, 
2111, clone(), 0.0, 2109, 
2112, save(), 0.0, 2109, 
2113, toString(), 0.0, 2109, 
2117, visit(freemind.view.mindmapview.NodeView), 1.0, 2116, 
2119, getPreferredSize(java.awt.Dimension), 0.0, 2118, 
2120, paint(java.awt.Graphics2D, java.awt.Graphics, freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView, java.lang.Object), 1.0, 2118, 
2121, paintSelected(java.awt.Graphics2D), 1.0, 2118, 
2123, getLeftPoint(java.awt.Point), 0.0, 2118, 
2124, getCenterPoint(java.awt.Point), 0.0, 2118, 
2125, getRightPoint(java.awt.Point), 0.0, 2118, 
2126, getMainViewWidthWithFoldingMark(int, int), 0.0, 2118, 
2127, getDeltaX(), 0.0, 2118, 
2128, getStyle(), 0.0, 2118, 
2129, getAlignment(), 0.0, 2118, 
2130, getTextWidth(), 0.0, 2118, 
2131, getTextX(), 0.0, 2118, 
2134, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView), 1.0, 2133, 
2136, getMainViewInPoint(freemind.view.mindmapview.NodeView), 1.0, 2133, 
2138, SharpBezierEdgeView(), 0.0, 2137, 
2139, update(float, float, float, float), 0.0, 2137, 
2140, paint(java.awt.Graphics2D), 1.0, 2137, 
2141, getColor(), 0.0, 2137, 
2142, createStart(int, int, freemind.view.mindmapview.MainView, double, double, double, int, double, double, double), 0.0, 2137, 
2144, getPreferredSize(java.awt.Dimension), 0.0, 2143, 
2145, paint(java.awt.Graphics2D, java.awt.Graphics, java.lang.Object), 1.0, 2143, 
2146, paintDragOver(java.awt.Graphics2D, int), 1.0, 2143, 
2147, paintSelected(java.awt.Graphics2D), 1.0, 2143, 
2149, getLeftPoint(java.awt.Point), 0.0, 2143, 
2150, getCenterPoint(java.awt.Point), 0.0, 2143, 
2151, getRightPoint(java.awt.Point), 0.0, 2143, 
2152, setDraggedOver(java.awt.Point), 1.0, 2143, 
2153, getStyle(), 0.0, 2143, 
2154, getAlignment(), 0.0, 2143, 
2155, getTextWidth(), 0.0, 2143, 
2156, getTextX(), 0.0, 2143, 
2157, dropAsSibling(double), 1.0, 2143, 
2158, dropPosition(double), 1.0, 2143, 
2162, show(javax.swing.JFrame), 0.0, 2160, 
2163, getFirstEvent(), 0.0, 2160, 
2165, run(java.io.FileWriter, java.io.File, java.lang.String, int, java.lang.String, java.lang.Process, java.lang.String, java.lang.Exception, java.lang.Exception), 0.0, 2164, 
2167, layout(int, int, int, int, int, java.awt.Dimension), 0.0, 2166, 
2168, getInstance(), 0.0, 2166, 
2169, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView, freemind.view.mindmapview.NodeView, javax.swing.JComponent), 1.0, 2166, 
2171, getMainViewInPoint(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MainView), 1.0, 2166, 
2175, getBounds(), 0.0, 2173, 
2176, paint(java.awt.Point, boolean, java.awt.Point, java.awt.Point, boolean, java.awt.Point, java.awt.Point, java.awt.Graphics, double, java.awt.Graphics2D), 1.0, 2173, 
2177, isTargetVisible(), 0.0, 2173, 
2178, isSourceVisible(), 0.0, 2173, 
2181, detectCollision(double, double, int, double[], java.awt.Point, java.awt.geom.Rectangle2D, java.awt.geom.FlatteningPathIterator), 1.0, 2173, 
2182, getControlPoint(int, java.awt.geom.Point2D), 1.0, 2173, 
2183, getColor(), 0.0, 2173, 
2184, getStroke(int), 0.0, 2173, 
2185, getWidth(), 0.0, 2173, 
2186, getRealWidth(int), 0.0, 2173, 
2187, getMap(), 0.0, 2173, 
2188, getModel(), 0.0, 2173, 
2189, getZoom(), 0.0, 2173, 
2192, MindMapLayout(), 0.0, 2191, 
2194, removeLayoutComponent(java.awt.Component), 1.0, 2191, 
2195, layoutContainer(java.awt.Container, int, freemind.view.mindmapview.NodeMotionListenerView, int, java.awt.Component, freemind.view.mindmapview.NodeViewLayout, int, freemind.view.mindmapview.MapView, int), 1.0, 2191, 
2196, getRoot(java.awt.Container), 1.0, 2191, 
2197, minimumLayoutSize(java.awt.Container), 1.0, 2191, 
2198, preferredLayoutSize(java.awt.Container, freemind.view.mindmapview.MapView, java.awt.Dimension), 1.0, 2191, 
2199, calcYBorderSize(int, int, freemind.view.mindmapview.MapView, java.awt.Dimension), 1.0, 2191, 
2200, calcXBorderSize(int, int, freemind.view.mindmapview.MapView, java.awt.Dimension), 1.0, 2191, 
2203, doGraham(java.awt.Point, int, int, int, java.util.Vector, int, freemind.view.mindmapview.ConvexHull.thetaComparator), 1.0, 2201, 
2204, calculateHull(java.util.LinkedList, java.util.Vector, int, java.util.Vector, java.util.ListIterator), 1.0, 2201, 
2208, show(int, int, int, java.awt.Font, java.awt.Point, freemind.view.mindmapview.freemind.view.mindmapview.EditNodeTextField$1TextFieldListener, int, int, int, freemind.view.mindmapview.MapView, freemind.view.mindmapview.NodeView, java.awt.Color, int, float, int, int, int, java.awt.Color, int, freemind.modes.MindMapNode, freemind.main.Tools.IntHolder), 0.0, 2206, 
2209, hideMe(java.awt.Rectangle, javax.swing.JComponent), 0.0, 2206, 
2211, thetaComparator(java.awt.Point), 1.0, 2210, 
2215, focusGained(java.awt.event.FocusEvent), 1.0, 2214, 
2216, focusLost(java.awt.event.FocusEvent), 1.0, 2214, 
2217, keyPressed(boolean, java.awt.event.KeyEvent), 1.0, 2214, 
2218, keyTyped(java.awt.event.KeyEvent), 1.0, 2214, 
2219, keyReleased(java.awt.event.KeyEvent), 1.0, 2214, 
2220, mouseClicked(java.awt.event.MouseEvent), 1.0, 2214, 
2221, mouseEntered(java.awt.event.MouseEvent), 1.0, 2214, 
2222, mouseExited(java.awt.event.MouseEvent), 1.0, 2214, 
2223, mousePressed(java.awt.event.MouseEvent), 1.0, 2214, 
2224, mouseReleased(java.awt.event.MouseEvent), 1.0, 2214, 
2225, conditionallyShowPopup(java.awt.event.MouseEvent, javax.swing.JPopupMenu), 1.0, 2214, 
2226, componentHidden(java.awt.event.ComponentEvent), 1.0, 2214, 
2227, componentMoved(java.awt.event.ComponentEvent), 1.0, 2214, 
2228, componentResized(java.awt.event.ComponentEvent), 1.0, 2214, 
2229, componentShown(java.awt.event.ComponentEvent), 1.0, 2214, 
2232, layout(int, int, int, int, int, int, int, java.awt.Dimension, int, int, int, int, int, int), 0.0, 2231, 
2233, getInstance(), 0.0, 2231, 
2234, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView, freemind.view.mindmapview.NodeView, javax.swing.JComponent), 1.0, 2231, 
2236, getMainViewInPoint(freemind.view.mindmapview.NodeView, java.awt.Point), 1.0, 2231, 
2239, LinearEdgeView(), 0.0, 2238, 
2240, paint(int, java.awt.Graphics2D, int[], java.awt.Stroke, int[], java.awt.Color, int), 1.0, 2238, 
2241, getColor(), 0.0, 2238, 
2243, setFocusCycleRoot(boolean), 1.0, 2242, 
2245, setMainView(freemind.view.mindmapview.MainView, int, java.awt.Container), 1.0, 2242, 
2246, removeFromMap(), 0.0, 2242, 
2247, addDragListener(java.awt.dnd.DragGestureListener, java.awt.dnd.DragSource), 1.0, 2242, 
2248, addDropListener(java.awt.dnd.DropTargetListener, java.awt.dnd.DropTarget), 1.0, 2242, 
2249, isRoot(), 0.0, 2242, 
2250, getIsLong(), 0.0, 2242, 
2251, isSiblingOf(freemind.view.mindmapview.NodeView), 1.0, 2242, 
2252, isChildOf(freemind.view.mindmapview.NodeView), 1.0, 2242, 
2253, isParentOf(freemind.view.mindmapview.NodeView), 1.0, 2242, 
2254, getModel(), 0.0, 2242, 
2255, getCoordinates(java.util.LinkedList), 1.0, 2242, 
2257, setText(java.lang.String), 1.0, 2242, 
2258, getText(), 0.0, 2242, 
2259, getMainViewWidthWithFoldingMark(), 0.0, 2242, 
2260, getMainViewHeightWithFoldingMark(), 0.0, 2242, 
2261, getDeltaX(), 0.0, 2242, 
2262, getDeltaY(), 0.0, 2242, 
2263, requestFocus(boolean), 0.0, 2242, 
2264, focused(), 0.0, 2242, 
2265, getAdditionalCloudHeigth(freemind.modes.MindMapCloud), 0.0, 2242, 
2266, isSelected(), 0.0, 2242, 
2267, isLeft(), 0.0, 2242, 
2268, setModel(freemind.modes.MindMapNode), 1.0, 2242, 
2269, getMap(), 0.0, 2242, 
2270, isParentHidden(java.awt.Container, freemind.view.mindmapview.NodeView), 0.0, 2242, 
2271, getParentView(java.awt.Container), 0.0, 2242, 
2272, getVisibleParentView(java.awt.Container, freemind.view.mindmapview.NodeView), 0.0, 2242, 
2273, getChildrenViews(Component[], int, freemind.view.mindmapview.NodeView, java.util.LinkedList), 0.0, 2242, 
2274, getSiblingViews(), 0.0, 2242, 
2276, getMainViewInPoint(java.awt.Point, freemind.view.mindmapview.NodeViewLayout), 0.0, 2242, 
2277, getLinkPoint(int, int, int, int, java.awt.Point, java.awt.Point, double, double), 1.0, 2242, 
2278, convertPointToMap(java.awt.Point), 1.0, 2242, 
2279, getAlignment(), 0.0, 2242, 
2280, getNextPage(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 2242, 
2281, getPreviousPage(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 2242, 
2282, getNextVisibleSibling(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 2242, 
2284, isContentVisible(), 0.0, 2242, 
2286, getLeft(boolean, java.util.LinkedList, java.util.ListIterator, freemind.view.mindmapview.NodeView, java.util.LinkedList), 1.0, 2242, 
2287, getRight(boolean, java.util.LinkedList, java.util.ListIterator, java.util.LinkedList, freemind.view.mindmapview.NodeView), 1.0, 2242, 
2288, getPreviousVisibleSibling(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 0.0, 2242, 
2289, getNextSiblingSingle(java.util.LinkedList, freemind.view.mindmapview.NodeView, int, int, freemind.view.mindmapview.NodeView), 0.0, 2242, 
2290, getPreviousSiblingSingle(java.util.LinkedList, int, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, int), 0.0, 2242, 
2291, insert(java.util.ListIterator), 0.0, 2242, 
2293, remove(java.util.ListIterator), 0.0, 2242, 
2294, update(), 0.0, 2242, 
2295, createAttributeView(), 0.0, 2242, 
2296, repaintSelected(), 0.0, 2242, 
2297, updateText(boolean, java.lang.String, int, String[], boolean, java.lang.String, java.lang.String, int, java.net.MalformedURLException), 0.0, 2242, 
2298, updateFont(java.awt.Font), 0.0, 2242, 
2299, updateIcons(boolean, java.lang.String, java.lang.String, javax.swing.ImageIcon, java.util.List, java.util.Map, freemind.main.FreeMindMain, java.util.Iterator, javax.swing.ImageIcon, java.lang.String, freemind.view.mindmapview.MultipleImage), 0.0, 2242, 
2300, updateIconPosition(), 0.0, 2242, 
2301, updateTextColor(java.awt.Color), 0.0, 2242, 
2302, useSelectionColors(), 0.0, 2242, 
2303, updateStyle(freemind.view.mindmapview.MainView), 0.0, 2242, 
2304, updateToolTip(java.lang.String, java.lang.String, java.lang.StringBuffer, java.util.Map, java.util.Iterator), 0.0, 2242, 
2305, getMaxToolTipWidth(java.lang.NumberFormatException), 0.0, 2242, 
2306, setIcon(freemind.view.mindmapview.MultipleImage), 1.0, 2242, 
2307, updateAll(java.util.ListIterator, freemind.view.mindmapview.NodeView), 0.0, 2242, 
2308, getStyle(), 0.0, 2242, 
2309, getSelectedColor(), 0.0, 2242, 
2310, getAntiColor1(float[], java.awt.Color), 1.0, 2242, 
2311, getAntiColor2(float[], java.awt.Color), 1.0, 2242, 
2312, getShift(), 0.0, 2242, 
2313, getVGap(), 0.0, 2242, 
2314, getHGap(), 0.0, 2242, 
2315, getMainView(), 0.0, 2242, 
2316, syncronizeAttributeView(), 0.0, 2242, 
2317, getTextFont(), 0.0, 2242, 
2318, getTextColor(java.awt.Color), 0.0, 2242, 
2319, getAttributeView(), 0.0, 2242, 
2320, getPreferredVisibleChild(boolean, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, int, java.awt.Point, int, int, freemind.view.mindmapview.NodeView, int, java.awt.Component), 1.0, 2242, 
2321, setPreferredChild(freemind.view.mindmapview.NodeView, java.awt.Container), 1.0, 2242, 
2322, treeNodesChanged(javax.swing.event.TreeModelEvent), 1.0, 2242, 
2323, treeNodesInserted(int[], javax.swing.event.TreeModelEvent, int, int), 1.0, 2242, 
2324, treeNodesRemoved(freemind.view.mindmapview.NodeView, javax.swing.event.TreeModelEvent, int, freemind.view.mindmapview.NodeView, java.awt.Component, int, int, freemind.view.mindmapview.NodeView, boolean, int[]), 1.0, 2242, 
2325, treeStructureChanged(javax.swing.event.TreeModelEvent, java.util.ListIterator), 1.0, 2242, 
2326, getZoomedFoldingSymbolHalfWidth(int), 0.0, 2242, 
2327, paintFoldingMark(java.awt.Graphics2D, java.awt.Point, java.lang.Object, freemind.controller.Controller), 1.0, 2242, 
2328, getContent(), 0.0, 2242, 
2329, getContentPane(int), 0.0, 2242, 
2330, getMotionListenerView(), 0.0, 2242, 
2332, setVisible(boolean), 1.0, 2242, 
2333, paintCloudsAndEdges(java.awt.Graphics2D, int, java.awt.Component, freemind.view.mindmapview.EdgeView, java.lang.Object, java.awt.Point, freemind.view.mindmapview.NodeView), 1.0, 2242, 
2334, paint(boolean, java.awt.Graphics, java.awt.Graphics2D), 1.0, 2242, 
2335, paintCloud(java.awt.Graphics, freemind.view.mindmapview.CloudView), 1.0, 2242, 
2336, toString(), 0.0, 2242, 
2337, getInnerBounds(int), 0.0, 2242, 
2339, getTextBackground(java.awt.Color), 0.0, 2242, 
2340, getBackgroundColor(freemind.modes.MindMapCloud), 0.0, 2242, 
2342, getZoomedFoldingSymbolHalfWidth(), 0.0, 2341, 
2343, MainView(), 0.0, 2341, 
2344, getMinimumSize(), 0.0, 2341, 
2345, getMaximumSize(), 0.0, 2341, 
2346, getNodeView(), 0.0, 2341, 
2347, getPreferredSize(java.awt.Dimension, boolean, float, java.lang.String), 0.0, 2341, 
2348, paint(float, java.awt.Graphics, java.awt.Graphics2D, java.awt.geom.AffineTransform), 1.0, 2341, 
2349, getController(), 0.0, 2341, 
2350, isCurrentlyPrinting(), 0.0, 2341, 
2351, getZoom(float), 0.0, 2341, 
2352, printComponent(java.awt.Graphics), 1.0, 2341, 
2353, paintSelected(java.awt.Graphics2D, java.awt.Color), 1.0, 2341, 
2355, paintDragOver(java.awt.Graphics2D), 1.0, 2341, 
2356, getHeight(float), 0.0, 2341, 
2357, getWidth(float), 0.0, 2341, 
2359, getCenterPoint(), 0.0, 2341, 
2360, getLeftPoint(), 0.0, 2341, 
2361, getRightPoint(), 0.0, 2341, 
2362, getDeltaX(), 0.0, 2341, 
2363, getDeltaY(), 0.0, 2341, 
2364, getMainViewHeightWithFoldingMark(), 0.0, 2341, 
2365, getMainViewWidthWithFoldingMark(), 0.0, 2341, 
2366, convertPointToMap(java.awt.Point), 1.0, 2341, 
2367, convertPointFromMap(java.awt.Point), 1.0, 2341, 
2368, setDraggedOver(int), 1.0, 2341, 
2369, setDraggedOver(java.awt.Point), 1.0, 2341, 
2370, getDraggedOver(), 0.0, 2341, 
2371, dropAsSibling(double), 1.0, 2341, 
2372, dropPosition(double), 1.0, 2341, 
2374, getStyle(), 0.0, 2341, 
2375, getAlignment(), 0.0, 2341, 
2376, getTextWidth(), 0.0, 2341, 
2377, getTextX(int, boolean), 0.0, 2341, 
2378, getIconWidth(javax.swing.Icon), 0.0, 2341, 
2380, isInFollowLinkRegion(double, freemind.modes.MindMapNode), 1.0, 2341, 
2381, updateCursor(int, double, boolean), 1.0, 2341, 
2384, createPropertyChangeListener(), 0.0, 2382, 
2385, initRoot(), 0.0, 2382, 
2386, getMaxNodeWidth(java.lang.NumberFormatException), 0.0, 2382, 
2387, centerNode(java.awt.Dimension, freemind.view.mindmapview.NodeView, java.awt.Rectangle, javax.swing.JViewport, javax.swing.JComponent), 1.0, 2382, 
2388, scrollNodeToVisible(freemind.view.mindmapview.NodeView), 1.0, 2382, 
2390, getViewportSize(javax.swing.JViewport), 0.0, 2382, 
2392, getVisibleLeft(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 1.0, 2382, 
2393, getVisibleRight(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 1.0, 2382, 
2394, getVisibleNeighbour(freemind.view.mindmapview.NodeView, int, freemind.view.mindmapview.NodeView), 1.0, 2382, 
2395, move(java.awt.event.KeyEvent, freemind.view.mindmapview.NodeView), 1.0, 2382, 
2396, resetShiftSelectionOrigin(), 0.0, 2382, 
2398, getMainViewY(freemind.view.mindmapview.NodeView, java.awt.Point, int), 1.0, 2382, 
2399, moveToRoot(), 0.0, 2382, 
2400, selectAsTheOnlyOneSelected(freemind.view.mindmapview.NodeView), 1.0, 2382, 
2402, toggleSelected(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView), 1.0, 2382, 
2403, makeTheSelected(freemind.view.mindmapview.NodeView), 1.0, 2382, 
2404, deselect(freemind.view.mindmapview.NodeView), 1.0, 2382, 
2406, selectContinuous(java.util.ListIterator, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, java.util.ListIterator, freemind.view.mindmapview.NodeView, java.util.LinkedList, freemind.view.mindmapview.NodeView, java.util.ListIterator, boolean, boolean), 1.0, 2382, 
2407, getModel(), 0.0, 2382, 
2408, setMoveCursor(int, boolean), 1.0, 2382, 
2409, getNodeMouseMotionListener(), 0.0, 2382, 
2410, getNodeMotionListener(), 0.0, 2382, 
2411, getNodeKeyListener(), 0.0, 2382, 
2412, getNodeDragListener(), 0.0, 2382, 
2413, getNodeDropListener(), 0.0, 2382, 
2414, getSelected(), 0.0, 2382, 
2415, getSelected(int), 1.0, 2382, 
2416, getSelecteds(int, java.util.LinkedList), 0.0, 2382, 
2417, getSelectedNodesSortedByY(freemind.modes.MindMapNode, java.awt.Point, freemind.modes.MindMapNode, int, freemind.view.mindmapview.NodeView, java.util.Iterator, java.util.HashSet, java.util.ArrayList, java.util.LinkedList), 0.0, 2382, 
2418, getSingleSelectedNodes(java.util.ArrayList, int), 0.0, 2382, 
2419, isSelected(freemind.view.mindmapview.NodeView), 1.0, 2382, 
2420, getZoom(), 0.0, 2382, 
2421, getZoomed(int), 1.0, 2382, 
2422, setZoom(float), 1.0, 2382, 
2423, validateTree(), 0.0, 2382, 
2424, setViewPositionAfterValidate(int, int, java.awt.Point, java.awt.Point, java.awt.Point, javax.swing.JViewport, int, freemind.view.mindmapview.NodeView), 0.0, 2382, 
2425, paint(long, java.awt.Graphics, java.lang.Object, java.lang.Object, long, java.awt.Graphics2D, java.lang.Object, java.lang.Object), 1.0, 2382, 
2426, paintChildren(java.awt.Graphics, java.awt.Graphics2D, java.lang.Object, java.util.HashMap), 1.0, 2382, 
2427, paintSelecteds(java.awt.Graphics2D, java.util.Iterator, java.awt.Stroke, java.lang.Object, freemind.view.mindmapview.NodeView, java.awt.Color), 1.0, 2382, 
2431, detectCollision(java.awt.Point, int, freemind.view.mindmapview.ArrowLinkView), 1.0, 2382, 
2432, preparePrinting(), 0.0, 2382, 
2433, repaintSelecteds(freemind.view.mindmapview.NodeView, java.util.Iterator), 0.0, 2382, 
2434, endPrinting(), 0.0, 2382, 
2436, isCurrentlyPrinting(), 0.0, 2382, 
2437, getInnerBounds(java.awt.Rectangle, freemind.view.mindmapview.ArrowLinkView, java.awt.Rectangle, java.awt.Rectangle, int, java.awt.Rectangle, java.awt.geom.CubicCurve2D), 0.0, 2382, 
2438, getRoot(), 0.0, 2382, 
2439, getMindMapLayout(), 0.0, 2382, 
2440, getMap(), 0.0, 2382, 
2441, getController(), 0.0, 2382, 
2442, getSiblingMaxLevel(), 0.0, 2382, 
2443, setSiblingMaxLevel(int), 1.0, 2382, 
2444, getAutoscrollInsets(java.awt.Rectangle, java.awt.Rectangle), 0.0, 2382, 
2445, autoscroll(java.awt.Point, java.awt.Rectangle), 1.0, 2382, 
2446, getNodeView(freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView, java.util.Collection, java.util.Iterator), 1.0, 2382, 
2447, getPreferredSize(java.awt.Dimension), 0.0, 2382, 
2448, revalidateSelecteds(), 0.0, 2382, 
2449, validateSelecteds(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, java.util.ListIterator, freemind.view.mindmapview.NodeView, java.util.ArrayList), 0.0, 2382, 
2450, getNodeContentLocation(freemind.view.mindmapview.NodeView, java.awt.Point), 1.0, 2382, 
2452, ResizeListener(), 0.0, 2451, 
2453, componentResized(java.awt.Point, java.awt.event.ComponentEvent, int, javax.swing.JViewport, int), 1.0, 2451, 
2455, validateTree(java.awt.Component), 0.0, 2454, 
2458, Selected(), 0.0, 2457, 
2459, clear(), 0.0, 2457, 
2460, size(), 0.0, 2457, 
2461, remove(freemind.view.mindmapview.NodeView), 1.0, 2457, 
2462, add(freemind.view.mindmapview.NodeView), 1.0, 2457, 
2463, removeSelectionForHooks(freemind.view.mindmapview.NodeView), 1.0, 2457, 
2464, addSelectionForHooks(freemind.view.mindmapview.NodeView), 1.0, 2457, 
2465, get(int), 1.0, 2457, 
2466, contains(freemind.view.mindmapview.NodeView), 1.0, 2457, 
2467, moveToFirst(freemind.view.mindmapview.NodeView, int), 1.0, 2457, 
2472, CenterNodeRunnable(), 0.0, 2471, 
2473, run(java.lang.InterruptedException), 0.0, 2471, 
2479, show(freemind.view.mindmapview.EditNodeBase.EditDialog), 0.0, 2477, 
2481, LongNodeDialog(int, java.awt.Font, int, javax.swing.JPanel, javax.swing.JButton, java.awt.Color, javax.swing.JPanel, javax.swing.JCheckBox, javax.swing.JScrollPane, javax.swing.JButton, java.awt.Color, javax.swing.JButton), 0.0, 2480, 
2482, show(), 0.0, 2480, 
2483, cancel(), 0.0, 2480, 
2484, split(), 0.0, 2480, 
2485, submit(), 0.0, 2480, 
2486, isChanged(), 0.0, 2480, 
2487, getMostRecentFocusOwner(), 0.0, 2480, 
2489, actionPerformed(java.awt.event.ActionEvent), 1.0, 2488, 
2492, actionPerformed(java.awt.event.ActionEvent), 1.0, 2491, 
2495, actionPerformed(java.awt.event.ActionEvent), 1.0, 2494, 
2498, actionPerformed(java.awt.event.ActionEvent), 1.0, 2497, 
2501, keyPressed(java.awt.event.KeyEvent), 1.0, 2500, 
2502, keyTyped(java.awt.event.KeyEvent), 1.0, 2500, 
2503, keyReleased(java.awt.event.KeyEvent), 1.0, 2500, 
2506, mouseClicked(java.awt.event.MouseEvent), 1.0, 2505, 
2507, mouseEntered(java.awt.event.MouseEvent), 1.0, 2505, 
2508, mouseExited(java.awt.event.MouseEvent), 1.0, 2505, 
2509, mousePressed(java.awt.event.MouseEvent), 1.0, 2505, 
2510, mouseReleased(java.awt.event.MouseEvent), 1.0, 2505, 
2511, conditionallyShowPopup(java.awt.event.MouseEvent, javax.swing.JPopupMenu), 1.0, 2505, 
2514, layout(int, java.awt.Dimension, int, int, int, int), 0.0, 2513, 
2515, getInstance(), 0.0, 2513, 
2516, layoutNodeMotionListenerView(freemind.view.mindmapview.NodeMotionListenerView, javax.swing.JComponent, freemind.view.mindmapview.NodeView), 1.0, 2513, 
2518, getMainViewInPoint(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MainView), 1.0, 2513, 
2521, MultipleImage(double), 1.0, 2520, 
2522, getImageCount(), 0.0, 2520, 
2523, addImage(javax.swing.ImageIcon), 1.0, 2520, 
2524, getImage(double, double, int, int, java.awt.image.BufferedImage, java.awt.Graphics2D, java.util.Iterator, java.awt.geom.AffineTransform, javax.swing.ImageIcon), 0.0, 2520, 
2526, getIconWidth(int, int), 0.0, 2520, 
2527, getIconHeight(int, int, int), 0.0, 2520, 
2529, getBBox(double, double, double, double, double, double, double, double, double, double, double, boolean, int, double[], double[], java.awt.Shape, java.awt.geom.PathIterator, int, int), 1.0, 2528, 
2537, removeLayoutComponent(java.awt.Component), 1.0, 2535, 
2538, minimumLayoutSize(java.awt.Container), 1.0, 2535, 
2539, preferredLayoutSize(java.awt.Container), 1.0, 2535, 
2540, layoutContainer(java.awt.Container), 1.0, 2535, 
2541, layout(), 0.0, 2535, 
2542, setUp(int, freemind.view.mindmapview.NodeView, java.awt.Container, int), 1.0, 2535, 
2543, shutDown(), 0.0, 2535, 
2544, getView(), 0.0, 2535, 
2545, getModel(), 0.0, 2535, 
2546, getChildCount(), 0.0, 2535, 
2547, getContent(), 0.0, 2535, 
2548, getChildContentHeight(int, boolean, int, int, int, int, freemind.view.mindmapview.NodeView, int), 1.0, 2535, 
2549, getChildVerticalShift(int, int, boolean, int, freemind.view.mindmapview.NodeView), 1.0, 2535, 
2550, getChildHorizontalShift(int, int, int, freemind.view.mindmapview.NodeView), 0.0, 2535, 
2551, placeRightChildren(int, int, int, int, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.NodeView, int, int, int, int, int, int), 1.0, 2535, 
2552, placeLeftChildren(freemind.view.mindmapview.NodeView, int, int, freemind.view.mindmapview.NodeView, int, int, int, int, int, int, int, int), 1.0, 2535, 
2553, getVGap(), 0.0, 2535, 
2554, getSpaceAround(), 0.0, 2535, 
2556, NodeViewFactory(), 0.0, 2555, 
2557, getInstance(), 0.0, 2555, 
2558, getEdge(freemind.view.mindmapview.NodeView, java.lang.String), 1.0, 2555, 
2559, getSharpBezierEdgeView(), 0.0, 2555, 
2560, getSharpEdgeView(), 0.0, 2555, 
2561, getBezierEdgeView(), 0.0, 2555, 
2562, getLinearEdgeView(), 0.0, 2555, 
2564, newMainView(freemind.modes.MindMapNode), 1.0, 2555, 
2565, fireNodeViewCreated(freemind.view.mindmapview.NodeView), 1.0, 2555, 
2566, newContentPane(freemind.view.mindmapview.NodeView), 1.0, 2555, 
2568, ContentPane(), 0.0, 2567, 
2571, layoutContainer(java.awt.Dimension, int, java.awt.Container, int, int, int, int, java.awt.Component), 1.0, 2569, 
2572, minimumLayoutSize(java.awt.Container), 1.0, 2569, 
2573, preferredLayoutSize(java.awt.Dimension, java.awt.Dimension, java.awt.Container, int, int, java.awt.Component), 1.0, 2569, 
2574, removeLayoutComponent(java.awt.Component), 1.0, 2569, 
2578, show(java.lang.String, int, java.lang.String, java.awt.Font, int, freemind.main.FreeMindMain, com.lightdev.app.shtm.SHTMLPanel, java.awt.Color, javax.swing.text.JTextComponent, java.awt.event.KeyEvent, javax.swing.text.html.HTMLDocument, javax.swing.JEditorPane, java.awt.Color, java.lang.Exception, java.net.MalformedURLException), 0.0, 2576, 
2580, HTMLDialog(freemind.view.mindmapview.EditNodeBase, javax.swing.JButton, javax.swing.JButton, javax.swing.JPanel, javax.swing.JButton), 1.0, 2579, 
2581, createEditorPanel(), 0.0, 2579, 
2582, getHtmlEditorPanel(), 0.0, 2579, 
2583, submit(), 0.0, 2579, 
2584, removeBodyStyle(), 0.0, 2579, 
2585, split(), 0.0, 2579, 
2586, cancel(), 0.0, 2579, 
2587, isChanged(), 0.0, 2579, 
2588, getMostRecentFocusOwner(), 0.0, 2579, 
2590, actionPerformed(java.awt.event.ActionEvent), 1.0, 2589, 
2593, actionPerformed(java.awt.event.ActionEvent), 1.0, 2592, 
2596, actionPerformed(java.awt.event.ActionEvent), 1.0, 2595, 
2599, actionPerformed(java.awt.event.ActionEvent, java.lang.Exception), 1.0, 2598, 
2602, NodeMotionListenerView(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MapView, java.lang.String), 1.0, 2601, 
2603, getMovedView(), 0.0, 2601, 
2604, paintComponent(java.awt.Graphics, freemind.controller.Controller, java.lang.Object, java.awt.Color, java.awt.Graphics2D), 1.0, 2601, 
2605, isMouseEntered(), 0.0, 2601, 
2606, setMouseEntered(), 0.0, 2601, 
2607, setMouseExited(), 0.0, 2601, 
2609, BezierEdgeView(), 0.0, 2608, 
2610, update(int, int, int, int), 0.0, 2608, 
2611, paint(java.awt.Graphics2D, java.awt.Stroke, java.awt.Color), 1.0, 2608, 
2612, getColor(), 0.0, 2608, 
2615, getView(), 0.0, 2613, 
2616, getModeController(), 0.0, 2613, 
2617, getController(), 0.0, 2613, 
2618, getText(java.lang.String), 1.0, 2613, 
2619, getFrame(), 0.0, 2613, 
2620, binOptionIsTrue(java.lang.String), 1.0, 2613, 
2621, closeEdit(), 0.0, 2613, 
2622, getText(), 0.0, 2613, 
2623, getClipboard(), 0.0, 2613, 
2624, getEditControl(), 0.0, 2613, 
2625, getNode(), 0.0, 2613, 
2626, getTextFieldListener(), 0.0, 2613, 
2627, setText(java.lang.String), 1.0, 2613, 
2628, setTextFieldListener(java.awt.event.FocusListener), 1.0, 2613, 
2631, EditDialog(freemind.view.mindmapview.EditNodeBase, freemind.view.mindmapview.EditNodeBase.EditDialog.DialogWindowListener), 1.0, 2630, 
2632, confirmedSubmit(int), 0.0, 2630, 
2633, confirmedCancel(int), 0.0, 2630, 
2634, submit(), 0.0, 2630, 
2635, cancel(), 0.0, 2630, 
2636, split(), 0.0, 2630, 
2637, isChanged(), 0.0, 2630, 
2638, setBase(freemind.view.mindmapview.EditNodeBase), 1.0, 2630, 
2639, getBase(), 0.0, 2630, 
2641, windowClosing(java.awt.event.WindowEvent), 1.0, 2640, 
2644, actionPerformed(java.awt.event.ActionEvent), 1.0, 2643, 
2647, actionPerformed(java.awt.event.ActionEvent), 1.0, 2646, 
2649, actionPerformed(java.awt.event.ActionEvent), 1.0, 2648, 
2652, cancel(), 0.0, 2651, 
2653, ok(java.lang.String), 1.0, 2651, 
2656, EditCopyAction(javax.swing.text.JTextComponent), 1.0, 2655, 
2657, actionPerformed(java.lang.String, java.awt.event.ActionEvent), 1.0, 2655, 
2659, EditPopupMenu(javax.swing.text.JTextComponent), 1.0, 2658, 
2661, dispatchKeyEvent(java.awt.event.KeyEvent), 1.0, 2660, 
2662, focusGained(java.awt.event.FocusEvent, java.util.Iterator, java.awt.event.KeyEvent), 1.0, 2660, 
2663, focusLost(java.awt.event.FocusEvent), 1.0, 2660, 
2666, paint(int, java.awt.Graphics2D, java.awt.Graphics, freemind.view.mindmapview.NodeView, java.lang.Object, java.awt.Color, freemind.modes.MindMapNode), 1.0, 2665, 
2668, getMainViewWidthWithFoldingMark(int), 0.0, 2665, 
2669, getMainViewHeightWithFoldingMark(int), 0.0, 2665, 
2670, getDeltaX(), 0.0, 2665, 
2671, getStyle(), 0.0, 2665, 
2672, getAlignment(), 0.0, 2665, 
2673, getLeftPoint(int, java.awt.Point), 0.0, 2665, 
2674, getCenterPoint(java.awt.Point), 0.0, 2665, 
2675, getRightPoint(int, java.awt.Point), 0.0, 2665, 
2678, getIterativeLevel(), 0.0, 2677, 
2680, paint(double, double, double, double, double, double, double, double, double, double, double, double, double, java.awt.Graphics, java.awt.Point, java.awt.Graphics2D, freemind.view.mindmapview.ConvexHull, int, int, java.util.LinkedList, java.awt.Graphics2D, double, java.awt.Point, java.awt.Point, double, java.awt.Polygon, java.util.Vector), 1.0, 2677, 
2682, getColor(), 0.0, 2677, 
2683, getExteriorColor(), 0.0, 2677, 
2684, getStroke(int), 0.0, 2677, 
2685, getWidth(), 0.0, 2677, 
2686, getRealWidth(int), 0.0, 2677, 
2687, getDistanceToConvexHull(), 0.0, 2677, 
2689, getMap(), 0.0, 2677, 
2690, getModel(), 0.0, 2677, 
2691, getZoom(), 0.0, 2677, 
2693, SharpLinearEdgeView(), 0.0, 2692, 
2694, paint(java.awt.Graphics2D, int[], int, int[]), 1.0, 2692, 
2695, getColor(), 0.0, 2692, 
2698, createEnd(), 0.0, 2696, 
2699, createStart(), 0.0, 2696, 
2700, paint(java.awt.Graphics2D), 1.0, 2696, 
2701, reset(), 0.0, 2696, 
2702, getColor(), 0.0, 2696, 
2703, getStroke(int), 0.0, 2696, 
2704, getWidth(), 0.0, 2696, 
2705, getModel(), 0.0, 2696, 
2706, getMap(), 0.0, 2696, 
2707, getEclipsedStroke(float[]), 0.0, 2696, 
2708, isTargetEclipsed(), 0.0, 2696, 
2709, getSource(), 0.0, 2696, 
2710, getTarget(), 0.0, 2696, 
2715, register(), 0.0, 2713, 
2716, deRegister(), 0.0, 2713, 
2718, getHook(freemind.modes.MindMapNode, java.util.Iterator, freemind.extensions.PermanentNodeHook), 1.0, 2713, 
2721, resetFilter(), 0.0, 2719, 
2722, setFilter(java.lang.String), 1.0, 2719, 
2723, updateIndexArray(java.util.ArrayList, int, accessories.plugins.time.TimeList.NodeHolder), 0.0, 2719, 
2724, getRowCount(), 0.0, 2719, 
2725, getColumnCount(), 0.0, 2719, 
2726, getColumnName(int), 1.0, 2719, 
2727, getColumnClass(int), 1.0, 2719, 
2730, tableChanged(javax.swing.event.TableModelEvent), 1.0, 2729, 
2733, JYearChooser(java.util.Calendar), 0.0, 2732, 
2734, setYear(int), 1.0, 2732, 
2735, setValue(int), 1.0, 2732, 
2736, getYear(), 0.0, 2732, 
2737, setDayChooser(accessories.plugins.time.JDayChooser), 1.0, 2732, 
2738, getEndYear(), 0.0, 2732, 
2739, setEndYear(int), 1.0, 2732, 
2740, getStartYear(), 0.0, 2732, 
2741, setStartYear(int), 1.0, 2732, 
2742, main(String[], javax.swing.JFrame), 1.0, 2732, 
2744, JSpinField(), 0.0, 2743, 
2746, adjustWidthToMaximumValue(int, int, javax.swing.JTextField), 0.0, 2743, 
2747, stateChanged(javax.swing.event.ChangeEvent, javax.swing.SpinnerNumberModel, int), 1.0, 2743, 
2749, setValue(int), 1.0, 2743, 
2750, getValue(), 0.0, 2743, 
2751, setMinimum(int), 1.0, 2743, 
2752, getMinimum(), 0.0, 2743, 
2753, setMaximum(int), 1.0, 2743, 
2754, setHorizontalAlignment(int), 1.0, 2743, 
2755, getMaximum(), 0.0, 2743, 
2756, setFont(java.awt.Font), 1.0, 2743, 
2757, setForeground(java.awt.Color), 1.0, 2743, 
2758, caretUpdate(javax.swing.event.CaretEvent, int, java.lang.Exception), 1.0, 2743, 
2759, actionPerformed(java.awt.event.ActionEvent), 1.0, 2743, 
2760, setEnabled(boolean), 1.0, 2743, 
2761, getSpinner(), 0.0, 2743, 
2762, main(String[], javax.swing.JFrame), 1.0, 2743, 
2763, focusGained(java.awt.event.FocusEvent), 1.0, 2743, 
2764, focusLost(java.awt.event.FocusEvent), 1.0, 2743, 
2766, getPreferredSize(java.awt.Dimension), 0.0, 2765, 
2768, ReminderHook(), 0.0, 2767, 
2769, nodeRefresh(freemind.modes.MindMapNode), 1.0, 2767, 
2770, getMindMapController(), 0.0, 2767, 
2773, startupMapHook(java.awt.GridBagConstraints, java.awt.GridBagConstraints, javax.swing.JButton, javax.swing.JButton, javax.swing.JButton, javax.swing.JButton, java.awt.Container, javax.swing.Action), 0.0, 2772, 
2774, getTimePanel(java.awt.GridBagConstraints, java.lang.String), 0.0, 2772, 
2775, propertyChange(java.beans.PropertyChangeEvent), 1.0, 2772, 
2776, actionPerformed(java.awt.event.ActionEvent, java.text.MessageFormat, java.util.List, java.util.Iterator, freemind.modes.common.plugins.ReminderHookBase, Object[], java.lang.String, int, freemind.modes.common.plugins.ReminderHookBase, java.util.Date, freemind.modes.MindMapNode, freemind.extensions.PermanentNodeHook), 1.0, 2772, 
2777, addHook(freemind.modes.MindMapNode, java.util.List), 1.0, 2772, 
2778, disposeDialog(), 0.0, 2772, 
2779, getCalendarDate(int, java.util.Calendar, java.lang.Exception), 0.0, 2772, 
2784, numberOfOpenMapInformation(int), 1.0, 2772, 
2786, windowClosing(java.awt.event.WindowEvent), 1.0, 2785, 
2788, actionPerformed(java.awt.event.ActionEvent), 1.0, 2787, 
2790, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, java.lang.String, freemind.modes.MindMapNode, java.text.DateFormat), 1.0, 2789, 
2793, actionPerformed(java.awt.event.ActionEvent), 1.0, 2792, 
2796, actionPerformed(java.awt.event.ActionEvent), 1.0, 2795, 
2799, actionPerformed(java.awt.event.ActionEvent, java.util.Iterator, freemind.modes.MindMapNode, freemind.modes.common.plugins.ReminderHookBase), 1.0, 2798, 
2802, TableSorter(), 0.0, 2801, 
2803, TableSorter(javax.swing.table.TableModel), 1.0, 2801, 
2805, clearSortingState(), 0.0, 2801, 
2806, getTableModel(), 0.0, 2801, 
2807, setTableModel(javax.swing.table.TableModel), 1.0, 2801, 
2808, getTableHeader(), 0.0, 2801, 
2809, setTableHeader(javax.swing.table.JTableHeader, javax.swing.table.TableCellRenderer), 1.0, 2801, 
2810, isSorting(), 0.0, 2801, 
2811, getDirective(int, int, accessories.plugins.time.TableSorter.Directive), 1.0, 2801, 
2812, getSortingStatus(int), 1.0, 2801, 
2813, sortingStatusChanged(), 0.0, 2801, 
2816, cancelSorting(), 0.0, 2801, 
2818, getComparator(int, java.lang.Class, java.util.Comparator), 1.0, 2801, 
2819, getViewToModel(int, int), 0.0, 2801, 
2820, modelIndex(int), 1.0, 2801, 
2821, getModelToView(int, int), 0.0, 2801, 
2822, getRowCount(), 0.0, 2801, 
2823, getColumnCount(), 0.0, 2801, 
2824, getColumnName(int), 1.0, 2801, 
2825, getColumnClass(int), 1.0, 2801, 
2836, Row(int), 1.0, 2835, 
2837, compareTo(java.lang.Object, accessories.plugins.time.TableSorter.Directive, java.lang.Object, java.lang.Object, int, int, int, int, java.util.Iterator), 1.0, 2835, 
2839, tableChanged(int, int, javax.swing.event.TableModelEvent), 1.0, 2838, 
2842, mouseClicked(int, java.awt.event.MouseEvent, int, int, javax.swing.table.TableColumnModel, javax.swing.table.JTableHeader), 1.0, 2841, 
2847, getIconWidth(), 0.0, 2844, 
2848, getIconHeight(), 0.0, 2844, 
2850, SortableHeaderRenderer(javax.swing.table.TableCellRenderer), 1.0, 2849, 
2855, JCalendar(), 0.0, 2854, 
2856, JCalendar(java.util.Date), 1.0, 2854, 
2857, JCalendar(java.util.Calendar), 1.0, 2854, 
2858, JCalendar(java.util.Locale), 1.0, 2854, 
2862, JCalendar(boolean), 1.0, 2854, 
2864, main(String[], javax.swing.JFrame, accessories.plugins.time.JCalendar), 1.0, 2854, 
2865, getCalendar(), 0.0, 2854, 
2866, getDayChooser(), 0.0, 2854, 
2867, getLocale(), 0.0, 2854, 
2868, getMonthChooser(), 0.0, 2854, 
2869, getYearChooser(), 0.0, 2854, 
2870, isWeekOfYearVisible(), 0.0, 2854, 
2871, propertyChange(java.beans.PropertyChangeEvent, java.util.Calendar), 1.0, 2854, 
2872, setBackground(java.awt.Color), 1.0, 2854, 
2873, setCalendar(java.util.Calendar), 1.0, 2854, 
2875, setEnabled(boolean), 1.0, 2854, 
2876, isEnabled(), 0.0, 2854, 
2877, setFont(java.awt.Font), 1.0, 2854, 
2878, setForeground(java.awt.Color), 1.0, 2854, 
2879, setLocale(java.util.Locale, java.util.Locale), 1.0, 2854, 
2880, setWeekOfYearVisible(boolean), 1.0, 2854, 
2881, isDecorationBackgroundVisible(), 0.0, 2854, 
2882, setDecorationBackgroundVisible(boolean), 1.0, 2854, 
2883, isDecorationBordersVisible(), 0.0, 2854, 
2884, setDecorationBordersVisible(boolean), 1.0, 2854, 
2885, getDecorationBackgroundColor(), 0.0, 2854, 
2886, setDecorationBackgroundColor(java.awt.Color), 1.0, 2854, 
2887, getSundayForeground(), 0.0, 2854, 
2888, getWeekdayForeground(), 0.0, 2854, 
2889, setSundayForeground(java.awt.Color), 1.0, 2854, 
2890, setWeekdayForeground(java.awt.Color), 1.0, 2854, 
2891, getDate(), 0.0, 2854, 
2892, setDate(java.util.Date, int, int, int, java.util.Date), 1.0, 2854, 
2894, getMaxSelectableDate(), 0.0, 2854, 
2895, getMinSelectableDate(), 0.0, 2854, 
2896, setMaxSelectableDate(java.util.Date), 1.0, 2854, 
2897, setMinSelectableDate(java.util.Date), 1.0, 2854, 
2898, getMaxDayCharacters(), 0.0, 2854, 
2899, setMaxDayCharacters(int), 1.0, 2854, 
2901, JTripleCalendar(java.awt.GridLayout), 0.0, 2900, 
2902, createInfoPanel(accessories.plugins.time.JTripleCalendar.JInfoPanel), 0.0, 2900, 
2903, main(String[], accessories.plugins.time.JTripleCalendar, javax.swing.JFrame), 1.0, 2900, 
2904, propertyChange(java.beans.PropertyChangeEvent, java.util.Calendar), 1.0, 2900, 
2905, getCalendar(), 0.0, 2900, 
2906, getDate(), 0.0, 2900, 
2907, getDayChooser(), 0.0, 2900, 
2908, setDate(java.util.Date), 1.0, 2900, 
2909, setCalendar(java.util.Calendar), 1.0, 2900, 
2910, getYearChooser(), 0.0, 2900, 
2912, JInfoPanel(javax.swing.JPanel), 0.0, 2911, 
2913, setDate(java.util.Calendar, int, int), 1.0, 2911, 
2915, init(), 0.0, 2914, 
2917, startupMapHook(javax.swing.JPanel, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, javax.swing.AbstractAction, freemind.controller.actions.generated.instance.TimeWindowColumnSetting, javax.swing.JMenuBar, javax.swing.JMenu, int, java.awt.GridBagLayout, javax.swing.JButton, javax.swing.JButton, javax.swing.JButton, java.util.Iterator, javax.swing.JScrollPane, javax.swing.AbstractAction, freemind.controller.actions.generated.instance.WindowConfigurationStorage, javax.swing.JButton, javax.swing.ListSelectionModel, java.lang.String, javax.swing.JButton, javax.swing.JMenuItem, AbstractAction[], java.awt.Container, javax.swing.JButton), 0.0, 2916, 
2918, exportSelectedRowsAndClose(int[], freemind.modes.mindmapmode.MindMapController, int, freemind.modes.MindMapNode, freemind.modes.MindMap, java.util.Iterator, int, freemind.modes.MindMapNode, java.util.Vector), 0.0, 2916, 
2919, replace(accessories.plugins.time.TimeList.IReplaceInputInformation, java.lang.String, java.lang.String, javax.swing.text.BadLocationException), 1.0, 2916, 
2921, selectSelectedRows(), 0.0, 2916, 
2924, getMindMapNode(int, freemind.modes.MindMapNode), 1.0, 2916, 
2925, updateModel(freemind.modes.MindMapNode, javax.swing.table.DefaultTableModel), 0.0, 2916, 
2927, getTimePanel(), 0.0, 2916, 
2928, disposeDialog(freemind.controller.actions.generated.instance.TimeWindowConfigurationStorage, int, freemind.controller.actions.generated.instance.TimeWindowColumnSetting), 0.0, 2916, 
2929, getRegularExpression(java.lang.String), 1.0, 2916, 
2930, getText(javax.swing.text.Document, java.lang.String), 1.0, 2916, 
2931, getPureRegularExpression(java.lang.String), 1.0, 2916, 
2933, windowClosing(java.awt.event.WindowEvent), 1.0, 2932, 
2935, actionPerformed(java.awt.event.ActionEvent), 1.0, 2934, 
2937, keyPressed(java.awt.event.KeyEvent), 1.0, 2936, 
2939, keyPressed(java.awt.event.KeyEvent), 1.0, 2938, 
2941, actionPerformed(java.awt.event.ActionEvent), 1.0, 2940, 
2943, actionPerformed(java.awt.event.ActionEvent), 1.0, 2942, 
2945, actionPerformed(java.awt.event.ActionEvent), 1.0, 2944, 
2947, actionPerformed(java.awt.event.ActionEvent), 1.0, 2946, 
2949, actionPerformed(java.awt.event.ActionEvent), 1.0, 2948, 
2951, actionPerformed(java.awt.event.ActionEvent), 1.0, 2950, 
2953, valueChanged(javax.swing.event.ListSelectionEvent, boolean, javax.swing.ListSelectionModel), 1.0, 2952, 
2956, getNodeText(freemind.modes.MindMapNode), 1.0, 2955, 
2957, valueChanged(javax.swing.event.ListSelectionEvent, freemind.modes.MindMapNode, javax.swing.ListSelectionModel, int), 1.0, 2955, 
2960, getLength(), 0.0, 2959, 
2961, getNodeHolderAt(int), 1.0, 2959, 
2964, getLength(), 0.0, 2963, 
2965, getNodeHolderAt(int), 1.0, 2963, 
2969, getLength(), 0.0, 2968, 
2970, getNodeHolderAt(int), 1.0, 2968, 
2974, getColumnClass(int), 1.0, 2973, 
2976, change(javax.swing.event.DocumentEvent), 1.0, 2975, 
2977, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 2975, 
2978, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 2975, 
2979, changedUpdate(javax.swing.event.DocumentEvent), 1.0, 2975, 
2982, DelayedTextEntry(javax.swing.event.DocumentEvent), 1.0, 2981, 
2983, run(), 0.0, 2981, 
2985, run(java.lang.String, javax.swing.text.Document, javax.swing.text.BadLocationException), 0.0, 2984, 
2988, mouseClicked(java.awt.event.MouseEvent, int, java.awt.Point), 1.0, 2987, 
2991, keyTyped(java.awt.event.KeyEvent), 1.0, 2990, 
2992, keyPressed(java.awt.event.KeyEvent), 1.0, 2990, 
2993, keyReleased(java.awt.event.KeyEvent), 1.0, 2990, 
2998, processKeyEvent(EventListener[], java.awt.event.KeyEvent, java.awt.event.KeyListener, int), 1.0, 2995, 
3001, DateRenderer(), 0.0, 3000, 
3002, setValue(java.lang.Object), 1.0, 3000, 
3004, NodeRenderer(), 0.0, 3003, 
3005, setValue(java.lang.Object), 1.0, 3003, 
3007, NotesRenderer(), 0.0, 3006, 
3008, setValue(java.lang.Object), 1.0, 3006, 
3010, NodeHolder(freemind.modes.MindMapNode), 1.0, 3009, 
3011, compareTo(java.lang.Object), 1.0, 3009, 
3012, toString(), 0.0, 3009, 
3013, getUntaggedNodeText(java.lang.String), 0.0, 3009, 
3015, NotesHolder(freemind.modes.MindMapNode), 1.0, 3014, 
3016, compareTo(java.lang.Object), 1.0, 3014, 
3017, toString(), 0.0, 3014, 
3018, getUntaggedNotesText(java.lang.String), 0.0, 3014, 
3020, IconsHolder(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindIcon), 1.0, 3019, 
3021, compareTo(java.lang.Object), 1.0, 3019, 
3022, getIcons(), 0.0, 3019, 
3023, toString(java.lang.String, java.util.Iterator, java.lang.String), 0.0, 3019, 
3025, IconsRenderer(freemind.modes.ModeController), 1.0, 3024, 
3026, setValue(java.lang.Object, accessories.plugins.time.TimeList.IconsHolder, freemind.modes.MindIcon, freemind.view.mindmapview.MultipleImage, java.util.Iterator), 1.0, 3024, 
3028, JMonthChooser(), 0.0, 3027, 
3029, JMonthChooser(boolean), 1.0, 3027, 
3030, initNames(String[], int, java.text.DateFormatSymbols), 0.0, 3027, 
3031, stateChanged(int, int, int, boolean, javax.swing.event.ChangeEvent, javax.swing.SpinnerNumberModel), 1.0, 3027, 
3032, itemStateChanged(java.awt.event.ItemEvent, int), 1.0, 3027, 
3034, setMonth(int), 1.0, 3027, 
3035, getMonth(), 0.0, 3027, 
3036, setDayChooser(accessories.plugins.time.JDayChooser), 1.0, 3027, 
3037, setYearChooser(accessories.plugins.time.JYearChooser), 1.0, 3027, 
3038, getLocale(), 0.0, 3027, 
3039, setLocale(java.util.Locale), 1.0, 3027, 
3040, setEnabled(boolean), 1.0, 3027, 
3041, getComboBox(), 0.0, 3027, 
3042, getSpinner(), 0.0, 3027, 
3043, hasSpinner(), 0.0, 3027, 
3044, setFont(java.awt.Font), 1.0, 3027, 
3045, updateUI(javax.swing.JSpinner), 0.0, 3027, 
3046, main(String[], javax.swing.JFrame), 1.0, 3027, 
3048, getPreferredSize(java.awt.Dimension), 0.0, 3047, 
3050, setMonthChooser(accessories.plugins.time.JMonthChooser), 1.0, 3049, 
3051, setYearChooser(accessories.plugins.time.JYearChooser), 1.0, 3049, 
3052, JDayChooser(), 0.0, 3049, 
3053, JDayChooser(boolean, int, int, int, int, java.util.Calendar), 1.0, 3049, 
3054, init(javax.swing.JButton, java.util.Date), 0.0, 3049, 
3055, drawDayNames(int, int, java.text.DateFormatSymbols, int), 0.0, 3049, 
3056, initDecorations(int), 0.0, 3049, 
3057, drawWeeks(java.lang.String, int, int, java.util.Calendar), 0.0, 3049, 
3058, drawDays(int, int, java.util.Date, java.awt.Color, int, int, java.util.Calendar, java.util.Date, int, java.util.Calendar, java.util.Calendar), 0.0, 3049, 
3059, getLocale(), 0.0, 3049, 
3060, setLocale(java.util.Locale), 1.0, 3049, 
3061, setDay(int, int, int, java.util.Calendar, int), 1.0, 3049, 
3062, setAlwaysFireDayProperty(boolean), 1.0, 3049, 
3063, getDay(), 0.0, 3049, 
3064, setMonth(boolean, int, int), 1.0, 3049, 
3065, setYear(int), 1.0, 3049, 
3066, setCalendar(java.util.Calendar), 1.0, 3049, 
3067, setFont(java.awt.Font, int), 1.0, 3049, 
3068, setForeground(java.awt.Color, int), 1.0, 3049, 
3069, actionPerformed(java.lang.String, java.awt.event.ActionEvent, javax.swing.JButton, int), 1.0, 3049, 
3070, focusGained(java.awt.event.FocusEvent), 1.0, 3049, 
3071, focusLost(java.awt.event.FocusEvent), 1.0, 3049, 
3072, keyPressed(java.awt.event.KeyEvent, int, java.util.GregorianCalendar, int, int, int, int), 1.0, 3049, 
3073, keyTyped(java.awt.event.KeyEvent), 1.0, 3049, 
3074, keyReleased(java.awt.event.KeyEvent), 1.0, 3049, 
3075, setEnabled(boolean, short), 1.0, 3049, 
3076, isWeekOfYearVisible(), 0.0, 3049, 
3077, setWeekOfYearVisible(boolean), 1.0, 3049, 
3078, getDayPanel(), 0.0, 3049, 
3079, getDecorationBackgroundColor(), 0.0, 3049, 
3080, setDecorationBackgroundColor(java.awt.Color, int), 1.0, 3049, 
3081, getSundayForeground(), 0.0, 3049, 
3082, getWeekdayForeground(), 0.0, 3049, 
3083, setSundayForeground(java.awt.Color), 1.0, 3049, 
3084, setWeekdayForeground(java.awt.Color), 1.0, 3049, 
3085, setFocus(), 0.0, 3049, 
3086, isDecorationBackgroundVisible(), 0.0, 3049, 
3087, setDecorationBackgroundVisible(boolean), 1.0, 3049, 
3088, isDecorationBordersVisible(), 0.0, 3049, 
3089, isDayBordersVisible(), 0.0, 3049, 
3090, setDecorationBordersVisible(boolean), 1.0, 3049, 
3091, setDayBordersVisible(boolean, int), 1.0, 3049, 
3092, updateUI(), 0.0, 3049, 
3094, setMaxSelectableDate(java.util.Date), 1.0, 3049, 
3095, setMinSelectableDate(java.util.Date), 1.0, 3049, 
3096, getMaxSelectableDate(), 0.0, 3049, 
3097, getMinSelectableDate(), 0.0, 3049, 
3098, getMaxDayCharacters(), 0.0, 3049, 
3099, setMaxDayCharacters(int), 1.0, 3049, 
3100, main(String[], javax.swing.JFrame), 1.0, 3049, 
3102, paint(java.awt.Graphics), 1.0, 3101, 
3104, DecoratorButton(), 0.0, 3103, 
3105, addMouseListener(java.awt.event.MouseListener), 1.0, 3103, 
3106, isFocusable(), 0.0, 3103, 
3107, paint(java.awt.Graphics), 1.0, 3103, 
3109, RemoveReminderHook(), 0.0, 3108, 
3110, invoke(freemind.modes.MindMapNode, freemind.modes.common.plugins.ReminderHookBase, java.util.List), 1.0, 3108, 
3113, EnterPasswordDialog(), 0.0, 3112, 
3115, initialize(), 0.0, 3112, 
3116, close(), 0.0, 3112, 
3117, okPressed(), 0.0, 3112, 
3118, checkEqualAndMinimumSize(char[], char[], int), 0.0, 3112, 
3119, cancelPressed(), 0.0, 3112, 
3120, getJContentPane(java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints), 0.0, 3112, 
3121, getJPasswordField(), 0.0, 3112, 
3122, getJPasswordField1(), 0.0, 3112, 
3123, getJOKButton(), 0.0, 3112, 
3124, getJCancelButton(), 0.0, 3112, 
3125, getResult(), 0.0, 3112, 
3126, getPassword(), 0.0, 3112, 
3128, windowClosing(java.awt.event.WindowEvent), 1.0, 3127, 
3130, actionPerformed(java.awt.event.ActionEvent), 1.0, 3129, 
3132, actionPerformed(java.awt.event.ActionEvent), 1.0, 3131, 
3135, initialize(java.util.List, javax.swing.JPanel, java.util.Iterator, javax.swing.Action, freemind.controller.actions.generated.instance.ManageStyleEditorWindowConfigurationStorage, int, freemind.controller.actions.generated.instance.Pattern), 1.0, 3133, 
3136, getDialogTitle(), 0.0, 3133, 
3137, close(freemind.controller.actions.generated.instance.ManageStyleEditorWindowConfigurationStorage), 0.0, 3133, 
3138, okPressed(), 0.0, 3133, 
3139, cancelPressed(), 0.0, 3133, 
3140, getJContentPane(javax.swing.JScrollPane, java.util.List, java.awt.event.ActionListener, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuBar, javax.swing.JMenuItem, java.awt.event.ActionListener, javax.swing.JMenu, freemind.controller.StructuredMenuHolder, javax.swing.JMenuItem, javax.swing.JMenuItem, javax.swing.JMenuItem, java.awt.event.ActionListener, javax.swing.JMenuItem), 1.0, 3133, 
3141, addPattern(int, java.awt.event.ActionEvent, freemind.controller.actions.generated.instance.Pattern), 1.0, 3133, 
3142, duplicatePattern(java.awt.event.ActionEvent, freemind.common.XmlBindingTools, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern, int), 1.0, 3133, 
3143, insertPatternFromNode(int, java.awt.event.ActionEvent, freemind.controller.actions.generated.instance.Pattern), 1.0, 3133, 
3144, applyToNode(java.awt.event.ActionEvent, int, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, freemind.modes.MindMapNode), 1.0, 3133, 
3145, searchForNameForNewPattern(java.lang.String, java.lang.String, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, int, java.util.Vector), 0.0, 3133, 
3146, removePattern(java.awt.event.ActionEvent, int), 1.0, 3133, 
3147, getJOKButton(), 0.0, 3133, 
3148, getJCancelButton(), 0.0, 3133, 
3149, getResult(), 0.0, 3133, 
3150, getText(java.lang.String), 1.0, 3133, 
3151, getPatternList(), 0.0, 3133, 
3152, writePatternBackToModel(java.util.Iterator, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.Pattern, java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Pattern), 0.0, 3133, 
3153, keyPressed(java.awt.event.KeyEvent), 1.0, 3133, 
3154, keyReleased(java.awt.event.KeyEvent), 1.0, 3133, 
3155, keyTyped(java.awt.event.KeyEvent), 1.0, 3133, 
3156, getLastSelectedPattern(), 0.0, 3133, 
3157, setLastSelectedPattern(freemind.controller.actions.generated.instance.Pattern), 1.0, 3133, 
3159, valueChanged(javax.swing.event.ListSelectionEvent, freemind.controller.actions.generated.instance.Pattern, javax.swing.JList, int), 1.0, 3158, 
3162, PatternListModel(java.util.List), 1.0, 3161, 
3163, getSize(), 0.0, 3161, 
3164, getElementAt(int), 1.0, 3161, 
3165, getPatternAt(int), 1.0, 3161, 
3166, getPatternList(), 0.0, 3161, 
3167, removePattern(int), 1.0, 3161, 
3169, printPatterns(freemind.controller.actions.generated.instance.Pattern, int, java.util.Iterator), 0.0, 3161, 
3170, getPatternByName(java.lang.String, java.util.Iterator, freemind.controller.actions.generated.instance.Pattern), 1.0, 3161, 
3172, remove(int), 1.0, 3161, 
3174, windowClosing(java.awt.event.WindowEvent), 1.0, 3173, 
3176, actionPerformed(java.awt.event.ActionEvent), 1.0, 3175, 
3178, mouseDragged(java.awt.event.MouseEvent), 1.0, 3177, 
3179, mouseMoved(java.awt.event.MouseEvent), 1.0, 3177, 
3182, actionPerformed(java.awt.event.ActionEvent), 1.0, 3181, 
3185, actionPerformed(java.awt.event.ActionEvent), 1.0, 3184, 
3188, actionPerformed(java.awt.event.ActionEvent), 1.0, 3187, 
3191, actionPerformed(java.awt.event.ActionEvent), 1.0, 3190, 
3194, actionPerformed(java.awt.event.ActionEvent), 1.0, 3193, 
3197, mouseReleased(java.awt.event.MouseEvent), 1.0, 3196, 
3198, mousePressed(java.awt.event.MouseEvent), 1.0, 3196, 
3201, actionPerformed(java.awt.event.ActionEvent), 1.0, 3200, 
3203, actionPerformed(java.awt.event.ActionEvent), 1.0, 3202, 
3205, ArrayListTransferHandler(java.lang.ClassNotFoundException), 0.0, 3204, 
3208, hasLocalArrayListFlavor(DataFlavor[], int), 1.0, 3204, 
3210, createTransferable(Object[], java.util.ArrayList, javax.swing.JComponent, java.lang.String, java.lang.Object, int), 1.0, 3204, 
3211, getSourceActions(javax.swing.JComponent), 1.0, 3204, 
3213, ArrayListTransferable(java.util.ArrayList), 1.0, 3212, 
3214, getTransferData(java.awt.datatransfer.DataFlavor), 1.0, 3212, 
3215, getTransferDataFlavors(), 0.0, 3212, 
3216, isDataFlavorSupported(java.awt.datatransfer.DataFlavor), 1.0, 3212, 
3219, initialize(java.lang.String, javax.swing.Action, javax.swing.JPanel), 1.0, 3217, 
3220, close(freemind.controller.actions.generated.instance.WindowConfigurationStorage), 0.0, 3217, 
3221, okPressed(), 0.0, 3217, 
3222, cancelPressed(), 0.0, 3217, 
3223, getJContentPane(), 0.0, 3217, 
3224, getStylePatternFrame(), 0.0, 3217, 
3225, getJOKButton(), 0.0, 3217, 
3226, getJCancelButton(), 0.0, 3217, 
3227, getResult(), 0.0, 3217, 
3228, getText(java.lang.String), 1.0, 3217, 
3229, getPattern(), 0.0, 3217, 
3230, getPattern(freemind.controller.actions.generated.instance.Pattern), 1.0, 3217, 
3231, keyPressed(java.awt.event.KeyEvent), 1.0, 3217, 
3232, keyReleased(java.awt.event.KeyEvent), 1.0, 3217, 
3233, keyTyped(java.awt.event.KeyEvent), 1.0, 3217, 
3235, windowClosing(java.awt.event.WindowEvent), 1.0, 3234, 
3237, actionPerformed(java.awt.event.ActionEvent), 1.0, 3236, 
3239, actionPerformed(java.awt.event.ActionEvent), 1.0, 3238, 
3241, actionPerformed(java.awt.event.ActionEvent), 1.0, 3240, 
3244, SetAttributeNameActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3243, 
3247, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeNameElementaryAction), 1.0, 3243, 
3249, getDoActionClass(), 0.0, 3243, 
3251, InsertAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3250, 
3254, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.InsertAttributeElementaryAction), 1.0, 3250, 
3256, getDoActionClass(), 0.0, 3250, 
3258, SetAttributeRestrictedActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3257, 
3261, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeRestrictedElementaryAction), 1.0, 3257, 
3263, getDoActionClass(), 0.0, 3257, 
3265, RegistryAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3264, 
3266, createAction(java.lang.String, freemind.controller.actions.generated.instance.RegistryAttributeElementaryAction), 1.0, 3264, 
3267, createActionPair(java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 3264, 
3268, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RegistryAttributeElementaryAction), 1.0, 3264, 
3269, act(java.lang.String, freemind.modes.attributes.AttributeRegistry, freemind.modes.attributes.AttributeRegistryElement, int), 1.0, 3264, 
3270, getDoActionClass(), 0.0, 3264, 
3272, SetAttributeColumnWidthActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3271, 
3275, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeColumnWidthElementaryAction), 1.0, 3271, 
3277, getDoActionClass(), 0.0, 3271, 
3279, applyChanges(int, java.lang.Object), 0.0, 3278, 
3280, resetChanges(int), 0.0, 3278, 
3281, AttributeManagerDialog(freemind.controller.Controller, javax.swing.JButton, javax.swing.JButton, javax.swing.JScrollPane, javax.swing.JButton, javax.swing.Box, javax.swing.JButton), 1.0, 3278, 
3285, numberOfOpenMapInformation(int), 1.0, 3278, 
3288, ApplyAction(), 0.0, 3287, 
3289, actionPerformed(java.awt.event.ActionEvent), 1.0, 3287, 
3291, OKAction(), 0.0, 3290, 
3292, actionPerformed(java.awt.event.ActionEvent), 1.0, 3290, 
3294, CancelAction(), 0.0, 3293, 
3295, actionPerformed(java.awt.event.ActionEvent), 1.0, 3293, 
3297, ImportAction(), 0.0, 3296, 
3298, actionPerformed(java.awt.event.ActionEvent), 1.0, 3296, 
3300, EditListAction(), 0.0, 3299, 
3301, actionPerformed(java.awt.event.ActionEvent), 1.0, 3299, 
3302, getRow(), 0.0, 3299, 
3303, setRow(int), 1.0, 3299, 
3306, windowClosing(java.awt.event.WindowEvent), 1.0, 3305, 
3309, itemStateChanged(java.awt.event.ItemEvent), 1.0, 3308, 
3312, componentShown(java.awt.event.ComponentEvent), 1.0, 3311, 
3314, attributesChanged(javax.swing.event.ChangeEvent), 1.0, 3313, 
3316, AssignAttributeDialog(java.awt.Dimension, java.lang.String, freemind.view.mindmapview.MapView, javax.swing.border.Border, javax.swing.Box, javax.swing.Box, javax.swing.Box, javax.swing.border.Border, javax.swing.ButtonGroup, javax.swing.JButton, javax.swing.Box, javax.swing.Box, javax.swing.JButton, javax.swing.Box, javax.swing.JButton, javax.swing.border.Border, javax.swing.JButton, javax.swing.Box, javax.swing.JButton, javax.swing.JLabel), 1.0, 3315, 
3317, mapChanged(freemind.view.mindmapview.MapView, freemind.modes.MindMap, freemind.modes.attributes.AttributeRegistry), 1.0, 3315, 
3319, attributesChanged(javax.swing.event.ChangeEvent), 1.0, 3315, 
3320, attributesChanged(javax.swing.ComboBoxModel, freemind.modes.attributes.AttributeRegistry, java.lang.Object), 0.0, 3315, 
3324, numberOfOpenMapInformation(int), 1.0, 3315, 
3327, ClonedComboBoxModel(javax.swing.ComboBoxModel), 1.0, 3326, 
3328, addListDataListener(javax.swing.event.ListDataListener), 1.0, 3326, 
3329, getElementAt(int), 1.0, 3326, 
3330, getSize(), 0.0, 3326, 
3331, removeListDataListener(javax.swing.event.ListDataListener), 1.0, 3326, 
3332, setSelectedItem(java.lang.Object), 1.0, 3326, 
3333, getContentChangedEvent(), 0.0, 3326, 
3334, getSelectedItem(), 0.0, 3326, 
3336, actionPerformed(java.awt.event.ActionEvent, freemind.view.mindmapview.NodeView, java.util.LinkedList, java.util.ListIterator, freemind.view.mindmapview.NodeView, java.lang.NullPointerException), 1.0, 3335, 
3337, iterate(freemind.view.mindmapview.NodeView, int, int, java.awt.Component), 1.0, 3335, 
3338, performAction(freemind.view.mindmapview.NodeView), 1.0, 3335, 
3339, performAction(freemind.modes.MindMapNode), 1.0, 3335, 
3340, showEmptyStringErrorMessage(), 0.0, 3335, 
3342, performAction(freemind.modes.MindMapNode, freemind.modes.attributes.NodeAttributeTableModel), 1.0, 3341, 
3343, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 3341, 
3346, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 3345, 
3347, performAction(freemind.modes.MindMapNode, int, freemind.modes.attributes.NodeAttributeTableModel), 1.0, 3345, 
3350, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 3349, 
3351, performAction(freemind.modes.MindMapNode, freemind.modes.attributes.Attribute, int, freemind.modes.attributes.NodeAttributeTableModel), 1.0, 3349, 
3354, actionPerformed(java.awt.event.ActionEvent, java.lang.Object, java.lang.Object), 1.0, 3353, 
3355, performAction(freemind.modes.MindMapNode, freemind.modes.attributes.Attribute, freemind.modes.attributes.NodeAttributeTableModel, int), 1.0, 3353, 
3358, itemStateChanged(java.awt.event.ItemEvent), 1.0, 3357, 
3361, itemStateChanged(java.awt.event.ItemEvent), 1.0, 3360, 
3364, actionPerformed(java.awt.event.ActionEvent), 1.0, 3363, 
3367, UnregistryAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3366, 
3368, createAction(java.lang.String, freemind.controller.actions.generated.instance.UnregistryAttributeElementaryAction), 1.0, 3366, 
3369, createActionPair(java.lang.String, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 3366, 
3370, createUndoAction(java.lang.String, freemind.controller.actions.generated.instance.XmlAction, int, freemind.controller.actions.generated.instance.CompoundAction, freemind.controller.filter.util.SortedComboBoxModel, java.lang.String, freemind.controller.actions.generated.instance.XmlAction), 1.0, 3366, 
3371, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UnregistryAttributeElementaryAction), 1.0, 3366, 
3372, act(java.lang.String, freemind.modes.attributes.AttributeRegistry), 1.0, 3366, 
3373, getDoActionClass(), 0.0, 3366, 
3375, AttributeRegistryTable(freemind.modes.mindmapmode.attributeactors.AttributeManagerDialog.EditListAction), 1.0, 3374, 
3376, setModel(javax.swing.table.TableModel, int, int), 1.0, 3374, 
3381, ButtonEditor(javax.swing.Icon), 1.0, 3380, 
3382, ButtonEditor(javax.swing.Action), 1.0, 3380, 
3384, getCellEditorValue(), 0.0, 3380, 
3385, setAction(javax.swing.Action), 1.0, 3380, 
3388, updateButtons(java.lang.String, boolean, int), 0.0, 3386, 
3389, getCurrentText(java.lang.String, javax.swing.text.Document, javax.swing.text.BadLocationException), 0.0, 3386, 
3390, selectText(), 0.0, 3386, 
3392, getIndexOf(java.lang.String, int), 1.0, 3386, 
3394, update(), 0.0, 3393, 
3395, insertUpdate(javax.swing.event.DocumentEvent), 1.0, 3393, 
3396, removeUpdate(javax.swing.event.DocumentEvent), 1.0, 3393, 
3397, changedUpdate(javax.swing.event.DocumentEvent), 1.0, 3393, 
3400, valueChanged(javax.swing.event.ListSelectionEvent, int, int), 1.0, 3399, 
3405, setEnabled(boolean), 1.0, 3402, 
3407, actionPerformed(java.awt.event.ActionEvent), 1.0, 3406, 
3410, ToggleAllAction(), 0.0, 3409, 
3411, actionPerformed(java.lang.Boolean, java.awt.event.ActionEvent, int), 1.0, 3409, 
3413, actionPerformed(Object[], java.awt.event.ActionEvent, int), 1.0, 3412, 
3416, actionPerformed(Object[], java.awt.event.ActionEvent, int), 1.0, 3415, 
3419, actionPerformed(java.awt.event.ActionEvent), 1.0, 3418, 
3424, mouseClicked(java.awt.event.MouseEvent), 1.0, 3423, 
3426, UnregistryAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3425, 
3429, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.UnregistryAttributeValueElementaryAction), 1.0, 3425, 
3431, getDoActionClass(), 0.0, 3425, 
3434, show(), 0.0, 3432, 
3435, performImport(boolean, javax.swing.tree.DefaultMutableTreeNode, java.lang.String, java.lang.String, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, javax.swing.tree.DefaultMutableTreeNode, int, int), 1.0, 3432, 
3436, createMapSubTrees(freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, java.lang.String, javax.swing.tree.DefaultMutableTreeNode, freemind.controller.MapModuleManager, java.util.Iterator, javax.swing.tree.DefaultMutableTreeNode, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, freemind.view.MapModule, freemind.modes.MindMap, freemind.modes.MindMap, java.util.Map.Entry), 1.0, 3432, 
3439, valueChanged(int, javax.swing.event.TreeSelectionEvent, freemind.modes.mindmapmode.attributeactors.ImportAttributesDialog.TreeNodeInfo, javax.swing.tree.DefaultMutableTreeNode), 1.0, 3432, 
3443, TreeNodeInfo(java.lang.String), 1.0, 3442, 
3444, getSelected(), 0.0, 3442, 
3445, setSelected(int), 1.0, 3442, 
3446, getInfo(), 0.0, 3442, 
3447, toString(), 0.0, 3442, 
3450, isRestricted(), 0.0, 3448, 
3452, MyRenderer(), 0.0, 3451, 
3455, actionPerformed(java.awt.event.ActionEvent), 1.0, 3454, 
3458, actionPerformed(java.awt.event.ActionEvent), 1.0, 3457, 
3461, RemoveAttributeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3460, 
3464, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.DeleteAttributeElementaryAction), 1.0, 3460, 
3466, getDoActionClass(), 0.0, 3460, 
3468, RegistryAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3467, 
3471, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.RegistryAttributeValueElementaryAction), 1.0, 3467, 
3473, getDoActionClass(), 0.0, 3467, 
3475, SetAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3474, 
3478, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeValueElementaryAction), 1.0, 3474, 
3480, getDoActionClass(), 0.0, 3474, 
3482, MindMapModeAttributeController(freemind.modes.mindmapmode.MindMapController), 1.0, 3481, 
3484, endTransaction(java.lang.String), 1.0, 3481, 
3485, startTransaction(java.lang.String), 1.0, 3481, 
3495, performRemoveAttribute(freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor, java.lang.String, freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Iterator, freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.MindMapNode), 1.0, 3481, 
3496, performRegistryAttribute(java.lang.String, freemind.modes.attributes.AttributeRegistryElement, freemind.modes.mindmapmode.actions.xml.ActionPair, java.util.NoSuchElementException), 1.0, 3481, 
3498, getAttributeRegistry(), 0.0, 3481, 
3499, performRegistrySubtreeAttributes(freemind.modes.mindmapmode.MindMapNodeModel, java.util.ListIterator, int, java.lang.String, java.lang.String, freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 3481, 
3501, visit(freemind.modes.attributes.NodeAttributeTableModel), 1.0, 3500, 
3504, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 3502, 
3507, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 3505, 
3509, AttributeRemover(java.lang.Object), 1.0, 3508, 
3510, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 3508, 
3513, visit(freemind.modes.attributes.NodeAttributeTableModel, int, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 3511, 
3515, Iterator(freemind.modes.mindmapmode.attributeactors.MindMapModeAttributeController.Visitor), 1.0, 3514, 
3516, iterate(freemind.modes.MindMapNode, java.util.ListIterator, freemind.modes.MindMapNode), 1.0, 3514, 
3518, SetAttributeVisibleActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3517, 
3521, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeVisibleElementaryAction), 1.0, 3517, 
3523, getDoActionClass(), 0.0, 3517, 
3525, SetAttributeFontSizeActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3524, 
3526, createAction(int, freemind.controller.actions.generated.instance.SetAttributeFontSizeElementaryAction), 1.0, 3524, 
3527, createActionPair(int, freemind.modes.mindmapmode.actions.xml.ActionPair, int), 1.0, 3524, 
3528, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.SetAttributeFontSizeElementaryAction), 1.0, 3524, 
3529, act(int), 1.0, 3524, 
3530, getDoActionClass(), 0.0, 3524, 
3532, ReplaceAttributeValueActor(freemind.modes.mindmapmode.MindMapController), 1.0, 3531, 
3535, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.ReplaceAttributeValueElementaryAction), 1.0, 3531, 
3537, getDoActionClass(), 0.0, 3531, 
3541, getStyle(), 0.0, 3539, 
3542, getFile(), 0.0, 3539, 
3543, getColor(), 0.0, 3539, 
3544, toString(java.lang.String), 0.0, 3539, 
3545, getText(), 0.0, 3539, 
3546, hasChildren(), 0.0, 3539, 
3547, childrenFolded(), 0.0, 3539, 
3548, childrenUnfolded(java.lang.String, java.io.File, String[], freemind.modes.filemode.FileNodeModel, int, java.lang.SecurityException), 0.0, 3539, 
3549, isLeaf(), 0.0, 3539, 
3550, getLink(java.net.MalformedURLException), 0.0, 3539, 
3551, isWriteable(), 0.0, 3539, 
3553, FileController(freemind.modes.Mode), 1.0, 3552, 
3554, newModel(freemind.modes.ModeController), 1.0, 3552, 
3556, getPopupMenu(), 0.0, 3552, 
3557, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 3552, 
3558, getHookFactory(), 0.0, 3552, 
3559, plainClick(freemind.view.mindmapview.MainView, java.awt.event.MouseEvent, freemind.modes.MindMapNode), 1.0, 3552, 
3560, toggleFolded(freemind.modes.MindMapNode), 1.0, 3552, 
3562, CenterAction(), 0.0, 3561, 
3563, actionPerformed(java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 3561, 
3565, OpenPathAction(), 0.0, 3564, 
3566, actionPerformed(java.io.File, java.lang.String, java.awt.event.ActionEvent, freemind.modes.MindMap), 1.0, 3564, 
3568, FileToolBar(javax.swing.JButton, freemind.modes.filemode.FileController), 1.0, 3567, 
3572, getLinkRegistry(), 0.0, 3569, 
3573, save(java.io.File), 1.0, 3569, 
3574, destroy(), 0.0, 3569, 
3575, load(java.net.URL), 1.0, 3569, 
3576, isSaved(), 0.0, 3569, 
3577, toString(), 0.0, 3569, 
3579, setLinkInclinationChanged(), 0.0, 3569, 
3580, getXml(java.io.Writer), 1.0, 3569, 
3581, getFilteredXml(java.io.Writer), 1.0, 3569, 
3584, FilePopupMenu(freemind.modes.filemode.FileController), 1.0, 3582, 
3588, FileMode(), 0.0, 3587, 
3589, init(freemind.controller.Controller), 1.0, 3587, 
3590, toString(), 0.0, 3587, 
3591, activate(), 0.0, 3587, 
3592, restore(java.lang.String), 1.0, 3587, 
3593, getController(), 0.0, 3587, 
3594, getDefaultModeController(), 0.0, 3587, 
3595, createModeController(), 0.0, 3587, 
3599, getDescription(), 0.0, 3597, 
3600, getLabel(), 0.0, 3597, 
3602, setValue(java.lang.String, int, java.lang.String), 1.0, 3597, 
3603, getValue(), 0.0, 3597, 
3604, setEnabled(boolean), 1.0, 3597, 
3607, getState(), 0.0, 3605, 
3608, getDescription(), 0.0, 3605, 
3609, getLabel(), 0.0, 3605, 
3610, setValue(java.lang.String), 1.0, 3605, 
3611, transformString(java.lang.String), 1.0, 3605, 
3612, getValue(), 0.0, 3605, 
3614, setEnabled(boolean), 1.0, 3605, 
3615, setState(int, Icon[]), 1.0, 3605, 
3617, actionPerformed(java.awt.event.ActionEvent), 1.0, 3616, 
3620, actionPerformed(java.awt.event.ActionEvent), 1.0, 3619, 
3624, getDefaultEncoding(), 0.0, 3622, 
3625, getEncoding(), 0.0, 3622, 
3626, init(java.lang.String, int, int, byte[]), 0.0, 3622, 
3627, close(), 0.0, 3622, 
3631, getDescription(), 0.0, 3629, 
3632, getLabel(), 0.0, 3629, 
3633, setValue(java.lang.String), 1.0, 3629, 
3634, getValue(), 0.0, 3629, 
3636, setEnabled(boolean), 1.0, 3629, 
3638, itemStateChanged(java.awt.event.ItemEvent), 1.0, 3637, 
3642, getDescription(), 0.0, 3640, 
3643, getLabel(), 0.0, 3640, 
3644, setValue(int, int, java.lang.String, int, java.lang.NumberFormatException), 1.0, 3640, 
3645, getValue(), 0.0, 3640, 
3647, setEnabled(boolean), 1.0, 3640, 
3649, stateChanged(javax.swing.event.ChangeEvent), 1.0, 3648, 
3652, NamedObject(), 0.0, 3651, 
3654, literal(java.lang.String, freemind.common.NamedObject), 1.0, 3651, 
3655, equals(java.lang.Object, freemind.common.NamedObject), 1.0, 3651, 
3656, toString(), 0.0, 3651, 
3657, getObject(), 0.0, 3651, 
3659, getDescription(), 0.0, 3658, 
3660, getLabel(), 0.0, 3658, 
3662, setEnabled(boolean), 1.0, 3658, 
3664, getText(java.lang.String), 1.0, 3663, 
3667, setState(String[], int), 1.0, 3665, 
3669, SeparatorProperty(java.lang.String), 1.0, 3668, 
3670, getDescription(), 0.0, 3668, 
3671, getLabel(), 0.0, 3668, 
3673, setEnabled(boolean), 1.0, 3668, 
3676, getDescription(), 0.0, 3674, 
3677, getLabel(), 0.0, 3674, 
3678, setValue(freemind.modes.MindIcon, java.lang.String, java.util.Iterator), 1.0, 3674, 
3679, setIcon(freemind.modes.MindIcon), 1.0, 3674, 
3680, getValue(), 0.0, 3674, 
3682, actionPerformed(java.util.Vector, java.awt.event.ActionEvent, java.util.Iterator, freemind.modes.MindIcon, java.util.Vector, freemind.modes.common.dialogs.IconSelectionPopupDialog, int), 1.0, 3674, 
3683, setEnabled(boolean), 1.0, 3674, 
3685, NextLineProperty(), 0.0, 3684, 
3686, getDescription(), 0.0, 3684, 
3687, getLabel(), 0.0, 3684, 
3689, setEnabled(boolean), 1.0, 3684, 
3692, getDescription(), 0.0, 3690, 
3693, getLabel(), 0.0, 3690, 
3694, setValue(java.lang.String), 1.0, 3690, 
3695, getValue(), 0.0, 3690, 
3697, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.util.Iterator, freemind.common.ScriptEditorProperty.ScriptEditorStarter, freemind.modes.mindmapmode.MindMapController.MindMapControllerPlugin), 1.0, 3690, 
3698, setScriptValue(java.lang.String), 1.0, 3690, 
3699, setEnabled(boolean), 1.0, 3690, 
3701, startEditor(java.lang.String), 1.0, 3700, 
3704, getResult(), 0.0, 3702, 
3705, show(java.lang.String, javax.swing.ImageIcon, javax.swing.AbstractAction, java.lang.String, javax.swing.JButton, javax.swing.AbstractAction, javax.swing.JButton), 0.0, 3702, 
3706, close(int), 1.0, 3702, 
3708, getProperty(), 0.0, 3707, 
3709, setProperty(java.lang.String), 1.0, 3707, 
3712, getProperty(), 0.0, 3710, 
3713, setProperty(java.lang.String), 1.0, 3710, 
3715, actionPerformed(java.awt.event.ActionEvent), 1.0, 3714, 
3717, actionPerformed(java.awt.event.ActionEvent), 1.0, 3716, 
3719, windowClosing(java.awt.event.WindowEvent), 1.0, 3718, 
3722, getDescription(), 0.0, 3720, 
3723, getLabel(), 0.0, 3720, 
3724, setValue(java.lang.String), 1.0, 3720, 
3725, getValue(), 0.0, 3720, 
3727, setEnabled(boolean), 1.0, 3720, 
3729, keyReleased(java.awt.event.KeyEvent), 1.0, 3728, 
3731, getLabel(), 0.0, 3730, 
3732, setValue(java.lang.String), 1.0, 3730, 
3733, getValue(), 0.0, 3730, 
3734, addPropertyChangeListener(java.beans.PropertyChangeListener), 1.0, 3730, 
3735, removePropertyChangeListener(java.beans.PropertyChangeListener), 1.0, 3730, 
3736, firePropertyChangeEvent(java.beans.PropertyChangeListener, java.util.Iterator, java.beans.PropertyChangeEvent), 0.0, 3730, 
3740, getDescription(), 0.0, 3738, 
3741, getLabel(), 0.0, 3738, 
3742, setValue(java.lang.String), 1.0, 3738, 
3743, getValue(), 0.0, 3738, 
3745, actionPerformed(java.awt.event.ActionEvent, java.awt.Color), 1.0, 3738, 
3746, setColorValue(java.awt.Color), 1.0, 3738, 
3747, getColorValue(), 0.0, 3738, 
3748, setEnabled(boolean), 1.0, 3738, 
3750, actionPerformed(java.awt.event.ActionEvent), 1.0, 3749, 
3753, mousePressed(java.awt.event.MouseEvent), 1.0, 3752, 
3754, mouseReleased(java.awt.event.MouseEvent), 1.0, 3752, 
3756, XmlBindingTools(), 0.0, 3755, 
3757, getInstance(org.jibx.runtime.JiBXException), 0.0, 3755, 
3758, createMarshaller(org.jibx.runtime.JiBXException), 0.0, 3755, 
3759, createUnmarshaller(org.jibx.runtime.JiBXException), 0.0, 3755, 
3763, marshall(freemind.controller.actions.generated.instance.XmlAction, java.io.StringWriter, java.lang.String, org.jibx.runtime.IMarshallingContext, org.jibx.runtime.JiBXException), 1.0, 3755, 
3764, unMarshall(java.lang.String), 1.0, 3755, 
3765, unMarshall(java.io.Reader, org.jibx.runtime.IUnmarshallingContext, freemind.controller.actions.generated.instance.XmlAction, org.jibx.runtime.JiBXException), 1.0, 3755, 
3772, fillPossibleValues(String[]), 1.0, 3768, 
3773, fillPossibleValues(java.util.List), 1.0, 3768, 
3775, getDescription(), 0.0, 3768, 
3776, getLabel(), 0.0, 3768, 
3777, setValue(java.lang.String), 1.0, 3768, 
3778, getValue(), 0.0, 3768, 
3780, setEnabled(boolean), 1.0, 3768, 
3782, actionPerformed(java.awt.event.ActionEvent), 1.0, 3781, 
3786, getName(), 0.0, 3785, 
3787, setName(java.lang.String), 1.0, 3785, 
3788, setProperties(java.util.Properties), 1.0, 3785, 
3789, getResourceString(java.lang.String), 1.0, 3785, 
3790, setController(freemind.modes.ModeController), 1.0, 3785, 
3791, getPluginBaseClass(), 0.0, 3785, 
3792, setPluginBaseClass(freemind.extensions.MindMapHook.PluginBaseClassSearcher), 1.0, 3785, 
3793, startupMapHook(), 0.0, 3785, 
3794, shutdownMapHook(), 0.0, 3785, 
3796, getPluginBaseObject(), 0.0, 3795, 
3800, toString(), 0.0, 3798, 
3801, getInstanciationMethod(java.util.Iterator, java.lang.String, java.util.HashMap), 0.0, 3798, 
3802, getModes(), 0.0, 3798, 
3803, getBaseClass(), 0.0, 3798, 
3804, getName(), 0.0, 3798, 
3805, getClassName(), 0.0, 3798, 
3806, getDocumentation(), 0.0, 3798, 
3807, getIconPath(), 0.0, 3798, 
3808, getKeyStroke(), 0.0, 3798, 
3809, getProperties(), 0.0, 3798, 
3810, isSelectable(), 0.0, 3798, 
3812, NodeHookAdapter(), 0.0, 3811, 
3813, invoke(freemind.modes.MindMapNode), 1.0, 3811, 
3814, getNode(), 0.0, 3811, 
3815, setNode(freemind.modes.MindMapNode), 1.0, 3811, 
3816, getMap(), 0.0, 3811, 
3817, nodeChanged(freemind.modes.MindMapNode), 1.0, 3811, 
3818, setMap(freemind.modes.MindMap), 1.0, 3811, 
3820, isSingleton(), 0.0, 3819, 
3821, isPermanent(), 0.0, 3819, 
3823, getAllInstanciationMethods(java.util.HashMap), 0.0, 3819, 
3827, isUndoable(), 0.0, 3819, 
3829, ModeControllerHookAdapter(), 0.0, 3828, 
3848, getContent(java.lang.String), 1.0, 3846, 
3849, setContent(java.lang.String), 1.0, 3846, 
3850, getContent(), 0.0, 3846, 
3853, HookAdapter(), 0.0, 3852, 
3854, getName(), 0.0, 3852, 
3855, setName(java.lang.String), 1.0, 3852, 
3856, startupMapHook(), 0.0, 3852, 
3857, shutdownMapHook(), 0.0, 3852, 
3858, getController(), 0.0, 3852, 
3859, getProperties(), 0.0, 3852, 
3860, setProperties(java.util.Properties), 1.0, 3852, 
3861, setController(freemind.modes.ModeController), 1.0, 3852, 
3862, getResourceString(java.lang.String, java.lang.String), 1.0, 3852, 
3863, getResource(java.lang.String), 1.0, 3852, 
3864, getPluginBaseClass(), 0.0, 3852, 
3865, setPluginBaseClass(freemind.extensions.MindMapHook.PluginBaseClassSearcher), 1.0, 3852, 
3867, PermanentNodeHookSubstituteUnknown(java.lang.String), 1.0, 3866, 
3868, loadFrom(freemind.main.XMLElement), 1.0, 3866, 
3869, save(freemind.main.XMLElement, java.util.Iterator, freemind.main.XMLElement), 1.0, 3866, 
3870, getName(), 0.0, 3866, 
3872, register(), 0.0, 3871, 
3873, deRegister(), 0.0, 3871, 
3875, ImportWizard(freemind.main.FreeMindMain), 1.0, 3874, 
3876, buildClassList(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.HashSet, java.io.File, java.util.StringTokenizer, java.lang.String, java.io.IOException), 0.0, 3874, 
3878, isInteresting(java.lang.String, java.lang.String, int), 1.0, 3874, 
3881, PermanentNodeHookAdapter(), 0.0, 3880, 
3882, shutdownMapHook(), 0.0, 3880, 
3883, onUpdateNodeHook(), 0.0, 3880, 
3884, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 3880, 
3885, onAddChild(freemind.modes.MindMapNode), 1.0, 3880, 
3886, onNewChild(freemind.modes.MindMapNode), 1.0, 3880, 
3887, onRemoveChild(freemind.modes.MindMapNode), 1.0, 3880, 
3888, save(freemind.main.XMLElement, java.lang.String), 1.0, 3880, 
3889, loadFrom(freemind.main.XMLElement), 1.0, 3880, 
3890, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 3880, 
3891, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 3880, 
3892, onAddChildren(freemind.modes.MindMapNode), 1.0, 3880, 
3893, loadNameValuePairs(freemind.main.XMLElement, java.lang.String, java.util.HashMap, freemind.main.XMLElement, java.util.Iterator), 1.0, 3880, 
3896, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 3880, 
3897, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 3880, 
3900, getClassName(), 0.0, 3898, 
3901, getIsPluginBase(), 0.0, 3898, 
3902, getListPluginModeList(), 0.0, 3898, 
3904, setMap(freemind.modes.MindMap), 1.0, 3903, 
3905, setNode(freemind.modes.MindMapNode), 1.0, 3903, 
3906, invoke(freemind.modes.MindMapNode), 1.0, 3903, 
3908, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 3907, 
3909, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 3907, 
3910, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 3907, 
3911, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 3907, 
3912, onUpdateNodeHook(), 0.0, 3907, 
3913, onAddChild(freemind.modes.MindMapNode), 1.0, 3907, 
3914, onNewChild(freemind.modes.MindMapNode), 1.0, 3907, 
3915, onAddChildren(freemind.modes.MindMapNode), 1.0, 3907, 
3916, onRemoveChild(freemind.modes.MindMapNode), 1.0, 3907, 
3918, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 3907, 
3919, save(freemind.main.XMLElement), 1.0, 3907, 
3920, loadFrom(freemind.main.XMLElement), 1.0, 3907, 
3922, getPossibleNodeHooks(), 0.0, 3921, 
3923, getPossibleModeControllerHooks(), 0.0, 3921, 
3924, createModeControllerHook(java.lang.String), 1.0, 3921, 
3925, createNodeHook(java.lang.String), 1.0, 3921, 
3927, getHookMenuPositions(java.lang.String), 1.0, 3921, 
3928, getInstanciationMethod(java.lang.String), 1.0, 3921, 
3929, getRegistrations(), 0.0, 3921, 
3931, deregisterAllRegistrationContainer(), 0.0, 3921, 
3932, getPluginBaseClass(java.lang.String), 1.0, 3921, 
3935, getFromResourceIfNecessary(java.lang.String), 1.0, 3933, 
3936, getFromPropertiesIfNecessary(java.lang.String), 1.0, 3933, 
3937, getPluginDirectory(), 0.0, 3933, 
3938, getPluginBase(), 0.0, 3933, 
3939, getPluginClasspath(freemind.controller.actions.generated.instance.PluginClasspath, java.util.Vector, java.lang.Object, java.util.Iterator), 0.0, 3933, 
3940, getPluginClassLoader(java.util.List, java.lang.ClassLoader), 0.0, 3933, 
3941, createPluginClasspathString(java.lang.String, java.util.List, java.util.Iterator, freemind.controller.actions.generated.instance.PluginClasspath), 1.0, 3933, 
3942, getClassLoader(java.lang.String, URL[], java.util.List, java.io.File, java.util.Iterator, java.lang.String, int, freemind.controller.actions.generated.instance.PluginClasspath, java.lang.ClassLoader, java.net.MalformedURLException), 1.0, 3933, 
3944, RegistrationContainer(), 0.0, 3943, 
3946, HookFactoryAdapter(), 0.0, 3945, 
3949, deregisterAllRegistrationContainer(), 0.0, 3945, 
3953, getTranslatableResourceString(java.lang.String, java.lang.String), 1.0, 3951, 
3954, createBufferedImage(java.awt.image.BufferedImage, java.awt.Graphics, java.awt.Rectangle), 0.0, 3951, 
3960, accept(java.io.File, java.lang.String), 1.0, 3958, 
3961, getDescription(), 0.0, 3958, 
3963, getContent(), 0.0, 3962, 
3964, setContent(java.lang.String), 1.0, 3962, 
3965, setContentUndoable(java.lang.String), 1.0, 3962, 
3970, WindowClosingAdapter(boolean), 1.0, 3969, 
3971, WindowClosingAdapter(), 0.0, 3969, 
3972, windowClosing(java.awt.event.WindowEvent), 1.0, 3969, 
3975, AttributeRegistry(), 0.0, 3974, 
3976, size(), 0.0, 3974, 
3977, AttributeRegistry(freemind.modes.MapRegistry), 1.0, 3974, 
3978, getKey(int), 1.0, 3974, 
3979, getElement(int), 1.0, 3974, 
3980, getAttributeController(), 0.0, 3974, 
3981, removeAtribute(java.lang.Object), 1.0, 3974, 
3982, containsElement(java.lang.String), 1.0, 3974, 
3983, getCombinedModel(), 0.0, 3974, 
3984, getComboBoxModel(), 0.0, 3974, 
3985, getListBoxModel(), 0.0, 3974, 
3986, getDefaultComboBoxModel(java.lang.Comparable, freemind.modes.attributes.AttributeRegistryElement, java.util.NoSuchElementException), 1.0, 3974, 
3987, getElement(java.lang.Comparable, freemind.modes.attributes.AttributeRegistryElement), 1.0, 3974, 
3988, getVisibleElementsNumber(), 0.0, 3974, 
3989, addChangeListener(javax.swing.event.ChangeListener), 1.0, 3974, 
3990, removeChangeListener(javax.swing.event.ChangeListener), 1.0, 3974, 
3991, addAttributesListener(freemind.modes.mindmapmode.attributeactors.AttributesListener), 1.0, 3974, 
3992, removeAttributesListener(freemind.modes.mindmapmode.attributeactors.AttributesListener), 1.0, 3974, 
3993, fireAttributeLayoutChanged(), 0.0, 3974, 
3994, fireStateChanged(int, Object[]), 0.0, 3974, 
3995, fireAttributesChanged(int, Object[]), 0.0, 3974, 
3996, indexOf(java.lang.String), 1.0, 3974, 
3998, getTableModel(), 0.0, 3974, 
4000, getRestriction(int), 1.0, 3974, 
4001, isRestricted(java.lang.String), 1.0, 3974, 
4004, getValues(int), 1.0, 3974, 
4005, isRestricted(), 0.0, 3974, 
4006, setRestricted(boolean), 1.0, 3974, 
4007, getFontSize(), 0.0, 3974, 
4008, setFontSize(int), 1.0, 3974, 
4009, save(boolean, java.io.Writer, int, freemind.main.XMLElement, freemind.modes.attributes.AttributeRegistryElement, freemind.main.XMLElement), 1.0, 3974, 
4010, resetChanges(int, freemind.modes.attributes.AttributeRegistryElement), 0.0, 3974, 
4011, applyChanges(int, freemind.modes.attributes.AttributeRegistryElement), 0.0, 3974, 
4013, getElements(), 0.0, 3974, 
4014, decrementVisibleElementsNumber(), 0.0, 3974, 
4015, incrementVisibleElementsNumber(), 0.0, 3974, 
4016, registry(java.lang.String, freemind.modes.attributes.Attribute, freemind.modes.attributes.AttributeRegistryElement, java.lang.String, int, freemind.modes.attributes.AttributeRegistryElement, java.util.NoSuchElementException), 1.0, 3974, 
4017, registry(java.lang.String, freemind.modes.attributes.AttributeRegistryElement, int), 1.0, 3974, 
4018, setAttributeLayoutChanged(), 0.0, 3974, 
4019, unregistry(java.lang.String, int), 1.0, 3974, 
4020, getAttributeViewType(), 0.0, 3974, 
4021, setAttributeViewType(java.lang.String), 1.0, 3974, 
4033, performRemoveAttribute(java.lang.String), 1.0, 4022, 
4034, performRegistryAttribute(java.lang.String), 1.0, 4022, 
4036, performRegistrySubtreeAttributes(freemind.modes.mindmapmode.MindMapNodeModel), 1.0, 4022, 
4038, AttributeTableLayoutModel(), 0.0, 4037, 
4039, getColumnWidth(int), 1.0, 4037, 
4041, setListenerList(javax.swing.event.EventListenerList), 1.0, 4037, 
4042, getListenerList(), 0.0, 4037, 
4043, addColumnWidthChangeListener(freemind.modes.attributes.ColumnWidthChangeListener), 1.0, 4037, 
4044, removeColumnWidthChangeListener(freemind.modes.attributes.ColumnWidthChangeListener), 1.0, 4037, 
4045, fireColumnWidthChanged(int, Object[], int), 1.0, 4037, 
4047, Attribute(java.lang.String), 1.0, 4046, 
4049, Attribute(freemind.modes.attributes.Attribute), 1.0, 4046, 
4050, getName(), 0.0, 4046, 
4051, setName(java.lang.String), 1.0, 4046, 
4052, getValue(), 0.0, 4046, 
4053, setValue(java.lang.String), 1.0, 4046, 
4054, toString(), 0.0, 4046, 
4057, allocateAttributes(int), 1.0, 4055, 
4058, NodeAttributeTableModel(freemind.modes.MindMapNode), 1.0, 4055, 
4059, getRowCount(), 0.0, 4055, 
4061, getName(int, freemind.modes.attributes.Attribute), 1.0, 4055, 
4062, getValue(int, freemind.modes.attributes.Attribute), 1.0, 4055, 
4063, getAttributeController(), 0.0, 4055, 
4065, enableStateIcon(), 0.0, 4055, 
4066, disableStateIcon(), 0.0, 4055, 
4068, addRowNoUndo(freemind.modes.attributes.Attribute, int), 1.0, 4055, 
4071, removeRow(int, java.lang.Object), 1.0, 4055, 
4072, save(freemind.main.XMLElement, int), 1.0, 4055, 
4074, saveLayout(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 4055, 
4075, initializeNodeAttributeLayoutXMLElement(freemind.main.XMLElement), 1.0, 4055, 
4076, getNode(), 0.0, 4055, 
4077, getAttribute(int), 1.0, 4055, 
4078, getColumnCount(), 0.0, 4055, 
4080, getColumnName(int), 1.0, 4055, 
4081, getColumnClass(int), 1.0, 4055, 
4082, getColumnWidth(int), 1.0, 4055, 
4084, getLayout(), 0.0, 4055, 
4085, getAttributes(), 0.0, 4055, 
4087, AttributeRegistryComboBoxColumnModel(freemind.modes.attributes.AttributeRegistry), 1.0, 4086, 
4088, setSelectedItem(java.lang.Object), 1.0, 4086, 
4089, getSelectedItem(), 0.0, 4086, 
4090, getSize(), 0.0, 4086, 
4091, getElementAt(int), 1.0, 4086, 
4092, tableChanged(javax.swing.event.TableModelEvent), 1.0, 4086, 
4093, clear(), 0.0, 4086, 
4094, contains(java.lang.Object), 1.0, 4086, 
4095, add(java.lang.Object, java.lang.String), 1.0, 4086, 
4097, remove(java.lang.Object), 1.0, 4086, 
4098, getIndexOf(java.lang.Object), 1.0, 4086, 
4100, AttributeRegistryTableModel(freemind.modes.attributes.AttributeRegistry), 1.0, 4099, 
4101, getRowCount(), 0.0, 4099, 
4102, getColumnCount(), 0.0, 4099, 
4105, getColumnClass(int), 1.0, 4099, 
4107, getColumnName(int), 1.0, 4099, 
4108, fireTableRowsDeleted(), 0.0, 4099, 
4113, fireVisibilityUpdated(int), 1.0, 4099, 
4114, fireRestrictionsUpdated(int), 1.0, 4099, 
4117, isVisible(), 0.0, 4115, 
4118, getValues(), 0.0, 4115, 
4119, addValue(java.lang.String), 1.0, 4115, 
4120, removeAllValues(), 0.0, 4115, 
4121, removeValue(java.lang.String), 1.0, 4115, 
4122, isRestricted(), 0.0, 4115, 
4123, getKey(), 0.0, 4115, 
4124, setKey(java.lang.String), 1.0, 4115, 
4125, save(freemind.main.XMLElement, freemind.main.XMLElement, int), 0.0, 4115, 
4126, setVisibility(boolean), 1.0, 4115, 
4127, setRestriction(boolean), 1.0, 4115, 
4128, getRestriction(), 0.0, 4115, 
4129, setRestrictionModel(java.lang.Boolean), 1.0, 4115, 
4130, getVisibilityModel(), 0.0, 4115, 
4131, setVisibilityModel(java.lang.Boolean), 1.0, 4115, 
4134, getRegistry(), 0.0, 4133, 
4135, getKey(), 0.0, 4133, 
4136, add(java.lang.Object), 1.0, 4133, 
4137, _add(java.lang.Object), 1.0, 4133, 
4138, remove(java.lang.Object), 1.0, 4133, 
4139, _remove(java.lang.Object), 1.0, 4133, 
4145, getColumnNumber(), 0.0, 4143, 
4147, getRowCount(), 0.0, 4146, 
4148, getColumnWidth(int), 1.0, 4146, 
4152, getNode(), 0.0, 4146, 
4153, fireTableDataChanged(), 0.0, 4146, 
4155, columnWidthChanged(freemind.modes.attributes.ColumnWidthChangeEvent), 1.0, 4154, 
4158, startupMapHook(java.io.BufferedOutputStream, java.io.File, java.io.FileOutputStream, freemind.view.mindmapview.MapView, java.io.OutputStreamWriter, org.apache.batik.svggen.SVGGraphics2D, java.lang.Exception), 0.0, 4157, 
4160, fillSVGGraphics2D(java.awt.Rectangle, org.apache.batik.svggen.SVGGeneratorContext, freemind.view.mindmapview.MapView, org.w3c.dom.Document, org.apache.batik.svggen.SVGGraphics2D, java.lang.String, org.w3c.dom.DOMImplementation, org.apache.batik.svggen.SVGGeneratorContext.GraphicContextDefaults), 1.0, 4159, 
4163, startupMapHook(java.io.File, java.io.FileOutputStream, org.w3c.dom.Document, java.io.BufferedOutputStream, org.apache.batik.transcoder.TranscoderInput, freemind.view.mindmapview.MapView, org.apache.batik.transcoder.TranscoderOutput, org.apache.batik.svggen.SVGGraphics2D, org.apache.fop.svg.PDFTranscoder, org.w3c.dom.Element, java.lang.Exception), 0.0, 4162, 
4166, FilterController(freemind.controller.Controller), 1.0, 4165, 
4167, getConditionRenderer(), 0.0, 4165, 
4168, getFilterToolbar(), 0.0, 4165, 
4169, showFilterToolbar(boolean, freemind.controller.filter.Filter), 1.0, 4165, 
4170, refreshMap(), 0.0, 4165, 
4171, getConditionFactory(), 0.0, 4165, 
4172, getMap(), 0.0, 4165, 
4173, setFilterToolbar(freemind.controller.filter.FilterToolbar), 1.0, 4165, 
4178, numberOfOpenMapInformation(int), 1.0, 4165, 
4179, createTransparentFilter(), 0.0, 4165, 
4180, saveConditions(), 0.0, 4165, 
4181, getFilterConditionModel(), 0.0, 4165, 
4182, setFilterConditionModel(javax.swing.DefaultComboBoxModel), 1.0, 4165, 
4186, getFileChooser(freemind.modes.ModeController, javax.swing.JFileChooser), 0.0, 4185, 
4188, getAttributeValue(freemind.modes.MindIcon, java.lang.Object), 0.0, 4185, 
4189, mapChanged(freemind.modes.MindMap), 1.0, 4185, 
4190, selectCondition(int, int), 0.0, 4185, 
4191, setSelectedItem(java.lang.Object), 1.0, 4185, 
4192, show(), 0.0, 4185, 
4193, initInternalConditionModel(int, java.lang.Object, int), 0.0, 4185, 
4194, applyChanges(), 0.0, 4185, 
4196, AddConditionAction(), 0.0, 4195, 
4197, actionPerformed(freemind.controller.filter.condition.Condition, java.lang.String, java.awt.event.ActionEvent, freemind.common.NamedObject, freemind.common.NamedObject, boolean, java.lang.Object, java.lang.Object, javax.swing.DefaultComboBoxModel, java.lang.NullPointerException), 1.0, 4195, 
4199, DeleteConditionAction(), 0.0, 4198, 
4200, actionPerformed(int, java.awt.event.ActionEvent, int, javax.swing.DefaultComboBoxModel, int), 1.0, 4198, 
4202, CreateNotSatisfiedConditionAction(), 0.0, 4201, 
4203, actionPerformed(freemind.controller.filter.condition.Condition, java.awt.event.ActionEvent, int, javax.swing.DefaultComboBoxModel, int, freemind.controller.filter.condition.Condition), 1.0, 4201, 
4205, CreateConjunctConditionAction(), 0.0, 4204, 
4206, actionPerformed(Object[], java.awt.event.ActionEvent, javax.swing.DefaultComboBoxModel, freemind.controller.filter.condition.Condition), 1.0, 4204, 
4208, CreateDisjunctConditionAction(), 0.0, 4207, 
4209, actionPerformed(Object[], java.awt.event.ActionEvent, javax.swing.DefaultComboBoxModel, freemind.controller.filter.condition.Condition), 1.0, 4207, 
4211, valueChanged(javax.swing.event.ListSelectionEvent), 1.0, 4210, 
4212, intervalAdded(javax.swing.event.ListDataEvent), 1.0, 4210, 
4213, intervalRemoved(javax.swing.event.ListDataEvent), 1.0, 4210, 
4214, contentsChanged(javax.swing.event.ListDataEvent), 1.0, 4210, 
4217, mouseClicked(java.awt.event.MouseEvent), 1.0, 4216, 
4220, run(), 0.0, 4219, 
4223, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 4222, 
4226, accept(java.io.File, java.lang.String), 1.0, 4225, 
4227, getDescription(), 0.0, 4225, 
4230, actionPerformed(java.lang.String, java.awt.event.ActionEvent, javax.swing.JFileChooser, java.lang.String, int, java.io.File, java.lang.Exception), 1.0, 4229, 
4231, handleSavingException(java.lang.Exception), 1.0, 4229, 
4234, actionPerformed(java.awt.event.ActionEvent, javax.swing.JFileChooser, java.io.File, int, java.lang.Exception), 1.0, 4233, 
4235, handleLoadingException(java.lang.Exception), 1.0, 4233, 
4238, itemStateChanged(java.awt.event.ItemEvent, boolean), 1.0, 4237, 
4241, itemStateChanged(java.awt.event.ItemEvent, java.lang.String), 1.0, 4240, 
4244, applyFilter(freemind.controller.Controller), 1.0, 4243, 
4245, isVisible(freemind.modes.MindMapNode), 1.0, 4243, 
4246, areMatchedShown(), 0.0, 4243, 
4247, areHiddenShown(), 0.0, 4243, 
4248, areAncestorsShown(), 0.0, 4243, 
4249, areDescendantsShown(), 0.0, 4243, 
4250, areEclipsedShown(), 0.0, 4243, 
4251, getCondition(), 0.0, 4243, 
4254, applyFilter(freemind.controller.Controller, freemind.view.mindmapview.MapView, freemind.modes.MindMapNode, freemind.modes.MindMap), 1.0, 4252, 
4255, selectVisibleNode(freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MapView, int, freemind.view.mindmapview.NodeView, java.util.LinkedList, java.util.ListIterator), 1.0, 4252, 
4256, getNearestVisibleParent(freemind.view.mindmapview.NodeView), 1.0, 4252, 
4259, isVisible(freemind.modes.MindMapNode, int), 1.0, 4252, 
4260, resetFilter(freemind.modes.MindMapNode), 1.0, 4252, 
4262, areMatchedShown(), 0.0, 4252, 
4263, areHiddenShown(), 0.0, 4252, 
4264, areAncestorsShown(), 0.0, 4252, 
4265, areDescendantsShown(), 0.0, 4252, 
4266, areEclipsedShown(), 0.0, 4252, 
4267, getCondition(), 0.0, 4252, 
4269, FilterInfo(), 0.0, 4268, 
4270, reset(), 0.0, 4268, 
4271, setAncestor(), 0.0, 4268, 
4272, setDescendant(), 0.0, 4268, 
4273, setMatched(), 0.0, 4268, 
4274, add(int), 1.0, 4268, 
4275, get(), 0.0, 4268, 
4276, isAncestor(), 0.0, 4268, 
4277, isMatched(), 0.0, 4268, 
4279, FilterToolbar(freemind.controller.Controller), 1.0, 4278, 
4280, addStandardConditions(freemind.controller.filter.condition.Condition, javax.swing.DefaultComboBoxModel), 0.0, 4278, 
4281, initConditions(java.lang.Exception), 0.0, 4278, 
4282, resetFilter(), 0.0, 4278, 
4283, getSelectedCondition(), 0.0, 4278, 
4284, setMapFilter(freemind.modes.MindMap), 0.0, 4278, 
4285, getFilterDialog(), 0.0, 4278, 
4286, mapChanged(freemind.controller.filter.Filter, freemind.modes.MindMap), 1.0, 4278, 
4287, refreshMap(), 0.0, 4278, 
4288, saveConditions(java.lang.Exception), 0.0, 4278, 
4289, getFilterConditionModel(), 0.0, 4278, 
4290, setFilterConditionModel(javax.swing.ComboBoxModel), 1.0, 4278, 
4292, FilterChangeListener(), 0.0, 4291, 
4293, actionPerformed(java.awt.event.ActionEvent), 1.0, 4291, 
4294, itemStateChanged(java.awt.event.ItemEvent), 1.0, 4291, 
4295, filterChanged(freemind.modes.MindMap), 0.0, 4291, 
4296, propertyChange(java.beans.PropertyChangeEvent), 1.0, 4291, 
4298, EditFilterAction(), 0.0, 4297, 
4299, getFilterDialog(), 0.0, 4297, 
4300, actionPerformed(java.awt.event.ActionEvent, java.lang.Object), 1.0, 4297, 
4302, UnfoldAncestorsAction(), 0.0, 4301, 
4303, unfoldAncestors(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 4301, 
4305, actionPerformed(java.awt.event.ActionEvent), 1.0, 4301, 
4307, getMaximumSize(), 0.0, 4306, 
4310, LatexNodeHook(), 0.0, 4309, 
4311, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 4309, 
4312, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 4309, 
4313, deleteViewer(freemind.view.mindmapview.NodeView, int, int, java.awt.Component, java.awt.Container), 1.0, 4309, 
4314, invoke(freemind.modes.MindMapNode, java.util.Iterator, freemind.view.mindmapview.NodeView), 1.0, 4309, 
4315, createViewer(freemind.view.mindmapview.NodeView, plugins.latex.JZoomedHotEqn), 1.0, 4309, 
4316, getContent(java.lang.String), 1.0, 4309, 
4318, loadFrom(freemind.main.XMLElement), 1.0, 4309, 
4319, save(freemind.main.XMLElement), 1.0, 4309, 
4320, shutdownMapHook(plugins.latex.JZoomedHotEqn, java.util.Iterator), 0.0, 4309, 
4322, JZoomedHotEqn(plugins.latex.LatexNodeHook), 1.0, 4321, 
4323, getPreferredSize(java.awt.Dimension), 0.0, 4321, 
4324, paint(java.awt.Graphics, java.awt.Graphics2D, java.awt.geom.AffineTransform), 1.0, 4321, 
4326, mouseClicked(java.awt.event.MouseEvent), 1.0, 4321, 
4327, edit(javax.swing.JTextArea, javax.swing.JDialog, javax.swing.JScrollPane, java.lang.String), 0.0, 4321, 
4328, setModel(plugins.latex.LatexNodeHook), 1.0, 4321, 
4331, startupMapHook(java.lang.ClassLoader, java.net.URL, javax.help.HelpSet, javax.help.HelpBroker, java.lang.String, java.lang.Exception), 0.0, 4330, 
4334, MindMapNodeHookAdapter(), 0.0, 4333, 
4335, getMindMapController(), 0.0, 4333, 
4337, PermanentMindMapNodeHookAdapter(), 0.0, 4336, 
4338, getMindMapController(), 0.0, 4336, 
4339, propagate(freemind.modes.MindMapNode, freemind.extensions.PermanentNodeHook), 1.0, 4336, 
4343, MindMapHookFactory(freemind.main.FreeMindMain), 1.0, 4342, 
4344, getPossibleNodeHooks(), 0.0, 4342, 
4345, getPossibleModeControllerHooks(), 0.0, 4342, 
4347, actualizePlugins(java.lang.String, freemind.controller.actions.generated.instance.Plugin, freemind.controller.actions.generated.instance.PluginAction, freemind.controller.actions.generated.instance.PluginRegistration, java.lang.Object, org.jibx.runtime.IUnmarshallingContext, java.net.URL, java.io.InputStream, java.util.Iterator, java.util.Iterator, java.lang.Exception), 0.0, 4342, 
4348, createModeControllerHook(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 4342, 
4350, createNodeHook(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 4342, 
4353, getHookMenuPositions(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 4342, 
4354, getInstanciationMethod(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 4342, 
4355, getRegistrations(java.lang.Class, freemind.extensions.HookFactory.RegistrationContainer, freemind.controller.actions.generated.instance.Plugin, boolean, java.util.Iterator, java.util.Iterator, freemind.extensions.HookDescriptorRegistration, java.lang.Class, java.util.Vector, java.lang.ClassLoader, freemind.controller.actions.generated.instance.PluginMode, java.lang.ClassNotFoundException), 0.0, 4342, 
4356, getPluginBaseClass(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 4342, 
4357, getPluginBaseClass(java.lang.Object, freemind.extensions.HookDescriptorPluginAction, java.lang.String), 1.0, 4342, 
4358, getHookDescriptor(java.lang.String, freemind.extensions.HookDescriptorPluginAction), 1.0, 4342, 
4361, getPluginBaseObject(), 0.0, 4360, 
4364, MindMapHookAdapter(), 0.0, 4363, 
4365, getMindMapController(), 0.0, 4363, 
4368, setExtensionList(freemind.controller.filter.util.SortedListModel, int, int), 1.0, 4367, 
4369, ExtendedComboBoxModel(), 0.0, 4367, 
4370, ExtendedComboBoxModel(Object[]), 1.0, 4367, 
4371, ExtendedComboBoxModel(java.util.Vector), 1.0, 4367, 
4372, getElementAt(int, int), 1.0, 4367, 
4373, getSize(), 0.0, 4367, 
4374, getExtensionSize(), 0.0, 4367, 
4375, getOwnSize(), 0.0, 4367, 
4376, getModel(), 0.0, 4367, 
4378, removeAllElements(), 0.0, 4367, 
4379, removeElement(java.lang.Object), 1.0, 4367, 
4380, removeElementAt(int), 1.0, 4367, 
4381, addSortedElement(java.lang.Object), 1.0, 4367, 
4382, getIndexOf(java.lang.Object, int, int), 1.0, 4367, 
4384, intervalAdded(javax.swing.event.ListDataEvent, int), 1.0, 4383, 
4385, intervalRemoved(javax.swing.event.ListDataEvent, int), 1.0, 4383, 
4386, contentsChanged(javax.swing.event.ListDataEvent, int), 1.0, 4383, 
4389, clear(), 0.0, 4388, 
4390, contains(java.lang.Object), 1.0, 4388, 
4391, add(java.lang.Object), 1.0, 4388, 
4393, remove(java.lang.Object), 1.0, 4388, 
4394, getIndexOf(java.lang.Object), 1.0, 4388, 
4396, SortedMapListModel(), 0.0, 4395, 
4397, getSize(), 0.0, 4395, 
4398, getElementAt(int), 1.0, 4395, 
4399, add(java.lang.Object), 1.0, 4395, 
4400, addAll(Object[], java.util.Collection), 1.0, 4395, 
4401, clear(int), 0.0, 4395, 
4402, contains(java.lang.Object), 1.0, 4395, 
4403, firstElement(), 0.0, 4395, 
4404, iterator(), 0.0, 4395, 
4405, lastElement(), 0.0, 4395, 
4406, getIndexOf(java.lang.Object, java.util.Iterator, int), 1.0, 4395, 
4408, remove(java.lang.Object), 1.0, 4395, 
4410, SortedMapVector(), 0.0, 4409, 
4412, capacity(), 0.0, 4409, 
4413, clear(), 0.0, 4409, 
4414, getValue(int), 1.0, 4409, 
4415, getValue(java.lang.Comparable, int), 1.0, 4409, 
4416, getKey(int), 1.0, 4409, 
4417, containsKey(java.lang.Comparable, int), 1.0, 4409, 
4418, indexOf(java.lang.Comparable, int), 1.0, 4409, 
4419, findElement(java.lang.Comparable), 1.0, 4409, 
4421, remove(java.lang.Comparable, int), 1.0, 4409, 
4422, remove(int), 1.0, 4409, 
4423, size(), 0.0, 4409, 
4426, getValue(), 0.0, 4424, 
4427, setValue(java.lang.Object), 1.0, 4424, 
4428, getKey(), 0.0, 4424, 
4430, setSelectedItem(java.lang.Object), 1.0, 4429, 
4431, getSelectedItem(), 0.0, 4429, 
4434, DatabaseBasics(), 0.0, 4433, 
4435, startupMapHook(), 0.0, 4433, 
4436, togglePermanentHook(freemind.modes.mindmapmode.MindMapController, java.util.List, freemind.modes.MindMapNode), 1.0, 4433, 
4437, setPortProperty(freemind.common.NumberProperty), 1.0, 4433, 
4438, getPortProperty(freemind.common.NumberProperty), 0.0, 4433, 
4439, setUpdateThread(plugins.collaboration.database.UpdateThread), 1.0, 4433, 
4440, getUpdateThread(), 0.0, 4433, 
4442, processResults(java.sql.ResultSet), 1.0, 4441, 
4444, isValid(), 0.0, 4443, 
4447, isSuccess(), 0.0, 4446, 
4448, FormDialog(freemind.modes.mindmapmode.MindMapController), 1.0, 4446, 
4449, setUp(java.util.Vector), 1.0, 4446, 
4451, closeWindow(), 0.0, 4446, 
4452, getText(java.lang.String), 1.0, 4446, 
4453, propertyChange(java.beans.PropertyChangeEvent), 1.0, 4446, 
4455, isValid(), 0.0, 4454, 
4457, actionPerformed(java.awt.event.ActionEvent), 1.0, 4456, 
4460, actionPerformed(java.awt.event.ActionEvent), 1.0, 4459, 
4463, windowClosing(java.awt.event.WindowEvent), 1.0, 4462, 
4465, actionPerformed(java.awt.event.ActionEvent), 1.0, 4464, 
4467, actionPerformed(java.awt.event.ActionEvent), 1.0, 4466, 
4469, startupMapHook(freemind.modes.mindmapmode.MindMapController, java.sql.Connection, java.util.Vector, plugins.collaboration.database.DatabaseBasics.FormDialog, freemind.common.NumberProperty, freemind.common.StringProperty, plugins.collaboration.database.DatabaseConnectionHook, java.lang.String, freemind.common.StringProperty, java.lang.Exception), 0.0, 4468, 
4470, isConnected(java.util.Iterator, freemind.extensions.PermanentNodeHook, java.util.Collection), 0.0, 4468, 
4472, startupMapHook(freemind.modes.mindmapmode.MindMapController, java.sql.Connection, plugins.collaboration.database.DatabaseBasics.FormDialog, freemind.common.NumberProperty, java.lang.String, java.util.Vector, freemind.common.StringProperty, java.lang.Thread, freemind.common.StringProperty, java.lang.String, java.lang.Exception), 0.0, 4471, 
4473, loadFrom(freemind.main.XMLElement), 1.0, 4471, 
4474, save(freemind.main.XMLElement), 1.0, 4471, 
4475, shutdownMapHook(), 0.0, 4471, 
4476, onAddChild(freemind.modes.MindMapNode), 1.0, 4471, 
4477, onAddChildren(freemind.modes.MindMapNode), 1.0, 4471, 
4478, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 4471, 
4479, onNewChild(freemind.modes.MindMapNode), 1.0, 4471, 
4480, onRemoveChild(freemind.modes.MindMapNode), 1.0, 4471, 
4482, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 4471, 
4483, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 4471, 
4484, onUpdateNodeHook(), 0.0, 4471, 
4485, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 4471, 
4486, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 4471, 
4488, isValid(), 0.0, 4487, 
4490, run(), 0.0, 4489, 
4494, register(), 0.0, 4492, 
4495, deRegister(), 0.0, 4492, 
4497, isMaster(java.util.Iterator, freemind.extensions.PermanentNodeHook, java.util.Collection), 0.0, 4492, 
4498, isSlave(java.util.Iterator, java.util.Collection, freemind.extensions.PermanentNodeHook), 0.0, 4492, 
4501, startupMapHook(), 0.0, 4500, 
4502, loadFrom(freemind.main.XMLElement), 1.0, 4500, 
4503, save(freemind.main.XMLElement), 1.0, 4500, 
4504, shutdownMapHook(), 0.0, 4500, 
4505, shutdownConnection(), 0.0, 4500, 
4506, onAddChild(freemind.modes.MindMapNode), 1.0, 4500, 
4507, onAddChildren(freemind.modes.MindMapNode), 1.0, 4500, 
4508, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 4500, 
4509, onNewChild(freemind.modes.MindMapNode), 1.0, 4500, 
4510, onRemoveChild(freemind.modes.MindMapNode), 1.0, 4500, 
4512, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 4500, 
4513, onUpdateChildrenHook(freemind.modes.MindMapNode), 1.0, 4500, 
4514, onUpdateNodeHook(), 0.0, 4500, 
4515, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 4500, 
4516, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 4500, 
4519, run(java.lang.String, java.lang.Exception), 0.0, 4517, 
4520, commitSuicide(int, java.lang.InterruptedException), 0.0, 4517, 
4521, shutdown(boolean, java.sql.Statement, java.lang.Exception), 1.0, 4517, 
4522, processResults(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, java.sql.ResultSet, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.String, java.lang.String, long, java.lang.String, java.lang.Exception), 1.0, 4517, 
4523, createNewMap(freemind.modes.mindmapmode.MindMapController, java.lang.String, java.io.StringReader, freemind.modes.mindmapmode.MindMapNodeModel, java.util.HashMap, plugins.collaboration.database.DatabaseConnectionHook, freemind.extensions.PermanentNodeHook, java.util.Collection, freemind.modes.MapAdapter, java.util.Iterator), 1.0, 4517, 
4524, executeTransaction(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 4517, 
4525, insertIntoActionTable(java.lang.String), 1.0, 4517, 
4527, update(java.sql.Statement, java.lang.String, int), 1.0, 4517, 
4528, filterAction(freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.String, java.lang.String, java.lang.String, java.sql.SQLException), 1.0, 4517, 
4529, escapeQuotations(java.lang.String), 1.0, 4517, 
4530, deregisterFilter(), 0.0, 4517, 
4531, registerFilter(), 0.0, 4517, 
4532, setupTables(java.lang.String, java.lang.String, java.io.StringWriter), 1.0, 4517, 
4533, createTables(java.lang.String), 1.0, 4517, 
4534, signalEndOfSession(java.lang.String, java.lang.Exception), 0.0, 4517, 
4536, run(), 0.0, 4535, 
4540, VariableSizeCardLayout(), 0.0, 4539, 
4542, preferredLayoutSize(int, java.awt.Dimension, int, java.awt.Container, int, java.awt.Component, java.awt.Insets, int), 1.0, 4539, 
4545, translateKeyEvent(char, int, java.awt.event.KeyEvent, freemind.preferences.layout.KeyEventTranslator.Key, int, int, freemind.preferences.layout.KeyEventTranslator.Key), 1.0, 4543, 
4546, parseKey(int, int, java.lang.String, int, java.lang.String, int, java.lang.Exception), 1.0, 4543, 
4548, getSymbolicModifierName(int), 1.0, 4543, 
4549, modifiersToString(java.lang.StringBuffer, int), 1.0, 4543, 
4550, getModifierString(java.awt.event.InputEvent, java.lang.StringBuffer), 1.0, 4543, 
4553, hashCode(), 0.0, 4551, 
4554, equals(java.lang.Object, freemind.preferences.layout.KeyEventTranslator.Key), 1.0, 4551, 
4555, toString(), 0.0, 4551, 
4557, toString(java.lang.String, java.awt.event.KeyEvent), 1.0, 4556, 
4560, getShortcut(), 0.0, 4556, 
4561, isOK(), 0.0, 4556, 
4562, isManagingFocus(), 0.0, 4556, 
4563, getFocusTraversalKeysEnabled(), 0.0, 4556, 
4564, processKeyEvent(java.awt.event.KeyEvent), 1.0, 4556, 
4566, getSymbolicName(Field[], int, java.lang.String, java.lang.reflect.Field, int, java.lang.Exception), 1.0, 4556, 
4567, updateAssignedTo(freemind.preferences.layout.GrabKeyDialog.KeyBinding, java.lang.String, java.lang.String), 1.0, 4556, 
4568, getKeyBinding(freemind.preferences.layout.GrabKeyDialog.KeyBinding, java.lang.String, java.lang.String, java.util.Enumeration, java.lang.String), 1.0, 4556, 
4569, getText(java.lang.String), 1.0, 4556, 
4570, getModifierMask(), 0.0, 4556, 
4571, isMacOS(), 0.0, 4556, 
4573, getLength(), 0.0, 4572, 
4576, isManagingFocus(), 0.0, 4575, 
4577, getFocusTraversalKeysEnabled(), 0.0, 4575, 
4580, isAssigned(), 0.0, 4578, 
4582, getFocusTraversalKeysEnabled(), 0.0, 4581, 
4583, processKeyEvent(java.awt.event.KeyEvent, java.awt.event.KeyEvent, freemind.preferences.layout.KeyEventTranslator.Key, java.lang.StringBuffer, java.lang.String), 1.0, 4581, 
4586, actionPerformed(java.awt.event.ActionEvent), 1.0, 4585, 
4587, canClose(freemind.preferences.layout.GrabKeyDialog.KeyBinding, int, java.lang.String), 0.0, 4585, 
4591, setProperties(java.util.Iterator, freemind.common.PropertyBean, freemind.common.PropertyControl, java.lang.String, java.lang.String), 0.0, 4589, 
4592, getOptionProperties(java.util.Iterator, java.lang.String, freemind.common.PropertyControl, freemind.common.PropertyBean, java.util.Properties), 0.0, 4589, 
4593, buildPanel(com.jgoodies.forms.layout.FormLayout, com.jgoodies.forms.builder.DefaultFormBuilder, java.lang.String, java.awt.CardLayout, javax.swing.JPanel, javax.swing.JScrollPane, com.jgoodies.forms.layout.FormLayout, freemind.preferences.layout.OptionPanel.ChangeTabAction, com.jgoodies.forms.builder.DefaultFormBuilder, freemind.preferences.layout.OptionPanel.NewTabProperty, javax.swing.JSplitPane, javax.swing.JButton, java.util.Iterator, javax.swing.JButton, javax.swing.JButton, freemind.common.PropertyControl), 0.0, 4589, 
4594, getText(java.lang.String), 1.0, 4589, 
4595, checkConnectionToFreeMindMain(), 0.0, 4589, 
4597, getTabButton(java.lang.String), 1.0, 4589, 
4598, getAllButtons(), 0.0, 4589, 
4599, getControls(java.lang.String, freemind.modes.ModeController, String[], java.util.Vector, java.lang.String, java.util.Vector, freemind.preferences.FreemindPropertyContributor, java.util.Vector, java.lang.String, LookAndFeelInfo[], freemind.preferences.layout.OptionPanel.KeyProperty, java.util.Vector, java.util.Iterator, javax.swing.UIManager.LookAndFeelInfo, java.util.Iterator, java.lang.String, freemind.modes.mindmapmode.MindMapController, int, int), 0.0, 4589, 
4600, closeWindow(freemind.controller.actions.generated.instance.OptionPanelWindowConfigurationStorage), 0.0, 4589, 
4601, addContributor(freemind.preferences.FreemindPropertyContributor), 1.0, 4589, 
4602, removeContributor(freemind.preferences.FreemindPropertyContributor), 1.0, 4589, 
4604, writeProperties(java.util.Properties), 1.0, 4603, 
4606, actionPerformed(java.awt.event.ActionEvent), 1.0, 4605, 
4609, actionPerformed(java.awt.event.ActionEvent), 1.0, 4608, 
4613, actionPerformed(java.awt.event.ActionEvent, javax.swing.JButton, java.util.Iterator, java.util.Collection), 1.0, 4611, 
4615, NewTabProperty(java.lang.String), 1.0, 4614, 
4617, getDescription(), 0.0, 4614, 
4618, getLabel(), 0.0, 4614, 
4620, setEnabled(boolean), 1.0, 4614, 
4623, disableModifiers(), 0.0, 4621, 
4624, getDescription(), 0.0, 4621, 
4625, getLabel(), 0.0, 4621, 
4626, setValue(java.lang.String), 1.0, 4621, 
4627, getValue(), 0.0, 4621, 
4629, setEnabled(boolean), 1.0, 4621, 
4630, setLabelText(java.lang.String), 1.0, 4621, 
4631, setImageIcon(javax.swing.ImageIcon), 1.0, 4621, 
4633, actionPerformed(java.util.Vector, java.awt.event.ActionEvent, freemind.preferences.layout.GrabKeyDialog), 1.0, 4632, 
4636, getText(java.lang.String), 1.0, 4635, 
4639, processKeyEvent(int, char, java.awt.event.KeyEvent), 1.0, 4638, 
4640, numericKeypadKey(), 0.0, 4638, 
4644, addActionListener(java.awt.event.ActionListener), 1.0, 4642, 
4646, getText(), 0.0, 4642, 
4647, setText(java.lang.String), 1.0, 4642, 
4649, actionPerformed(java.awt.event.ActionEvent), 1.0, 4648, 
4653, canSelect(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 4651, 
4654, calculateIndex(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 4651, 
4655, getPosition(int, javax.swing.JLabel), 1.0, 4651, 
4656, getPositionFromIndex(int), 1.0, 4651, 
4657, setSelectedPosition(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 4651, 
4658, getSelectedPosition(), 0.0, 4651, 
4659, select(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position, int, freemind.modes.IconInformation, java.lang.String), 1.0, 4651, 
4660, unhighlight(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 4651, 
4661, highlight(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 1.0, 4651, 
4662, cursorLeft(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 4651, 
4663, cursorRight(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 4651, 
4664, cursorUp(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 4651, 
4665, cursorDown(freemind.modes.common.dialogs.IconSelectionPopupDialog.Position), 0.0, 4651, 
4666, addIcon(int), 1.0, 4651, 
4667, getResult(), 0.0, 4651, 
4668, getModifiers(int), 0.0, 4651, 
4669, keyPressed(int, java.awt.event.KeyEvent), 1.0, 4651, 
4670, getKeyStrokeForEvent(java.awt.event.KeyEvent), 1.0, 4651, 
4671, findIndexByKeyEvent(java.awt.event.KeyEvent, int, javax.swing.KeyStroke, freemind.modes.IconInformation), 1.0, 4651, 
4672, close(), 0.0, 4651, 
4673, keyReleased(java.awt.event.KeyEvent), 1.0, 4651, 
4674, keyTyped(java.awt.event.KeyEvent), 1.0, 4651, 
4675, mouseClicked(java.awt.event.MouseEvent), 1.0, 4651, 
4676, mouseEntered(java.awt.event.MouseEvent), 1.0, 4651, 
4677, mouseExited(java.awt.event.MouseEvent), 1.0, 4651, 
4678, mousePressed(java.awt.event.MouseEvent), 1.0, 4651, 
4679, mouseReleased(java.awt.event.MouseEvent), 1.0, 4651, 
4681, windowClosing(java.awt.event.WindowEvent), 1.0, 4680, 
4684, getX(), 0.0, 4682, 
4685, getY(), 0.0, 4682, 
4686, toString(), 0.0, 4682, 
4688, EnterPasswordDialog(), 0.0, 4687, 
4690, initialize(), 0.0, 4687, 
4691, close(), 0.0, 4687, 
4692, okPressed(), 0.0, 4687, 
4693, checkEqualAndMinimumSize(char[], char[], int), 0.0, 4687, 
4694, cancelPressed(), 0.0, 4687, 
4695, getJContentPane(java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints, java.awt.GridBagConstraints), 0.0, 4687, 
4696, getJPasswordField(), 0.0, 4687, 
4697, getJPasswordField1(), 0.0, 4687, 
4698, getJOKButton(), 0.0, 4687, 
4699, getJCancelButton(), 0.0, 4687, 
4700, getResult(), 0.0, 4687, 
4701, getPassword(), 0.0, 4687, 
4703, windowClosing(java.awt.event.WindowEvent), 1.0, 4702, 
4705, actionPerformed(java.awt.event.ActionEvent), 1.0, 4704, 
4707, actionPerformed(java.awt.event.ActionEvent), 1.0, 4706, 
4709, actionPerformed(java.awt.event.ActionEvent), 1.0, 4708, 
4712, updateSelectionMethod(), 0.0, 4711, 
4713, CommonNodeMouseMotionListener(freemind.modes.ModeController), 1.0, 4711, 
4714, mouseMoved(freemind.view.mindmapview.MainView, boolean, java.awt.event.MouseEvent), 1.0, 4711, 
4715, mouseDragged(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView), 1.0, 4711, 
4716, mouseClicked(java.awt.event.MouseEvent), 1.0, 4711, 
4717, mouseEntered(java.awt.event.MouseEvent), 1.0, 4711, 
4718, mousePressed(java.awt.event.MouseEvent), 1.0, 4711, 
4719, mouseExited(java.awt.event.MouseEvent), 1.0, 4711, 
4720, mouseReleased(java.awt.event.MouseEvent), 1.0, 4711, 
4721, getControlRegion(int, java.awt.geom.Point2D), 1.0, 4711, 
4722, createTimer(java.awt.event.MouseEvent), 1.0, 4711, 
4723, stopTimerForDelayedSelection(), 0.0, 4711, 
4726, run(), 0.0, 4724, 
4728, run(), 0.0, 4727, 
4731, CommonMouseMotionManager(freemind.modes.ModeController), 1.0, 4730, 
4732, mouseDragged(java.awt.event.MouseEvent, freemind.view.mindmapview.MapView, java.awt.Rectangle, boolean), 1.0, 4730, 
4733, mousePressed(java.awt.event.MouseEvent), 1.0, 4730, 
4734, mouseReleased(java.awt.event.MouseEvent), 1.0, 4730, 
4736, MindMapMouseWheelEventHandler(freemind.modes.ControllerAdapter), 1.0, 4735, 
4737, mouseWheelMoved(float, float, boolean, java.awt.event.MouseWheelEvent, freemind.modes.mindmapmode.actions.MindMapActions.MouseWheelEventHandler, float, java.util.Set, freemind.view.mindmapview.MapView, java.util.Iterator, freemind.modes.ControllerAdapter), 1.0, 4735, 
4743, getDestinationLabel(), 0.0, 4742, 
4744, getReferenceText(), 0.0, 4742, 
4745, getTarget(), 0.0, 4742, 
4746, getSource(), 0.0, 4742, 
4747, getUniqueID(), 0.0, 4742, 
4749, init(freemind.controller.Controller), 1.0, 4748, 
4750, toString(), 0.0, 4748, 
4751, activate(), 0.0, 4748, 
4752, restore(java.lang.String), 1.0, 4748, 
4753, createModeController(), 0.0, 4748, 
4754, getDefaultModeController(), 0.0, 4748, 
4755, getController(), 0.0, 4748, 
4756, toLocalizedString(), 0.0, 4748, 
4759, getModeController(), 0.0, 4757, 
4760, save(java.io.File), 1.0, 4757, 
4761, load(java.net.URL), 1.0, 4757, 
4762, load(java.io.File, freemind.main.XMLParseException), 1.0, 4757, 
4763, tryToLock(java.io.File), 1.0, 4757, 
4764, destroy(), 0.0, 4757, 
4765, removeNodes(freemind.modes.MindMapNode, freemind.extensions.PermanentNodeHook, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 4757, 
4766, getFrame(), 0.0, 4757, 
4767, isSaved(), 0.0, 4757, 
4768, isReadOnly(), 0.0, 4757, 
4769, setSaved(boolean, boolean), 1.0, 4757, 
4770, getNumberOfChangesSinceLastSave(), 0.0, 4757, 
4771, getRootNode(), 0.0, 4757, 
4772, setRoot(freemind.modes.MindMapNode), 1.0, 4757, 
4773, getFile(), 0.0, 4757, 
4774, getURL(), 0.0, 4757, 
4775, setFile(java.io.File), 1.0, 4757, 
4776, getText(java.lang.String), 1.0, 4757, 
4777, getAsPlainText(java.util.List), 1.0, 4757, 
4778, getAsRTF(java.util.List), 1.0, 4757, 
4779, getAsHTML(java.util.List), 1.0, 4757, 
4780, getRestoreable(), 0.0, 4757, 
4781, getLinkRegistry(), 0.0, 4757, 
4782, nodeChanged(javax.swing.tree.TreeNode), 1.0, 4757, 
4783, nodeRefresh(javax.swing.tree.TreeNode), 1.0, 4757, 
4784, nodeChangedInternal(javax.swing.tree.TreeNode), 1.0, 4757, 
4793, getRegistry(), 0.0, 4757, 
4794, getFilter(), 0.0, 4757, 
4795, setFilter(freemind.controller.filter.Filter), 1.0, 4757, 
4797, NodeViewEvent(freemind.modes.MindMapNode), 1.0, 4796, 
4799, getRootNode(), 0.0, 4798, 
4800, getModeController(), 0.0, 4798, 
4801, nodeChanged(javax.swing.tree.TreeNode), 1.0, 4798, 
4802, nodeRefresh(javax.swing.tree.TreeNode), 1.0, 4798, 
4803, getAsPlainText(java.util.List), 1.0, 4798, 
4804, getAsRTF(java.util.List), 1.0, 4798, 
4805, getAsHTML(java.util.List), 1.0, 4798, 
4806, getFile(), 0.0, 4798, 
4807, getURL(), 0.0, 4798, 
4808, getXml(java.io.Writer), 1.0, 4798, 
4809, getFilteredXml(java.io.Writer), 1.0, 4798, 
4810, getRestoreable(), 0.0, 4798, 
4811, getPathToRoot(javax.swing.tree.TreeNode), 1.0, 4798, 
4812, getLinkRegistry(), 0.0, 4798, 
4813, destroy(), 0.0, 4798, 
4814, isReadOnly(), 0.0, 4798, 
4815, isSaved(), 0.0, 4798, 
4816, getRegistry(), 0.0, 4798, 
4817, getFilter(), 0.0, 4798, 
4818, setFilter(freemind.controller.filter.Filter), 1.0, 4798, 
4819, nodeStructureChanged(javax.swing.tree.TreeNode), 1.0, 4798, 
4820, setSaved(boolean), 1.0, 4798, 
4822, XMLElementAdapter(freemind.modes.ModeController), 1.0, 4821, 
4824, createAnotherElement(), 0.0, 4821, 
4829, createEncryptedNode(java.lang.String), 1.0, 4821, 
4830, getFrame(), 0.0, 4821, 
4831, getUserObject(), 0.0, 4821, 
4832, setUserObject(java.lang.Object), 1.0, 4821, 
4833, getMapChild(), 0.0, 4821, 
4834, setName(java.lang.String), 1.0, 4821, 
4835, addChild(java.lang.String, freemind.main.XMLElement, java.lang.Object, freemind.extensions.PermanentNodeHook, freemind.modes.attributes.Attribute, java.lang.String, freemind.modes.ArrowLinkAdapter, freemind.modes.NodeAdapter, freemind.modes.attributes.AttributeRegistry, freemind.modes.attributes.AttributeTableLayoutModel, freemind.main.XMLElement, freemind.modes.EdgeAdapter, freemind.modes.CloudAdapter, java.lang.Exception), 1.0, 4821, 
4838, copyAttributesToNode(freemind.modes.NodeAdapter, java.util.Iterator, java.lang.String), 1.0, 4821, 
4839, completeElement(), 0.0, 4821, 
4840, processUnfinishedLinks(java.lang.String, freemind.modes.NodeAdapter, freemind.modes.MindMapLinkRegistry, java.util.Iterator, int, java.lang.String, java.lang.String, freemind.modes.ArrowLinkAdapter), 1.0, 4821, 
4842, getMap(), 0.0, 4821, 
4843, getIDToTarget(), 0.0, 4821, 
4844, setIDToTarget(java.util.HashMap), 1.0, 4821, 
4846, loadPatterns(java.io.File), 1.0, 4845, 
4847, loadPatterns(java.io.Reader, freemind.controller.actions.generated.instance.Patterns), 1.0, 4845, 
4849, createPatternFromNode(freemind.modes.MindMapNode, freemind.controller.actions.generated.instance.PatternEdgeWidth, freemind.controller.actions.generated.instance.PatternNodeFontSize, freemind.controller.actions.generated.instance.PatternIcon, freemind.controller.actions.generated.instance.PatternNodeFontBold, freemind.controller.actions.generated.instance.Pattern, freemind.controller.actions.generated.instance.PatternNodeFontItalic), 1.0, 4845, 
4852, addSeparatorIfNecessary(java.lang.String), 1.0, 4845, 
4853, getPatternFromString(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Pattern), 1.0, 4845, 
4854, getPatternsFromString(java.lang.String, java.lang.String, freemind.controller.actions.generated.instance.Patterns), 1.0, 4845, 
4859, ControllerAdapter(freemind.modes.Mode), 1.0, 4858, 
4860, setModel(freemind.modes.MapAdapter), 1.0, 4858, 
4862, createXMLElement(), 0.0, 4858, 
4863, newModel(freemind.modes.ModeController), 1.0, 4858, 
4864, getFileFilter(), 0.0, 4858, 
4865, nodeChanged(freemind.modes.MindMapNode), 1.0, 4858, 
4866, nodeRefresh(freemind.modes.MindMapNode), 1.0, 4858, 
4868, refreshMap(freemind.modes.MindMapNode), 0.0, 4858, 
4869, refreshMapFrom(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 4858, 
4870, nodeStructureChanged(freemind.modes.MindMapNode), 1.0, 4858, 
4871, updateNode(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.ModeController.NodeSelectionListener), 1.0, 4858, 
4872, onSelectHook(freemind.view.mindmapview.NodeView, java.util.Iterator, java.util.Iterator, freemind.modes.ModeController.NodeSelectionListener, freemind.extensions.PermanentNodeHook), 1.0, 4858, 
4873, onDeselectHook(freemind.view.mindmapview.NodeView, freemind.extensions.PermanentNodeHook, java.util.Iterator, freemind.modes.ModeController.NodeSelectionListener, java.util.HashSet, java.util.Iterator, java.lang.RuntimeException), 1.0, 4858, 
4874, onViewCreatedHook(freemind.view.mindmapview.NodeView, java.util.Iterator, freemind.extensions.PermanentNodeHook), 1.0, 4858, 
4875, onViewRemovedHook(freemind.view.mindmapview.NodeView, java.util.Iterator, freemind.extensions.PermanentNodeHook), 1.0, 4858, 
4876, registerNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 4858, 
4877, deregisterNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 4858, 
4878, registerNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 4858, 
4879, deregisterNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 4858, 
4880, getNodeLifetimeListeners(), 0.0, 4858, 
4881, fireNodePreDeleteEvent(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.ModeController.NodeLifetimeListener), 1.0, 4858, 
4883, fireRecursiveNodeCreateEvent(freemind.modes.MindMapNode, java.util.Iterator, java.util.Iterator, freemind.modes.NodeAdapter, freemind.modes.ModeController.NodeLifetimeListener), 1.0, 4858, 
4884, firePreSaveEvent(freemind.modes.MindMapNode, java.util.HashSet, freemind.modes.ModeController.NodeSelectionListener, java.util.Iterator), 1.0, 4858, 
4885, getText(java.lang.String), 1.0, 4858, 
4886, newMap(freemind.modes.ModeController, freemind.modes.MapAdapter), 0.0, 4858, 
4887, newMap(freemind.modes.MindMap), 1.0, 4858, 
4888, load(java.net.URL, freemind.modes.ModeController, freemind.modes.MapAdapter), 1.0, 4858, 
4889, load(java.io.File, freemind.modes.ModeController, freemind.modes.MapAdapter), 1.0, 4858, 
4890, save(), 0.0, 4858, 
4891, loadURL(java.net.URL, java.lang.String, java.lang.String, java.net.URL, freemind.modes.ModeController, java.lang.String, java.lang.String, java.lang.String, freemind.controller.MapModuleManager, java.net.MalformedURLException, java.lang.Exception), 1.0, 4858, 
4894, getSelecteds(freemind.view.mindmapview.NodeView, java.util.ListIterator, java.util.LinkedList), 0.0, 4858, 
4895, select(freemind.view.mindmapview.NodeView), 1.0, 4858, 
4896, getSelectedsByDepth(java.util.List), 0.0, 4858, 
4897, sortNodesByDepth(java.util.List), 1.0, 4858, 
4898, save(java.io.File), 1.0, 4858, 
4904, open(File[], java.io.File, javax.swing.JFileChooser, int, int, java.lang.Exception), 0.0, 4858, 
4905, getFileChooser(java.io.File, javax.swing.filechooser.FileFilter, javax.swing.JFileChooser), 1.0, 4858, 
4906, getFileChooser(), 0.0, 4858, 
4907, getMapsParentFile(), 0.0, 4858, 
4908, handleLoadingException(java.lang.Exception, java.lang.String, int), 1.0, 4858, 
4909, saveAs(boolean, java.io.File, javax.swing.JFileChooser, int, java.lang.String, int, java.lang.String, java.lang.Exception), 0.0, 4858, 
4910, getFileNameProposal(), 0.0, 4858, 
4912, setVisible(boolean, freemind.view.mindmapview.NodeView), 1.0, 4858, 
4913, setAllActions(boolean), 1.0, 4858, 
4914, showPopupMenu(java.awt.event.MouseEvent, javax.swing.JPopupMenu), 1.0, 4858, 
4915, getPopupForModel(java.lang.Object), 1.0, 4858, 
4916, getLeftToolBar(), 0.0, 4858, 
4917, getModeToolBar(), 0.0, 4858, 
4918, isBlocked(), 0.0, 4858, 
4919, setBlocked(boolean), 1.0, 4858, 
4920, getMode(), 0.0, 4858, 
4921, setMode(freemind.modes.Mode), 1.0, 4858, 
4922, getMap(), 0.0, 4858, 
4923, getRootNode(), 0.0, 4858, 
4924, getResource(java.lang.String), 1.0, 4858, 
4925, getController(), 0.0, 4858, 
4926, getFrame(), 0.0, 4858, 
4927, getModeController(), 0.0, 4858, 
4928, getModel(), 0.0, 4858, 
4929, getView(), 0.0, 4858, 
4930, updateMapModuleName(), 0.0, 4858, 
4931, getNodeFromID(java.lang.String, freemind.modes.NodeAdapter), 1.0, 4858, 
4932, getNodeID(freemind.modes.MindMapNode), 1.0, 4858, 
4933, getSelected(freemind.view.mindmapview.NodeView), 0.0, 4858, 
4934, getSelectedView(), 0.0, 4858, 
4936, copy(), 0.0, 4858, 
4937, copySingle(java.util.ArrayList), 0.0, 4858, 
4940, getSelectionColor(), 0.0, 4858, 
4941, updatePopupMenu(freemind.controller.StructuredMenuHolder), 1.0, 4858, 
4942, shutdownController(), 0.0, 4858, 
4943, startupController(freemind.modes.ControllerAdapter.FileOpener, java.awt.dnd.DropTarget), 0.0, 4858, 
4945, getLinkShortText(freemind.modes.MindMapNode, java.lang.String, freemind.modes.MindMapNode, java.lang.Exception), 1.0, 4858, 
4946, displayNode(freemind.modes.MindMapNode), 1.0, 4858, 
4948, centerNode(freemind.view.mindmapview.NodeView), 1.0, 4858, 
4949, centerNode(freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode), 1.0, 4858, 
4950, getLastCurrentDir(), 0.0, 4858, 
4951, setLastCurrentDir(java.io.File), 1.0, 4858, 
4952, getAttributeController(), 0.0, 4858, 
4953, getNodeView(freemind.modes.MindMapNode), 1.0, 4858, 
4956, loadURL(java.lang.String), 0.0, 4858, 
4957, getRegisteredMouseWheelEventHandler(), 0.0, 4858, 
4959, nodesDepthComparator(), 0.0, 4958, 
4962, popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent), 1.0, 4961, 
4963, popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent), 1.0, 4961, 
4964, popupMenuCanceled(javax.swing.event.PopupMenuEvent), 1.0, 4961, 
4967, OpenAction(freemind.modes.ControllerAdapter), 1.0, 4966, 
4968, actionPerformed(java.awt.event.ActionEvent), 1.0, 4966, 
4970, SaveAction(freemind.modes.ControllerAdapter), 1.0, 4969, 
4971, actionPerformed(boolean, java.awt.event.ActionEvent, java.lang.String), 1.0, 4969, 
4973, SaveAsAction(freemind.modes.ControllerAdapter), 1.0, 4972, 
4974, actionPerformed(java.awt.event.ActionEvent), 1.0, 4972, 
4976, EditAttributesAction(), 0.0, 4975, 
4977, actionPerformed(boolean, java.awt.event.ActionEvent, java.awt.Component, freemind.view.mindmapview.attributeview.AttributeView), 1.0, 4975, 
4979, isDragAcceptable(DataFlavor[], java.awt.dnd.DropTargetDragEvent, int), 1.0, 4978, 
4980, isDropAcceptable(DataFlavor[], java.awt.dnd.DropTargetDropEvent, int), 1.0, 4978, 
4981, drop(java.awt.dnd.DropTargetDropEvent, java.util.Iterator, java.lang.Object, java.io.File, java.lang.Exception), 1.0, 4978, 
4982, dragEnter(java.awt.dnd.DropTargetDragEvent), 1.0, 4978, 
4983, dragOver(java.awt.dnd.DropTargetDragEvent), 1.0, 4978, 
4984, dragExit(java.awt.dnd.DropTargetEvent), 1.0, 4978, 
4985, dragScroll(java.awt.dnd.DropTargetDragEvent), 1.0, 4978, 
4986, dropActionChanged(java.awt.dnd.DropTargetDragEvent), 1.0, 4978, 
4990, addIcon(freemind.modes.MindIcon), 1.0, 4988, 
4991, getIcons(), 0.0, 4988, 
4992, getAttributes(), 0.0, 4988, 
4994, registryAttributes(freemind.modes.MindMapNode, int, freemind.modes.attributes.NodeAttributeTableModel), 1.0, 4988, 
4995, registryNodeIcons(freemind.modes.MindMapNode, java.util.Iterator, freemind.modes.MindIcon, java.util.List), 1.0, 4988, 
4996, getMap(), 0.0, 4988, 
4997, getModeController(), 0.0, 4988, 
4998, save(java.io.Writer), 1.0, 4988, 
5001, updateStandards(java.lang.String, java.lang.String), 0.0, 4999, 
5002, getFrame(), 0.0, 4999, 
5003, getColor(), 0.0, 4999, 
5004, setColor(java.awt.Color), 1.0, 4999, 
5005, getWidth(), 0.0, 4999, 
5006, getRealWidth(), 0.0, 4999, 
5007, setWidth(int), 1.0, 4999, 
5008, getStyle(), 0.0, 4999, 
5009, setStyle(java.lang.String), 1.0, 4999, 
5010, toString(), 0.0, 4999, 
5011, setTarget(freemind.modes.MindMapNode), 1.0, 4999, 
5012, getTarget(), 0.0, 4999, 
5013, clone(freemind.modes.LineAdapter, java.lang.CloneNotSupportedException), 0.0, 4999, 
5014, setStandardColor(java.awt.Color), 1.0, 4999, 
5015, getStandardColor(), 0.0, 4999, 
5016, setStandardStyle(java.lang.String), 1.0, 4999, 
5017, getStandardStyle(), 0.0, 4999, 
5018, getStandardStylePropertyString(), 0.0, 4999, 
5019, getStandardColorPropertyString(), 0.0, 4999, 
5021, getStartInclination(), 0.0, 5020, 
5022, getEndInclination(), 0.0, 5020, 
5023, setStartInclination(java.awt.Point), 1.0, 5020, 
5024, setEndInclination(java.awt.Point), 1.0, 5020, 
5025, getStartArrow(), 0.0, 5020, 
5026, getEndArrow(), 0.0, 5020, 
5028, showControlPoints(boolean), 1.0, 5020, 
5029, getShowControlPointsFlag(), 0.0, 5020, 
5030, save(), 0.0, 5020, 
5032, ModesCreator(freemind.controller.Controller), 1.0, 5031, 
5033, getAllModes(java.lang.String, java.lang.String, java.lang.String, java.util.StringTokenizer), 0.0, 5031, 
5034, getMode(freemind.modes.Mode, java.lang.String, java.lang.String, java.lang.Exception), 1.0, 5031, 
5036, getExteriorColor(), 0.0, 5035, 
5037, getIterativeLevel(), 0.0, 5035, 
5038, changeIterativeLevel(int), 1.0, 5035, 
5039, save(), 0.0, 5035, 
5043, setMap(freemind.modes.MindMap), 1.0, 5040, 
5044, getText(java.lang.String), 0.0, 5040, 
5045, setText(java.lang.String), 1.0, 5040, 
5046, getXmlText(), 0.0, 5040, 
5047, setXmlText(java.lang.String), 1.0, 5040, 
5048, makeValidXml(java.lang.String), 1.0, 5040, 
5049, getXmlNoteText(), 0.0, 5040, 
5050, getNoteText(), 0.0, 5040, 
5051, setXmlNoteText(java.lang.String), 1.0, 5040, 
5052, setNoteText(java.lang.String), 1.0, 5040, 
5053, getPlainTextContent(), 0.0, 5040, 
5054, getLink(), 0.0, 5040, 
5055, getShortText(java.lang.String, freemind.modes.ModeController), 1.0, 5040, 
5056, setLink(java.lang.String), 1.0, 5040, 
5057, getFilterInfo(), 0.0, 5040, 
5058, getFrame(), 0.0, 5040, 
5059, getViewers(), 0.0, 5040, 
5060, addViewer(freemind.view.mindmapview.NodeView), 1.0, 5040, 
5061, removeViewer(freemind.view.mindmapview.NodeView), 1.0, 5040, 
5062, getPath(javax.swing.tree.TreePath, java.util.Vector), 0.0, 5040, 
5063, getEdge(), 0.0, 5040, 
5064, setEdge(freemind.modes.MindMapEdge), 1.0, 5040, 
5065, getCloud(), 0.0, 5040, 
5066, setCloud(freemind.modes.MindMapCloud), 1.0, 5040, 
5067, changeChildCloudIterativeLevels(int, java.util.ListIterator, freemind.modes.MindMapCloud, freemind.modes.NodeAdapter), 1.0, 5040, 
5068, getStyle(java.lang.String, java.lang.String), 0.0, 5040, 
5069, hasStyle(), 0.0, 5040, 
5070, getColor(), 0.0, 5040, 
5071, setStyle(java.lang.String), 1.0, 5040, 
5072, setColor(java.awt.Color), 1.0, 5040, 
5073, getBackgroundColor(), 0.0, 5040, 
5074, setBackgroundColor(java.awt.Color), 1.0, 5040, 
5075, establishOwnFont(), 0.0, 5040, 
5076, setBold(boolean), 1.0, 5040, 
5077, toggleBold(), 0.0, 5040, 
5078, setItalic(boolean), 1.0, 5040, 
5079, toggleItalic(), 0.0, 5040, 
5080, setUnderlined(boolean), 1.0, 5040, 
5081, setFont(java.awt.Font), 1.0, 5040, 
5082, getParentNode(), 0.0, 5040, 
5083, setFontSize(int), 1.0, 5040, 
5084, getFont(), 0.0, 5040, 
5085, getFontSize(), 0.0, 5040, 
5086, getFontFamilyName(), 0.0, 5040, 
5087, isBold(), 0.0, 5040, 
5088, isItalic(), 0.0, 5040, 
5089, isUnderlined(), 0.0, 5040, 
5090, isFolded(), 0.0, 5040, 
5091, getIcons(), 0.0, 5040, 
5092, getMap(), 0.0, 5040, 
5094, removeIcon(int, int), 1.0, 5040, 
5095, hasFoldedStrictDescendant(java.util.ListIterator, freemind.modes.NodeAdapter), 0.0, 5040, 
5096, setFolded(boolean), 1.0, 5040, 
5097, shallowCopy(java.lang.String, freemind.modes.MindMapNode, java.io.StringWriter, java.util.HashMap, java.lang.Exception), 0.0, 5040, 
5098, toString(), 0.0, 5040, 
5099, isDescendantOf(freemind.modes.MindMapNode), 1.0, 5040, 
5100, isRoot(), 0.0, 5040, 
5101, hasChildren(), 0.0, 5040, 
5102, getChildPosition(freemind.modes.MindMapNode, int, java.util.ListIterator), 1.0, 5040, 
5103, childrenUnfolded(), 0.0, 5040, 
5104, childrenFolded(), 0.0, 5040, 
5105, getChildren(), 0.0, 5040, 
5106, children(), 0.0, 5040, 
5107, getAllowsChildren(), 0.0, 5040, 
5108, getChildAt(int), 1.0, 5040, 
5109, getChildCount(), 0.0, 5040, 
5110, getIndex(javax.swing.tree.TreeNode), 1.0, 5040, 
5111, getParent(), 0.0, 5040, 
5112, isLeaf(), 0.0, 5040, 
5113, isLeft(), 0.0, 5040, 
5114, setLeft(freemind.modes.NodeAdapter, boolean, int), 1.0, 5040, 
5115, isNewChildLeft(int, int), 0.0, 5040, 
5117, remove(int, javax.swing.tree.MutableTreeNode), 1.0, 5040, 
5118, remove(javax.swing.tree.MutableTreeNode, int), 1.0, 5040, 
5121, removeFromParent(), 0.0, 5040, 
5122, setParent(javax.swing.tree.MutableTreeNode), 1.0, 5040, 
5123, setParent(freemind.modes.MindMapNode), 1.0, 5040, 
5124, setUserObject(java.lang.Object), 1.0, 5040, 
5125, addToPathVector(java.util.Vector), 1.0, 5040, 
5126, getNodeLevel(freemind.modes.MindMapNode, int), 0.0, 5040, 
5127, addHook(freemind.extensions.PermanentNodeHook), 1.0, 5040, 
5128, invokeHook(freemind.extensions.NodeHook, java.lang.Exception), 1.0, 5040, 
5129, createActivatedHooks(), 0.0, 5040, 
5130, createToolTip(), 0.0, 5040, 
5131, createHooks(), 0.0, 5040, 
5132, createStateIcons(), 0.0, 5040, 
5133, createIcons(), 0.0, 5040, 
5134, getHooks(), 0.0, 5040, 
5135, getActivatedHooks(), 0.0, 5040, 
5136, removeHook(freemind.extensions.PermanentNodeHook), 1.0, 5040, 
5137, getToolTip(), 0.0, 5040, 
5139, getObjectId(freemind.modes.ModeController), 1.0, 5040, 
5141, getModeController(), 0.0, 5040, 
5143, getShiftY(), 0.0, 5040, 
5144, hasOneVisibleChild(int, java.util.ListIterator), 0.0, 5040, 
5145, calcShiftY(java.lang.NullPointerException), 0.0, 5040, 
5146, setShiftY(int), 1.0, 5040, 
5147, setAdditionalInfo(java.lang.String), 1.0, 5040, 
5148, getAdditionalInfo(), 0.0, 5040, 
5150, getStateIcons(), 0.0, 5040, 
5151, getHistoryInformation(), 0.0, 5040, 
5152, setHistoryInformation(freemind.modes.HistoryInformation), 1.0, 5040, 
5153, getHGap(), 0.0, 5040, 
5154, setHGap(int), 1.0, 5040, 
5155, getVGap(), 0.0, 5040, 
5156, setVGap(int), 1.0, 5040, 
5157, isVisible(freemind.controller.filter.Filter), 0.0, 5040, 
5158, getAttributes(), 0.0, 5040, 
5159, createAttributeTableModel(java.util.Iterator, freemind.view.mindmapview.NodeView), 0.0, 5040, 
5160, getAttributeTableLength(), 0.0, 5040, 
5161, getAttribute(int), 1.0, 5040, 
5162, getAttributeKeyList(java.util.Vector, java.util.Iterator, freemind.modes.attributes.Attribute), 0.0, 5040, 
5163, getAttributePosition(java.lang.String, int, java.util.Iterator, freemind.modes.attributes.Attribute), 1.0, 5040, 
5164, getAttribute(java.lang.String, int), 1.0, 5040, 
5166, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 5040, 
5167, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 5040, 
5168, getListeners(), 0.0, 5040, 
5169, acceptViewVisitor(freemind.view.mindmapview.NodeViewVisitor, java.util.Iterator), 1.0, 5040, 
5175, getColor(), 0.0, 5173, 
5176, getRealColor(), 0.0, 5173, 
5177, getWidth(), 0.0, 5173, 
5178, getRealWidth(), 0.0, 5173, 
5179, setWidth(int), 1.0, 5173, 
5180, getStyle(), 0.0, 5173, 
5181, hasStyle(), 0.0, 5173, 
5182, getSource(), 0.0, 5173, 
5183, save(freemind.main.XMLElement), 0.0, 5173, 
5184, getStandardColor(), 0.0, 5173, 
5185, setStandardColor(java.awt.Color), 1.0, 5173, 
5186, getStandardStyle(), 0.0, 5173, 
5187, setStandardStyle(java.lang.String), 1.0, 5173, 
5188, getStandardColorPropertyString(), 0.0, 5173, 
5189, getStandardStylePropertyString(), 0.0, 5173, 
5194, getText(), 0.0, 5193, 
5195, setText(java.lang.String), 1.0, 5193, 
5196, getXmlText(), 0.0, 5193, 
5197, setXmlText(java.lang.String), 1.0, 5193, 
5198, getXmlNoteText(), 0.0, 5193, 
5199, setXmlNoteText(java.lang.String), 1.0, 5193, 
5200, getNoteText(), 0.0, 5193, 
5201, setNoteText(java.lang.String), 1.0, 5193, 
5202, getObjectId(freemind.modes.ModeController), 1.0, 5193, 
5203, childrenFolded(), 0.0, 5193, 
5204, childrenUnfolded(), 0.0, 5193, 
5205, getChildren(), 0.0, 5193, 
5206, hasChildren(), 0.0, 5193, 
5207, getFilterInfo(), 0.0, 5193, 
5208, getChildPosition(freemind.modes.MindMapNode), 1.0, 5193, 
5209, getNodeLevel(), 0.0, 5193, 
5210, getLink(), 0.0, 5193, 
5211, getShortText(freemind.modes.ModeController), 1.0, 5193, 
5212, getEdge(), 0.0, 5193, 
5213, getColor(), 0.0, 5193, 
5214, getStyle(), 0.0, 5193, 
5215, setStyle(java.lang.String), 1.0, 5193, 
5216, hasStyle(), 0.0, 5193, 
5217, getParentNode(), 0.0, 5193, 
5218, isBold(), 0.0, 5193, 
5219, isItalic(), 0.0, 5193, 
5220, isUnderlined(), 0.0, 5193, 
5221, getFont(), 0.0, 5193, 
5222, getFontSize(), 0.0, 5193, 
5223, getFontFamilyName(), 0.0, 5193, 
5224, getViewers(), 0.0, 5193, 
5225, addViewer(freemind.view.mindmapview.NodeView), 1.0, 5193, 
5226, removeViewer(freemind.view.mindmapview.NodeView), 1.0, 5193, 
5227, toString(), 0.0, 5193, 
5228, getPlainTextContent(), 0.0, 5193, 
5229, getPath(), 0.0, 5193, 
5230, isDescendantOf(freemind.modes.MindMapNode), 1.0, 5193, 
5231, isRoot(), 0.0, 5193, 
5232, isFolded(), 0.0, 5193, 
5233, isLeft(), 0.0, 5193, 
5234, setLeft(boolean), 1.0, 5193, 
5235, setFolded(boolean), 1.0, 5193, 
5236, setFont(java.awt.Font), 1.0, 5193, 
5237, setShiftY(int), 1.0, 5193, 
5238, getShiftY(), 0.0, 5193, 
5239, calcShiftY(), 0.0, 5193, 
5240, setVGap(int), 1.0, 5193, 
5241, getVGap(), 0.0, 5193, 
5242, setHGap(int), 1.0, 5193, 
5243, getHGap(), 0.0, 5193, 
5244, setLink(java.lang.String), 1.0, 5193, 
5245, setFontSize(int), 1.0, 5193, 
5246, setColor(java.awt.Color), 1.0, 5193, 
5247, getIcons(), 0.0, 5193, 
5249, removeIcon(int), 1.0, 5193, 
5250, getCloud(), 0.0, 5193, 
5251, setCloud(freemind.modes.MindMapCloud), 1.0, 5193, 
5252, getBackgroundColor(), 0.0, 5193, 
5253, setBackgroundColor(java.awt.Color), 1.0, 5193, 
5254, getHooks(), 0.0, 5193, 
5255, getActivatedHooks(), 0.0, 5193, 
5256, addHook(freemind.extensions.PermanentNodeHook), 1.0, 5193, 
5257, invokeHook(freemind.extensions.NodeHook), 1.0, 5193, 
5258, removeHook(freemind.extensions.PermanentNodeHook), 1.0, 5193, 
5260, getToolTip(), 0.0, 5193, 
5261, setAdditionalInfo(java.lang.String), 1.0, 5193, 
5262, getAdditionalInfo(), 0.0, 5193, 
5263, shallowCopy(), 0.0, 5193, 
5265, getStateIcons(), 0.0, 5193, 
5267, getHistoryInformation(), 0.0, 5193, 
5268, setHistoryInformation(freemind.modes.HistoryInformation), 1.0, 5193, 
5269, isVisible(), 0.0, 5193, 
5270, hasOneVisibleChild(), 0.0, 5193, 
5271, getMap(), 0.0, 5193, 
5272, getAttributes(), 0.0, 5193, 
5273, createAttributeTableModel(), 0.0, 5193, 
5274, getAttributeKeyList(), 0.0, 5193, 
5275, getAttributeTableLength(), 0.0, 5193, 
5276, getAttribute(int), 1.0, 5193, 
5277, getAttribute(java.lang.String), 1.0, 5193, 
5278, getAttributePosition(java.lang.String), 1.0, 5193, 
5280, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 5193, 
5281, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 5193, 
5282, acceptViewVisitor(freemind.view.mindmapview.NodeViewVisitor), 1.0, 5193, 
5283, getListeners(), 0.0, 5193, 
5284, isNewChildLeft(), 0.0, 5193, 
5285, isWriteable(), 0.0, 5193, 
5287, LinkRegistryAdapter(), 0.0, 5286, 
5288, generateUniqueID(java.lang.String), 1.0, 5286, 
5289, generateUniqueLinkID(java.lang.String), 1.0, 5286, 
5291, registerLinkTarget(freemind.modes.MindMapNode), 1.0, 5286, 
5293, _registerLinkTarget(freemind.modes.MindMapNode), 1.0, 5286, 
5295, getState(freemind.modes.MindMapNode), 1.0, 5286, 
5296, getTargetForID(java.lang.String, java.lang.Object), 1.0, 5286, 
5297, getAssignedLinksVector(java.util.Vector, freemind.modes.LinkRegistryAdapter.ID_Registered, java.lang.String), 1.0, 5286, 
5298, deregisterLinkTarget(freemind.modes.MindMapNode, java.util.Vector, int, freemind.modes.LinkRegistryAdapter.ID_BasicState), 1.0, 5286, 
5299, registerLink(java.lang.String, freemind.modes.MindMapLink, freemind.modes.LinkRegistryAdapter.ID_Registered, int, freemind.modes.MindMapNode, java.util.Vector, freemind.modes.MindMapNode), 1.0, 5286, 
5300, deregisterLink(freemind.modes.MindMapLink, freemind.modes.MindMapNode, freemind.modes.MindMapNode, java.util.Vector, freemind.modes.LinkRegistryAdapter.ID_Registered, int), 1.0, 5286, 
5301, getLinkForID(java.lang.String), 1.0, 5286, 
5302, getAllSources(freemind.modes.MindMapNode, freemind.modes.LinkRegistryAdapter.ID_BasicState, java.util.Vector, int, java.util.Vector), 1.0, 5286, 
5303, getAllLinks(freemind.modes.MindMapNode, java.util.Vector), 1.0, 5286, 
5304, getAllLinksIntoMe(freemind.modes.MindMapNode, java.util.Vector, java.util.Vector, freemind.modes.LinkRegistryAdapter.ID_BasicState), 1.0, 5286, 
5305, getAllLinksFromMe(freemind.modes.MindMapNode, java.util.Vector, freemind.modes.MindMapLink, java.util.Iterator, java.util.Collection, java.util.Vector, int), 1.0, 5286, 
5306, getLabel(freemind.modes.MindMapNode, freemind.modes.LinkRegistryAdapter.ID_BasicState), 1.0, 5286, 
5307, cutNode(java.util.Vector, freemind.modes.MindMapNode, java.util.Vector, freemind.modes.MindMapLink, java.lang.String, freemind.modes.LinkRegistryAdapter.ID_BasicState, int, freemind.modes.MindMapNode, java.util.ListIterator), 1.0, 5286, 
5308, clearCuttedNodeBuffer(), 0.0, 5286, 
5309, getCuttedLinks(java.util.Vector, java.lang.String), 1.0, 5286, 
5310, registerLocalHyperlinkId(java.lang.String), 1.0, 5286, 
5311, isTargetOfLocalHyperlinks(java.lang.String), 1.0, 5286, 
5313, getID(), 0.0, 5312, 
5314, toString(), 0.0, 5312, 
5317, getTarget(), 0.0, 5316, 
5320, getID(), 0.0, 5319, 
5321, toString(), 0.0, 5319, 
5325, save(), 0.0, 5324, 
5326, hasStyle(), 0.0, 5324, 
5328, getDescription(), 0.0, 5327, 
5329, getIcon(), 0.0, 5327, 
5330, getKeystrokeResourceName(), 0.0, 5327, 
5331, getKeyStroke(), 0.0, 5327, 
5333, getTarget(), 0.0, 5332, 
5335, ID_UsedStateAdapter(), 0.0, 5332, 
5336, clone(freemind.modes.LinkRegistryAdapter.ID_UsedStateAdapter), 1.0, 5332, 
5341, getStartInclination(), 0.0, 5339, 
5342, getEndInclination(), 0.0, 5339, 
5343, getStartArrow(), 0.0, 5339, 
5344, getEndArrow(), 0.0, 5339, 
5345, setStartInclination(java.awt.Point), 1.0, 5339, 
5346, setEndInclination(java.awt.Point), 1.0, 5339, 
5347, setStartArrow(java.lang.String), 1.0, 5339, 
5348, setEndArrow(java.lang.String), 1.0, 5339, 
5349, clone(freemind.modes.ArrowLinkAdapter), 0.0, 5339, 
5350, showControlPoints(boolean), 1.0, 5339, 
5351, getShowControlPointsFlag(), 0.0, 5339, 
5352, save(freemind.main.XMLElement), 0.0, 5339, 
5354, getColor(), 0.0, 5353, 
5355, getStyle(), 0.0, 5353, 
5356, getWidth(), 0.0, 5353, 
5357, getRealWidth(), 0.0, 5353, 
5358, toString(), 0.0, 5353, 
5359, setTarget(freemind.modes.MindMapNode), 1.0, 5353, 
5360, clone(), 0.0, 5353, 
5362, StylePattern(), 0.0, 5361, 
5364, StylePattern(freemind.modes.MindMapNode), 1.0, 5361, 
5365, toString(), 0.0, 5361, 
5366, getAppliesToEdge(), 0.0, 5361, 
5367, getAppliesToNode(), 0.0, 5361, 
5368, getAppliesToNodeFont(), 0.0, 5361, 
5369, getAppliesToNodeIcon(), 0.0, 5361, 
5370, getAppliesToChildren(), 0.0, 5361, 
5371, getName(), 0.0, 5361, 
5372, setName(java.lang.String), 1.0, 5361, 
5373, getRecursive(), 0.0, 5361, 
5374, setRecursive(boolean), 1.0, 5361, 
5375, getText(), 0.0, 5361, 
5376, setText(java.lang.String), 1.0, 5361, 
5377, getNodeColor(), 0.0, 5361, 
5378, setNodeColor(java.awt.Color), 1.0, 5361, 
5379, getNodeBackgroundColor(), 0.0, 5361, 
5380, setNodeBackgroundColor(java.awt.Color), 1.0, 5361, 
5381, getNodeStyle(), 0.0, 5361, 
5382, setNodeStyle(java.lang.String), 1.0, 5361, 
5383, getNodeFontFamily(), 0.0, 5361, 
5384, setNodeFontFamily(java.lang.String), 1.0, 5361, 
5385, getNodeFontSize(), 0.0, 5361, 
5386, setNodeFontSize(java.lang.Integer), 1.0, 5361, 
5387, getNodeIcon(), 0.0, 5361, 
5388, setNodeIcon(freemind.modes.MindIcon), 1.0, 5361, 
5389, getEdgeColor(), 0.0, 5361, 
5390, setEdgeColor(java.awt.Color), 1.0, 5361, 
5391, getEdgeStyle(), 0.0, 5361, 
5392, setEdgeStyle(java.lang.String), 1.0, 5361, 
5393, getEdgeWidth(), 0.0, 5361, 
5394, setEdgeWidth(java.lang.Integer), 1.0, 5361, 
5395, getChildrenStylePattern(), 0.0, 5361, 
5396, setChildrenStylePattern(freemind.modes.StylePattern), 1.0, 5361, 
5397, loadPatterns(java.io.File), 1.0, 5361, 
5398, loadPatterns(java.util.List, java.io.Reader, freemind.main.XMLElement, java.util.Enumeration), 1.0, 5361, 
5400, getNodeFontBold(), 0.0, 5361, 
5401, setNodeFontBold(java.lang.Boolean), 1.0, 5361, 
5402, getNodeFontItalic(), 0.0, 5361, 
5403, setNodeFontItalic(java.lang.Boolean), 1.0, 5361, 
5405, load(java.net.URL), 1.0, 5404, 
5406, load(java.io.File), 1.0, 5404, 
5407, loadURL(java.lang.String), 1.0, 5404, 
5408, save(java.io.File), 1.0, 5404, 
5409, newMap(), 0.0, 5404, 
5410, save(), 0.0, 5404, 
5411, saveAs(), 0.0, 5404, 
5412, open(), 0.0, 5404, 
5415, startupController(), 0.0, 5404, 
5416, shutdownController(), 0.0, 5404, 
5417, doubleClick(java.awt.event.MouseEvent), 1.0, 5404, 
5418, plainClick(java.awt.event.MouseEvent), 1.0, 5404, 
5419, setVisible(boolean), 1.0, 5404, 
5420, isBlocked(), 0.0, 5404, 
5421, getNodeFromID(java.lang.String), 1.0, 5404, 
5422, getNodeID(freemind.modes.MindMapNode), 1.0, 5404, 
5423, select(freemind.view.mindmapview.NodeView), 1.0, 5404, 
5424, getSelected(), 0.0, 5404, 
5425, getSelectedView(), 0.0, 5404, 
5426, getSelecteds(), 0.0, 5404, 
5427, getSelectedsByDepth(), 0.0, 5404, 
5428, sortNodesByDepth(java.util.List), 1.0, 5404, 
5429, extendSelection(java.awt.event.MouseEvent), 1.0, 5404, 
5430, nodeChanged(freemind.modes.MindMapNode), 1.0, 5404, 
5431, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 5404, 
5432, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 5404, 
5433, onViewCreatedHook(freemind.view.mindmapview.NodeView), 1.0, 5404, 
5434, onViewRemovedHook(freemind.view.mindmapview.NodeView), 1.0, 5404, 
5435, registerNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 5404, 
5436, deregisterNodeSelectionListener(freemind.modes.ModeController.NodeSelectionListener), 1.0, 5404, 
5437, firePreSaveEvent(freemind.modes.MindMapNode), 1.0, 5404, 
5438, registerNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 5404, 
5439, deregisterNodeLifetimeListener(freemind.modes.ModeController.NodeLifetimeListener), 1.0, 5404, 
5440, fireNodePreDeleteEvent(freemind.modes.MindMapNode), 1.0, 5404, 
5442, displayNode(freemind.modes.MindMapNode), 1.0, 5404, 
5443, centerNode(freemind.modes.MindMapNode), 1.0, 5404, 
5444, getLinkShortText(freemind.modes.MindMapNode), 1.0, 5404, 
5445, getModeToolBar(), 0.0, 5404, 
5446, getLeftToolBar(), 0.0, 5404, 
5447, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 5404, 
5448, updatePopupMenu(freemind.controller.StructuredMenuHolder), 1.0, 5404, 
5449, getPopupMenu(), 0.0, 5404, 
5450, showPopupMenu(java.awt.event.MouseEvent), 1.0, 5404, 
5451, getPopupForModel(java.lang.Object), 1.0, 5404, 
5452, getFrame(), 0.0, 5404, 
5453, getView(), 0.0, 5404, 
5454, getMap(), 0.0, 5404, 
5455, setModel(freemind.modes.MapAdapter), 1.0, 5404, 
5456, getMode(), 0.0, 5404, 
5457, getController(), 0.0, 5404, 
5458, getHookFactory(), 0.0, 5404, 
5459, getSelectionColor(), 0.0, 5404, 
5460, getText(java.lang.String), 1.0, 5404, 
5461, getResource(java.lang.String), 1.0, 5404, 
5462, getLastCurrentDir(), 0.0, 5404, 
5463, setLastCurrentDir(java.io.File), 1.0, 5404, 
5464, getAttributeController(), 0.0, 5404, 
5465, nodeRefresh(freemind.modes.MindMapNode), 1.0, 5404, 
5466, getNodeView(freemind.modes.MindMapNode), 1.0, 5404, 
5467, refreshMap(), 0.0, 5404, 
5469, copy(), 0.0, 5404, 
5470, copySingle(), 0.0, 5404, 
5472, getFileChooser(javax.swing.filechooser.FileFilter), 1.0, 5404, 
5474, onUpdateNodeHook(freemind.modes.MindMapNode), 1.0, 5473, 
5475, onSelectHook(freemind.view.mindmapview.NodeView), 1.0, 5473, 
5476, onDeselectHook(freemind.view.mindmapview.NodeView), 1.0, 5473, 
5477, onSaveNode(freemind.modes.MindMapNode), 1.0, 5473, 
5479, onCreateNodeHook(freemind.modes.MindMapNode), 1.0, 5478, 
5480, onPreDeleteNode(freemind.modes.MindMapNode), 1.0, 5478, 
5484, getDestinationLabel(), 0.0, 5482, 
5485, getReferenceText(), 0.0, 5482, 
5486, getSource(), 0.0, 5482, 
5487, setSource(freemind.modes.MindMapNode), 1.0, 5482, 
5488, setDestinationLabel(java.lang.String), 1.0, 5482, 
5489, setReferenceText(java.lang.String), 1.0, 5482, 
5490, getUniqueID(), 0.0, 5482, 
5491, setUniqueID(java.lang.String), 1.0, 5482, 
5492, getStandardColor(), 0.0, 5482, 
5493, setStandardColor(java.awt.Color), 1.0, 5482, 
5494, getStandardStyle(), 0.0, 5482, 
5495, setStandardStyle(java.lang.String), 1.0, 5482, 
5496, getStandardColorPropertyString(), 0.0, 5482, 
5497, getStandardStylePropertyString(), 0.0, 5482, 
5502, NodeDownAction(freemind.modes.mindmapmode.MindMapController), 1.0, 5501, 
5503, actionPerformed(java.awt.event.ActionEvent), 1.0, 5501, 
5505, MindIcon(java.lang.String), 1.0, 5504, 
5507, toString(), 0.0, 5504, 
5508, getName(), 0.0, 5504, 
5509, setName(java.lang.String), 1.0, 5504, 
5510, getDescription(java.lang.String), 0.0, 5504, 
5511, getIconFileName(), 0.0, 5504, 
5512, getIconBaseFileName(), 0.0, 5504, 
5513, getIconsPath(), 0.0, 5504, 
5514, getIcon(java.net.URL, java.io.File, javax.swing.ImageIcon, java.lang.Exception), 0.0, 5504, 
5515, setIcon(javax.swing.ImageIcon), 1.0, 5504, 
5516, getAllIconNames(java.lang.String, java.util.StringTokenizer, java.util.Vector), 0.0, 5504, 
5517, factory(java.lang.String, freemind.modes.MindIcon), 1.0, 5504, 
5519, compareTo(java.lang.Object, int, int, freemind.modes.MindIcon), 1.0, 5504, 
5520, getNumber(), 0.0, 5504, 
5521, getRendererComponent(), 0.0, 5504, 
5522, getKeystrokeResourceName(), 0.0, 5504, 
5523, getKeyStroke(), 0.0, 5504, 
5526, calcIterativeLevel(freemind.modes.MindMapNode, freemind.modes.MindMapNode, freemind.modes.MindMapCloud), 1.0, 5524, 
5527, setTarget(freemind.modes.MindMapNode), 1.0, 5524, 
5528, getExteriorColor(), 0.0, 5524, 
5529, getIterativeLevel(), 0.0, 5524, 
5530, changeIterativeLevel(int), 1.0, 5524, 
5531, save(freemind.main.XMLElement), 0.0, 5524, 
5532, getStandardColor(), 0.0, 5524, 
5533, setStandardColor(java.awt.Color), 1.0, 5524, 
5534, getStandardStyle(), 0.0, 5524, 
5535, setStandardStyle(java.lang.String), 1.0, 5524, 
5536, getStandardColorPropertyString(), 0.0, 5524, 
5537, getStandardStylePropertyString(), 0.0, 5524, 
5542, registerLinkTarget(freemind.modes.MindMapNode), 1.0, 5541, 
5544, deregisterLinkTarget(freemind.modes.MindMapNode), 1.0, 5541, 
5545, getLabel(freemind.modes.MindMapNode), 1.0, 5541, 
5546, getTargetForID(java.lang.String), 1.0, 5541, 
5547, generateUniqueID(java.lang.String), 1.0, 5541, 
5548, registerLink(freemind.modes.MindMapLink), 1.0, 5541, 
5549, deregisterLink(freemind.modes.MindMapLink), 1.0, 5541, 
5550, getLinkForID(java.lang.String), 1.0, 5541, 
5551, generateUniqueLinkID(java.lang.String), 1.0, 5541, 
5552, cutNode(freemind.modes.MindMapNode), 1.0, 5541, 
5553, clearCuttedNodeBuffer(), 0.0, 5541, 
5554, getCuttedLinks(java.lang.String), 1.0, 5541, 
5555, getAllLinks(freemind.modes.MindMapNode), 1.0, 5541, 
5556, getAllLinksIntoMe(freemind.modes.MindMapNode), 1.0, 5541, 
5557, getAllLinksFromMe(freemind.modes.MindMapNode), 1.0, 5541, 
5558, registerLocalHyperlinkId(java.lang.String), 1.0, 5541, 
5559, isTargetOfLocalHyperlinks(java.lang.String), 1.0, 5541, 
5561, HistoryInformation(long), 0.0, 5560, 
5563, getCreatedAt(), 0.0, 5560, 
5564, getLastModifiedAt(), 0.0, 5560, 
5565, setCreatedAt(java.util.Date), 1.0, 5560, 
5566, setLastModifiedAt(java.util.Date), 1.0, 5560, 
5568, nodeViewCreated(freemind.modes.NodeViewEvent), 1.0, 5567, 
5569, nodeViewRemoved(freemind.modes.NodeViewEvent), 1.0, 5567, 
5572, getSubterms(), 0.0, 5571, 
5573, getSearchTerm(), 0.0, 5571, 
5574, getFindFromText(java.lang.String), 0.0, 5571, 
5575, FindAction(freemind.modes.ControllerAdapter), 1.0, 5571, 
5576, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.util.Collection, java.lang.String, java.lang.String, boolean), 1.0, 5571, 
5579, breakSearchTermIntoSubterms(char, char, boolean, java.lang.String, int, int, java.lang.StringBuffer, java.util.ArrayList), 1.0, 5571, 
5581, findNext(), 0.0, 5571, 
5582, centerNode(freemind.modes.MindMapNode), 1.0, 5571, 
5585, actionPerformed(java.awt.event.ActionEvent, java.util.Collection, boolean, java.lang.String, java.lang.String), 1.0, 5583, 
5587, NewMapAction(freemind.modes.ModeController), 1.0, 5586, 
5588, actionPerformed(java.awt.event.ActionEvent), 1.0, 5586, 
5591, FreeMindApplet(), 0.0, 5590, 
5592, isApplet(), 0.0, 5590, 
5593, getPatternsFile(), 0.0, 5590, 
5594, getController(), 0.0, 5590, 
5595, getView(), 0.0, 5590, 
5596, setView(freemind.view.mindmapview.MapView), 1.0, 5590, 
5597, getFreeMindMenuBar(), 0.0, 5590, 
5598, getViewport(), 0.0, 5590, 
5599, getFreemindVersion(), 0.0, 5590, 
5600, getWinHeight(), 0.0, 5590, 
5601, getWinWidth(), 0.0, 5590, 
5602, getWinState(), 0.0, 5590, 
5603, getWinX(), 0.0, 5590, 
5604, getWinY(), 0.0, 5590, 
5605, getResources(), 0.0, 5590, 
5606, getResourceString(java.lang.String), 1.0, 5590, 
5608, getProperty(java.lang.String), 1.0, 5590, 
5610, getProperties(), 0.0, 5590, 
5613, getFreemindDirectory(), 0.0, 5590, 
5614, getMaxNodeWidth(java.lang.NumberFormatException), 0.0, 5590, 
5615, saveProperties(), 0.0, 5590, 
5616, setTitle(java.lang.String), 1.0, 5590, 
5617, out(java.lang.String), 1.0, 5590, 
5618, err(java.lang.String), 1.0, 5590, 
5619, openDocument(java.net.URL), 1.0, 5590, 
5620, start(java.lang.Exception), 0.0, 5590, 
5621, setWaitingCursor(boolean), 1.0, 5590, 
5622, getResource(java.lang.String, java.net.URL), 1.0, 5590, 
5623, getLogger(java.lang.String), 1.0, 5590, 
5624, init(java.lang.String, java.net.URL, java.net.URL, java.util.Enumeration, java.io.InputStream, javax.swing.JRootPane, java.lang.String, java.net.MalformedURLException, java.lang.Exception), 0.0, 5590, 
5625, setPropertyByParameter(java.lang.String, java.lang.String), 1.0, 5590, 
5626, updateLookAndFeel(java.lang.String, java.lang.Exception), 0.0, 5590, 
5627, getSouthPanel(), 0.0, 5590, 
5628, getJFrame(), 0.0, 5590, 
5629, getFreeMindClassLoader(), 0.0, 5590, 
5630, getFreemindBaseDir(), 0.0, 5590, 
5631, getAdjustableProperty(java.lang.String), 1.0, 5590, 
5632, insertComponentIntoSplitPane(javax.swing.JComponent), 1.0, 5590, 
5633, removeSplitPane(), 0.0, 5590, 
5635, getJFrame(), 0.0, 5634, 
5636, isApplet(), 0.0, 5634, 
5637, getView(), 0.0, 5634, 
5638, setView(freemind.view.mindmapview.MapView), 1.0, 5634, 
5639, getController(), 0.0, 5634, 
5640, setWaitingCursor(boolean), 1.0, 5634, 
5641, getPatternsFile(), 0.0, 5634, 
5642, getFreeMindMenuBar(), 0.0, 5634, 
5643, getResources(), 0.0, 5634, 
5644, getResourceString(java.lang.String), 1.0, 5634, 
5646, getContentPane(), 0.0, 5634, 
5647, out(java.lang.String), 1.0, 5634, 
5648, err(java.lang.String), 1.0, 5634, 
5649, openDocument(java.net.URL), 1.0, 5634, 
5650, repaint(), 0.0, 5634, 
5651, getResource(java.lang.String), 1.0, 5634, 
5653, getProperties(), 0.0, 5634, 
5654, getProperty(java.lang.String), 1.0, 5634, 
5656, saveProperties(), 0.0, 5634, 
5657, getFreemindDirectory(), 0.0, 5634, 
5658, getLayeredPane(), 0.0, 5634, 
5659, getViewport(), 0.0, 5634, 
5660, setTitle(java.lang.String), 1.0, 5634, 
5661, getWinHeight(), 0.0, 5634, 
5662, getWinWidth(), 0.0, 5634, 
5663, getWinState(), 0.0, 5634, 
5664, getWinX(), 0.0, 5634, 
5665, getWinY(), 0.0, 5634, 
5666, getFreemindVersion(), 0.0, 5634, 
5667, getLogger(java.lang.String), 1.0, 5634, 
5668, insertComponentIntoSplitPane(javax.swing.JComponent), 1.0, 5634, 
5669, removeSplitPane(), 0.0, 5634, 
5670, getFreeMindClassLoader(), 0.0, 5634, 
5671, getFreemindBaseDir(), 0.0, 5634, 
5672, getAdjustableProperty(java.lang.String), 1.0, 5634, 
5676, VersionInformation(int, java.lang.String, String[], java.util.Vector, java.util.StringTokenizer, int), 1.0, 5674, 
5677, toString(java.lang.StringBuffer), 0.0, 5674, 
5680, getActualValue(), 0.0, 5678, 
5681, setMaximumValue(int), 1.0, 5678, 
5682, increase(java.lang.String), 1.0, 5678, 
5684, FreeMindSecurityManager(), 0.0, 5683, 
5685, setFinalSecurityManager(java.lang.SecurityManager), 1.0, 5683, 
5687, checkAccess(java.lang.Thread), 1.0, 5683, 
5688, checkAccess(java.lang.ThreadGroup), 1.0, 5683, 
5689, checkAwtEventQueueAccess(), 0.0, 5683, 
5692, checkCreateClassLoader(), 0.0, 5683, 
5693, checkDelete(java.lang.String), 1.0, 5683, 
5694, checkExec(java.lang.String), 1.0, 5683, 
5695, checkExit(int), 1.0, 5683, 
5696, checkLink(java.lang.String), 1.0, 5683, 
5697, checkListen(int), 1.0, 5683, 
5700, checkMulticast(java.net.InetAddress), 1.0, 5683, 
5701, checkPackageAccess(java.lang.String), 1.0, 5683, 
5702, checkPackageDefinition(java.lang.String), 1.0, 5683, 
5704, checkPermission(java.security.Permission), 1.0, 5683, 
5705, checkPrintJobAccess(), 0.0, 5683, 
5706, checkPropertiesAccess(), 0.0, 5683, 
5707, checkPropertyAccess(java.lang.String), 1.0, 5683, 
5708, checkRead(java.io.FileDescriptor), 1.0, 5683, 
5710, checkRead(java.lang.String), 1.0, 5683, 
5711, checkSecurityAccess(java.lang.String), 1.0, 5683, 
5712, checkSetFactory(), 0.0, 5683, 
5713, checkSystemClipboardAccess(), 0.0, 5683, 
5714, checkTopLevelWindow(java.lang.Object), 1.0, 5683, 
5715, checkWrite(java.io.FileDescriptor), 1.0, 5683, 
5716, checkWrite(java.lang.String), 1.0, 5683, 
5717, getSecurityContext(), 0.0, 5683, 
5719, executableByExtension(java.lang.String), 1.0, 5718, 
5720, colorToXml(java.lang.String, java.lang.String, java.lang.String, java.awt.Color), 1.0, 5718, 
5721, xmlToColor(java.lang.String, int, int, int), 1.0, 5718, 
5722, PointToXml(java.awt.Point, java.util.Vector), 1.0, 5718, 
5723, xmlToPoint(java.lang.String, int, int, java.util.ListIterator, java.util.List), 1.0, 5718, 
5724, BooleanToXml(boolean), 1.0, 5718, 
5725, xmlToBoolean(java.lang.String), 1.0, 5718, 
5726, stringToList(java.lang.String, java.util.StringTokenizer, java.util.List), 1.0, 5718, 
5727, listToString(java.lang.String, java.util.List, java.util.ListIterator), 1.0, 5718, 
5728, expandFileName(java.lang.String), 1.0, 5718, 
5729, getAvailableFontFamilyNames(String[], int), 0.0, 5718, 
5730, getAvailableFonts(java.awt.GraphicsEnvironment), 0.0, 5718, 
5731, getAvailableFontFamilyNamesAsVector(String[], java.util.Vector, int), 0.0, 5718, 
5732, isAvailableFontFamily(java.lang.String), 1.0, 5718, 
5733, getExtension(java.io.File), 1.0, 5718, 
5734, getExtension(java.lang.String, int), 1.0, 5718, 
5735, removeExtension(java.lang.String, int), 1.0, 5718, 
5736, isAbsolutePath(java.lang.String, java.lang.String, java.lang.String), 1.0, 5718, 
5737, urlGetFile(java.net.URL, java.lang.String, java.lang.String), 1.0, 5718, 
5739, isPreferenceTrue(java.lang.String), 1.0, 5718, 
5744, firstLetterCapitalized(java.lang.String), 1.0, 5718, 
5749, toBase64(byte[]), 1.0, 5718, 
5750, toBase64(java.lang.String), 1.0, 5718, 
5751, fromBase64(java.lang.String), 1.0, 5718, 
5752, compress(byte[], java.lang.String, byte[], java.util.zip.Deflater, byte[], java.io.ByteArrayOutputStream, int, java.io.IOException), 1.0, 5718, 
5753, decompress(byte[], java.lang.String, java.io.ByteArrayOutputStream, byte[], java.util.zip.Inflater, byte[], int, java.io.IOException), 1.0, 5718, 
5754, byteArrayToUTF8String(byte[], java.io.UnsupportedEncodingException), 1.0, 5718, 
5755, uTF8StringToByteArray(java.lang.String, java.io.UnsupportedEncodingException), 1.0, 5718, 
5756, xmlToDate(java.lang.String, java.lang.Exception), 1.0, 5718, 
5757, dateToString(java.util.Date), 1.0, 5718, 
5761, replaceUtf8AndIllegalXmlChars(java.lang.String), 1.0, 5718, 
5762, getActualReader(java.io.Reader), 1.0, 5718, 
5763, getFile(java.io.File, java.io.FileNotFoundException), 1.0, 5718, 
5764, getReaderFromFile(java.io.File), 1.0, 5718, 
5765, getFile(java.lang.String, java.io.BufferedReader, java.io.Reader, java.lang.StringBuffer, java.lang.String, java.lang.Exception, java.lang.Exception), 1.0, 5718, 
5766, logTransferable(DataFlavor[], java.awt.datatransfer.Transferable, int, java.lang.Exception), 1.0, 5718, 
5767, addEscapeActionToDialog(javax.swing.JDialog), 1.0, 5718, 
5770, removeTranslateComment(java.lang.String), 1.0, 5718, 
5771, getURLWithoutReference(java.net.URL), 1.0, 5718, 
5779, isMacOsX(boolean, java.lang.String), 0.0, 5718, 
5780, removeMnemonic(java.lang.String), 1.0, 5718, 
5781, getKeyStroke(java.lang.String, javax.swing.KeyStroke), 1.0, 5718, 
5782, fileToUrl(java.io.File), 1.0, 5718, 
5783, urlToFile(java.net.URL), 1.0, 5718, 
5785, getFileNameProposal(java.lang.String, freemind.modes.MindMapNode), 1.0, 5718, 
5786, waitForEventQueue(java.lang.Exception), 0.0, 5718, 
5787, printStackTrace(), 0.0, 5718, 
5791, IntHolder(), 0.0, 5790, 
5792, IntHolder(int), 1.0, 5790, 
5793, setValue(int), 1.0, 5790, 
5794, getValue(), 0.0, 5790, 
5795, toString(), 0.0, 5790, 
5797, BooleanHolder(), 0.0, 5796, 
5798, BooleanHolder(boolean), 1.0, 5796, 
5799, setValue(boolean), 1.0, 5796, 
5800, getValue(), 0.0, 5796, 
5802, ObjectHolder(), 0.0, 5801, 
5803, setObject(java.lang.Object), 1.0, 5801, 
5804, getObject(), 0.0, 5801, 
5807, getFirst(), 0.0, 5805, 
5808, getSecond(), 0.0, 5805, 
5811, init(byte[], javax.crypto.SecretKey, java.security.spec.KeySpec, java.security.spec.AlgorithmParameterSpec, java.security.InvalidAlgorithmParameterException), 1.0, 5809, 
5812, encrypt(byte[], java.lang.String, byte[], int, byte[], javax.crypto.IllegalBlockSizeException), 1.0, 5809, 
5813, decrypt(byte[], java.lang.String, byte[], byte[], int, java.lang.String, javax.crypto.IllegalBlockSizeException), 1.0, 5809, 
5815, SingleDesEncrypter(java.lang.StringBuffer), 1.0, 5814, 
5817, TripleDesEncrypter(java.lang.StringBuffer), 1.0, 5816, 
5819, run(javax.xml.transform.Transformer, javax.xml.transform.TransformerFactory, java.lang.Exception), 0.0, 5818, 
5820, isSuccessful(), 0.0, 5818, 
5821, getErrorMessage(), 0.0, 5818, 
5824, actionPerformed(java.awt.event.ActionEvent), 1.0, 5823, 
5827, decode64(int, int, byte, int, int, byte, byte, char[], java.lang.String, java.io.ByteArrayOutputStream), 1.0, 5826, 
5828, encode64(int, int, byte[], char[], java.lang.StringBuffer, int), 1.0, 5826, 
5830, getText(), 0.0, 5829, 
5831, setText(java.lang.String), 1.0, 5829, 
5832, setMnemonic(char), 1.0, 5829, 
5833, setDisplayedMnemonicIndex(int), 1.0, 5829, 
5835, ButtonHolder(javax.swing.AbstractButton), 1.0, 5834, 
5836, getText(), 0.0, 5834, 
5837, setDisplayedMnemonicIndex(int), 1.0, 5834, 
5838, setMnemonic(char), 1.0, 5834, 
5839, setText(java.lang.String), 1.0, 5834, 
5841, ActionHolder(javax.swing.Action), 1.0, 5840, 
5842, getText(), 0.0, 5840, 
5843, setDisplayedMnemonicIndex(int), 1.0, 5840, 
5844, setMnemonic(int, char), 1.0, 5840, 
5845, setText(java.lang.String), 1.0, 5840, 
5847, run(), 0.0, 5846, 
5852, write(), 0.0, 5849, 
5853, writeOption(javax.swing.text.html.Option), 1.0, 5849, 
5854, writeLineSeparator(), 0.0, 5849, 
5856, main(String[], java.io.FileReader, java.io.FileWriter, java.lang.Exception), 1.0, 5849, 
5858, XHTMLFilterWriter(java.io.Writer), 1.0, 5857, 
5859, write(int), 1.0, 5857, 
5863, getFeedBack(), 0.0, 5862, 
5864, FreeMindSplashModern(freemind.main.FreeMindMain, javax.swing.ImageIcon, java.awt.Dimension, java.awt.Dimension, javax.swing.JLabel), 1.0, 5862, 
5865, close(), 0.0, 5862, 
5866, getWindowIcon(), 0.0, 5862, 
5869, getActualValue(), 0.0, 5867, 
5870, setMaximumValue(int), 1.0, 5867, 
5871, increase(java.lang.String), 1.0, 5867, 
5872, setImageJLabel(javax.swing.JLabel), 1.0, 5867, 
5875, run(double), 0.0, 5874, 
5878, paint(int, int, java.awt.Graphics, int, java.lang.Double, int, java.lang.String, int, java.awt.Graphics2D, java.lang.String), 1.0, 5877, 
5880, XMLElement(), 0.0, 5879, 
5881, XMLElement(java.util.Hashtable), 1.0, 5879, 
5882, XMLElement(boolean), 1.0, 5879, 
5886, getUserObject(), 0.0, 5879, 
5887, addChild(freemind.main.XMLElement), 1.0, 5879, 
5894, countChildren(), 0.0, 5879, 
5895, enumerateAttributeNames(), 0.0, 5879, 
5896, enumeratePropertyNames(), 0.0, 5879, 
5897, enumerateChildren(), 0.0, 5879, 
5898, getChildren(java.lang.Exception), 0.0, 5879, 
5899, getContents(), 0.0, 5879, 
5900, getContent(), 0.0, 5879, 
5901, getLineNr(), 0.0, 5879, 
5902, getAttribute(java.lang.String), 1.0, 5879, 
5905, getStringAttribute(java.lang.String), 1.0, 5879, 
5908, getIntAttribute(java.lang.String), 1.0, 5879, 
5911, getDoubleAttribute(java.lang.String), 1.0, 5879, 
5916, getProperty(java.lang.String), 1.0, 5879, 
5925, getName(), 0.0, 5879, 
5926, getTagName(), 0.0, 5879, 
5927, parseFromReader(java.io.Reader), 1.0, 5879, 
5929, parseString(java.lang.String, java.io.IOException), 1.0, 5879, 
5935, removeChild(freemind.main.XMLElement), 1.0, 5879, 
5936, removeAttribute(java.lang.String), 1.0, 5879, 
5937, removeProperty(java.lang.String), 1.0, 5879, 
5938, removeChild(java.lang.String), 1.0, 5879, 
5939, createAnotherElement(), 0.0, 5879, 
5940, completeElement(), 0.0, 5879, 
5941, setContent(java.lang.String), 1.0, 5879, 
5942, setEncodedContent(java.lang.String), 1.0, 5879, 
5943, setTagName(java.lang.String), 1.0, 5879, 
5944, setName(java.lang.String), 1.0, 5879, 
5945, toString(java.io.ByteArrayOutputStream, java.io.OutputStreamWriter, java.io.IOException), 0.0, 5879, 
5946, write(java.io.Writer), 1.0, 5879, 
5947, writeWithoutClosingTag(java.io.Writer), 1.0, 5879, 
5948, writeClosingTag(java.io.Writer), 1.0, 5879, 
5951, scanIdentifier(java.lang.StringBuffer, char), 1.0, 5879, 
5952, scanWhitespace(char), 0.0, 5879, 
5953, scanWhitespace(char, java.lang.StringBuffer), 1.0, 5879, 
5954, scanString(java.lang.StringBuffer, char, char), 1.0, 5879, 
5955, scanPCData(char, java.lang.StringBuffer), 1.0, 5879, 
5956, checkCDATA(char, int, int, java.lang.StringBuffer), 1.0, 5879, 
5957, skipComment(int, char), 0.0, 5879, 
5958, skipSpecialTag(int, char, char, int), 1.0, 5879, 
5959, checkLiteral(int, java.lang.String, int), 1.0, 5879, 
5960, readChar(int, char), 0.0, 5879, 
5961, scanElement(int, char, java.lang.String, boolean, freemind.main.XMLElement, freemind.main.XMLElement, java.lang.String, java.lang.String, java.lang.StringBuffer, java.lang.StringBuffer, java.util.regex.Matcher, java.lang.String), 1.0, 5879, 
5962, resolveEntity(char, java.lang.StringBuffer, java.lang.StringBuffer, java.lang.String, char[], java.lang.NumberFormatException), 1.0, 5879, 
5963, unreadChar(char), 1.0, 5879, 
5964, invalidValueSet(java.lang.String, java.lang.String), 1.0, 5879, 
5966, unexpectedEndOfData(java.lang.String), 0.0, 5879, 
5967, syntaxError(java.lang.String, java.lang.String), 1.0, 5879, 
5968, expectedInput(java.lang.String, java.lang.String), 1.0, 5879, 
5969, unknownEntity(java.lang.String, java.lang.String), 1.0, 5879, 
5971, getFeedBack(), 0.0, 5970, 
5972, close(), 0.0, 5970, 
5973, setVisible(boolean), 1.0, 5970, 
5974, getWindowIcon(), 0.0, 5970, 
5976, getFeedBack(), 0.0, 5975, 
5977, FreeMindSplash(freemind.main.FreeMindMain, javax.swing.ImageIcon, java.awt.Dimension, javax.swing.JLabel, java.awt.Dimension), 1.0, 5975, 
5978, close(), 0.0, 5975, 
5979, getWindowIcon(), 0.0, 5975, 
5982, getActualValue(), 0.0, 5980, 
5983, setMaximumValue(int), 1.0, 5980, 
5984, increase(java.lang.String), 1.0, 5980, 
5985, setImageJLabel(javax.swing.JLabel), 1.0, 5980, 
5988, run(double), 0.0, 5987, 
5991, paint(int, int, java.awt.Graphics, java.lang.String, java.awt.Graphics2D, int, java.lang.String, java.lang.Double, int, int), 1.0, 5990, 
5996, writeAttributes(javax.swing.text.AttributeSet, java.lang.Object, javax.swing.text.Element, java.util.Enumeration), 1.0, 5992, 
5998, FreeMindCommon(freemind.main.FreeMindMain), 1.0, 5997, 
5999, getProperty(java.lang.String), 1.0, 5997, 
6001, getResources(), 0.0, 5997, 
6002, getResourceString(java.lang.String), 1.0, 5997, 
6004, clearLanguageResources(), 0.0, 5997, 
6005, getFreeMindClassLoader(java.lang.ClassLoader, java.net.MalformedURLException), 0.0, 5997, 
6006, getFreemindBaseDirOld(int, int, java.lang.String, java.lang.String, java.io.File), 0.0, 5997, 
6007, getFreemindBaseDir(java.io.File, java.lang.String, java.net.URL, java.lang.String, java.lang.Exception), 0.0, 5997, 
6008, getAdjustableProperty(java.lang.String, java.lang.String, java.lang.String), 1.0, 5997, 
6009, loadUIProperties(java.util.Properties), 1.0, 5997, 
6011, FreemindResourceBundle(java.lang.String, java.lang.Exception), 0.0, 6010, 
6012, getLanguageResources(java.io.InputStream, java.lang.String, java.util.PropertyResourceBundle, java.net.URL), 1.0, 6010, 
6013, handleGetObject(java.lang.String, java.lang.Exception), 1.0, 6010, 
6014, getKeys(), 0.0, 6010, 
6015, getResourceString(java.lang.String, java.lang.Exception), 1.0, 6010, 
6020, getLineNr(), 0.0, 6017, 
6022, Resources(freemind.main.FreeMindMain), 1.0, 6021, 
6023, createInstance(freemind.main.FreeMindMain), 1.0, 6021, 
6024, getResource(java.lang.String), 1.0, 6021, 
6025, getResourceString(java.lang.String), 1.0, 6021, 
6027, getInstance(), 0.0, 6021, 
6028, getFreemindDirectory(), 0.0, 6021, 
6029, getFreemindVersion(), 0.0, 6021, 
6031, getBoolProperty(java.lang.String, java.lang.String), 1.0, 6021, 
6032, getProperties(), 0.0, 6021, 
6033, getProperty(java.lang.String), 1.0, 6021, 
6034, getResources(), 0.0, 6021, 
6035, getCountryMap(int, String[]), 0.0, 6021, 
6036, getLogger(java.lang.String), 1.0, 6021, 
6037, logException(java.lang.Throwable), 1.0, 6021, 
6040, createTranslatedString(java.lang.String, java.lang.String), 1.0, 6021, 
6041, getText(java.lang.String), 1.0, 6021, 
6043, ExampleFileFilter(), 0.0, 6042, 
6044, ExampleFileFilter(java.lang.String), 1.0, 6042, 
6046, ExampleFileFilter(String[]), 1.0, 6042, 
6048, accept(java.io.File, java.lang.String), 1.0, 6042, 
6049, getExtension(java.io.File, java.lang.String, int), 1.0, 6042, 
6050, addExtension(java.lang.String), 1.0, 6042, 
6051, getDescription(java.util.Enumeration), 0.0, 6042, 
6052, setDescription(java.lang.String), 1.0, 6042, 
6053, setExtensionListInDescription(boolean), 1.0, 6042, 
6054, isExtensionListInDescription(), 0.0, 6042, 
6056, format(java.util.logging.LogRecord, java.lang.StringBuffer, java.lang.String), 1.0, 6055, 
6061, main(String[], java.lang.reflect.Method, java.util.Properties, freemind.main.FreeMindStarter, java.util.Properties, java.lang.Class, java.lang.Exception), 1.0, 6060, 
6062, checkJavaVersion(java.lang.String), 0.0, 6060, 
6063, createUserDirectory(java.util.Properties, java.io.File, java.lang.Exception), 1.0, 6060, 
6064, setDefaultLocale(java.util.Locale, java.lang.String, java.util.Properties), 1.0, 6060, 
6065, readUsersPreferences(java.io.InputStream, java.util.Properties, java.util.Properties, java.io.File, java.lang.Exception), 1.0, 6060, 
6066, getUserPreferencesFile(java.lang.String, java.io.File, java.util.Properties, java.io.File), 1.0, 6060, 
6067, getFreeMindDirectory(java.util.Properties), 1.0, 6060, 
6068, readDefaultPreferences(java.lang.String, java.io.InputStream, java.util.Properties, java.net.URL, java.lang.Exception), 0.0, 6060, 
6071, HtmlTools(), 0.0, 6070, 
6072, getInstance(), 0.0, 6070, 
6073, toXhtml(java.lang.String, java.io.StringReader, java.lang.String, java.io.StringWriter, javax.swing.text.BadLocationException), 1.0, 6070, 
6074, toHtml(java.lang.String), 1.0, 6070, 
6079, isHtmlNode(java.lang.String, int, char), 1.0, 6070, 
6080, unicodeToHTMLUnicodeEntity(char, int, java.lang.String, int, java.lang.StringBuffer), 1.0, 6070, 
6081, unescapeHTMLUnicodeEntity(char, boolean, char, java.lang.String, java.lang.StringBuffer, int, java.lang.StringBuffer, java.lang.NumberFormatException), 1.0, 6070, 
6082, removeHtmlTagsFromString(java.lang.String), 1.0, 6070, 
6083, removeAllTagsFromString(java.lang.String), 1.0, 6070, 
6084, htmlToPlain(java.lang.String), 1.0, 6070, 
6086, plainToHTML(char, java.lang.String, java.lang.String, int, java.lang.StringBuffer, int), 1.0, 6070, 
6087, toXMLUnescapedText(java.lang.String), 1.0, 6070, 
6088, toXMLEscapedTextExpandingWhitespace(char, java.lang.String, int, int, java.lang.StringBuffer), 1.0, 6070, 
6089, toXMLEscapedText(java.lang.String), 1.0, 6070, 
6090, isWellformedXml(java.lang.String, javax.xml.parsers.SAXParserFactory, java.lang.Exception), 1.0, 6070, 
6091, replaceIllegalXmlCharacters(java.lang.String), 1.0, 6070, 
6092, isXMLValidCharacter(char), 1.0, 6070, 
6093, removeInvalidXmlCharacters(boolean, char, char, java.lang.String, int, java.lang.StringBuffer, java.lang.StringBuffer, java.lang.NumberFormatException), 1.0, 6070, 
6094, extractHtmlBody(int, java.lang.String, int), 1.0, 6070, 
6095, replaceSpacesToNonbreakableSpaces(char, boolean, java.lang.String, int, java.lang.StringBuffer), 1.0, 6070, 
6098, toString(java.lang.StringBuffer), 0.0, 6096, 
6101, flush(java.lang.String), 0.0, 6099, 
6104, init(freemind.main.FeedBack), 1.0, 6102, 
6105, updateLookAndFeel(java.lang.String, java.lang.Exception), 0.0, 6102, 
6106, isApplet(), 0.0, 6102, 
6107, getPatternsFile(), 0.0, 6102, 
6108, getViewport(), 0.0, 6102, 
6109, getFreemindVersion(), 0.0, 6102, 
6110, getWinHeight(), 0.0, 6102, 
6111, getWinWidth(), 0.0, 6102, 
6112, getWinX(), 0.0, 6102, 
6113, getWinY(), 0.0, 6102, 
6114, getWinState(), 0.0, 6102, 
6115, getResource(java.lang.String), 1.0, 6102, 
6116, getProperty(java.lang.String), 1.0, 6102, 
6118, getProperties(), 0.0, 6102, 
6120, getDefaultProperty(java.lang.String), 1.0, 6102, 
6122, getFreemindDirectory(), 0.0, 6102, 
6123, saveProperties(java.io.OutputStream, java.io.OutputStreamWriter, java.lang.Exception), 0.0, 6102, 
6124, getView(), 0.0, 6102, 
6125, getController(), 0.0, 6102, 
6126, setView(freemind.view.mindmapview.MapView), 1.0, 6102, 
6127, getFreeMindMenuBar(), 0.0, 6102, 
6128, out(java.lang.String), 1.0, 6102, 
6129, err(java.lang.String), 1.0, 6102, 
6130, openDocument(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL, java.lang.String, Object[], java.text.MessageFormat, java.io.IOException, java.io.IOException), 1.0, 6102, 
6132, setWaitingCursor(boolean), 1.0, 6102, 
6133, getProgramForFile(java.lang.String, java.lang.String, java.lang.String, java.util.StringTokenizer, java.util.StringTokenizer, java.lang.String), 1.0, 6102, 
6134, getResources(), 0.0, 6102, 
6135, getResourceString(java.lang.String), 1.0, 6102, 
6137, getLogger(java.util.logging.Logger, freemind.main.LoggingOutputStream, java.lang.String, java.util.logging.Logger, java.util.logging.ConsoleHandler, java.util.logging.Logger, Handler[], int, java.util.logging.Handler, java.lang.Exception), 1.0, 6102, 
6139, setScreenBounds(int, int, int, int, javax.swing.InputMap, int, boolean, java.awt.Toolkit, int, java.awt.Insets, javax.swing.KeyStroke, java.awt.Dimension, int), 0.0, 6102, 
6140, createModeController(String[], freemind.modes.ModeController, java.lang.Class, java.lang.Exception), 1.0, 6102, 
6142, getJFrame(), 0.0, 6102, 
6143, getFreeMindClassLoader(), 0.0, 6102, 
6144, getFreemindBaseDir(), 0.0, 6102, 
6145, getAdjustableProperty(java.lang.String), 1.0, 6102, 
6146, tabSelectionChanged(int, freemind.view.MapModule, int), 0.0, 6102, 
6147, insertComponentIntoSplitPane(javax.swing.JComponent, javax.swing.KeyStroke, javax.swing.KeyStroke, int, javax.swing.InputMap, int), 1.0, 6102, 
6148, removeSplitPane(), 0.0, 6102, 
6149, removeContentComponent(), 0.0, 6102, 
6150, setContentComponent(), 0.0, 6102, 
6155, getActualValue(), 0.0, 6154, 
6156, increase(java.lang.String), 1.0, 6154, 
6158, setMaximumValue(int), 1.0, 6154, 
6161, windowLostFocus(java.awt.event.WindowEvent), 1.0, 6160, 
6162, windowGainedFocus(java.awt.event.WindowEvent, freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode), 1.0, 6160, 
6165, stateChanged(javax.swing.event.ChangeEvent), 1.0, 6164, 
6171, numberOfOpenMapInformation(int), 1.0, 6167, 
6178, windowClosing(java.awt.event.WindowEvent), 1.0, 6177, 
6180, run(java.lang.InterruptedException), 0.0, 6179, 
6181, searchFocus(java.awt.Component, java.awt.Container, java.awt.Component, int), 1.0, 6179, 
6183, focusGained(java.awt.event.FocusEvent), 1.0, 6182, 
6184, focusLost(java.awt.event.FocusEvent), 1.0, 6182, 
6188, AttributeExistsCondition(java.lang.String), 1.0, 6187, 
6190, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 6187, 
6191, load(freemind.main.XMLElement), 1.0, 6187, 
6192, createDesctiption(java.lang.String), 0.0, 6187, 
6194, NodeContainsCondition(java.lang.String), 1.0, 6193, 
6196, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 6193, 
6197, load(freemind.main.XMLElement), 1.0, 6193, 
6198, createDesctiption(java.lang.String, java.lang.String), 0.0, 6193, 
6200, NodeCondition(), 0.0, 6199, 
6201, getListCellRendererComponent(), 0.0, 6199, 
6202, toString(), 0.0, 6199, 
6203, createDesctiption(), 0.0, 6199, 
6204, saveAttributes(freemind.main.XMLElement), 1.0, 6199, 
6206, DisjunctConditions(Object[]), 1.0, 6205, 
6208, getListCellRendererComponent(int, javax.swing.JComponent, freemind.controller.filter.condition.Condition, java.lang.String, java.lang.String, freemind.controller.filter.condition.JCondition), 0.0, 6205, 
6209, save(freemind.main.XMLElement, freemind.main.XMLElement, int, freemind.controller.filter.condition.Condition), 1.0, 6205, 
6210, load(freemind.controller.filter.condition.Condition, Object[], freemind.main.XMLElement, int, java.util.Vector), 1.0, 6205, 
6212, SelectedViewCondition(), 0.0, 6211, 
6213, toString(), 0.0, 6211, 
6215, getListCellRendererComponent(), 0.0, 6211, 
6216, CreateCondition(), 0.0, 6211, 
6217, save(freemind.main.XMLElement), 1.0, 6211, 
6221, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 6218, 
6222, load(freemind.main.XMLElement), 1.0, 6218, 
6223, createDesctiption(), 0.0, 6218, 
6225, IconContainedCondition(java.lang.String), 1.0, 6224, 
6230, getListCellRendererComponent(java.lang.String, freemind.controller.filter.condition.JCondition), 0.0, 6224, 
6231, getIconName(), 0.0, 6224, 
6232, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 6224, 
6233, load(freemind.main.XMLElement), 1.0, 6224, 
6235, ConditionFactory(), 0.0, 6234, 
6237, loadCondition(freemind.main.XMLElement), 1.0, 6234, 
6240, getNodeConditionNames(), 0.0, 6234, 
6241, getIconConditionNames(), 0.0, 6234, 
6242, getAttributeConditionNames(), 0.0, 6234, 
6244, createCellRendererComponent(java.lang.String, javax.swing.JLabel, freemind.controller.filter.condition.JCondition), 1.0, 6234, 
6246, ConjunctConditions(Object[]), 1.0, 6245, 
6248, getListCellRendererComponent(int, freemind.controller.filter.condition.Condition, javax.swing.JComponent, java.lang.String, java.lang.String, freemind.controller.filter.condition.JCondition), 0.0, 6245, 
6249, save(freemind.main.XMLElement, freemind.main.XMLElement, int, freemind.controller.filter.condition.Condition), 1.0, 6245, 
6250, load(freemind.controller.filter.condition.Condition, Object[], freemind.main.XMLElement, java.util.Vector, int), 1.0, 6245, 
6252, JCondition(), 0.0, 6251, 
6254, IgnoreCaseNodeContainsCondition(java.lang.String), 1.0, 6253, 
6256, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 6253, 
6257, load(freemind.main.XMLElement), 1.0, 6253, 
6258, createDesctiption(java.lang.String, java.lang.String), 0.0, 6253, 
6261, compareTo(double, java.lang.String, int, int, double, java.lang.NumberFormatException), 1.0, 6259, 
6262, saveAttributes(freemind.main.XMLElement), 1.0, 6259, 
6267, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 6264, 
6268, load(freemind.main.XMLElement), 1.0, 6264, 
6269, createDesctiption(java.lang.String), 0.0, 6264, 
6271, AttributeNotExistsCondition(java.lang.String), 1.0, 6270, 
6273, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 6270, 
6274, load(freemind.main.XMLElement), 1.0, 6270, 
6275, createDesctiption(java.lang.String), 0.0, 6270, 
6277, ConditionNotSatisfiedDecorator(freemind.controller.filter.condition.Condition), 1.0, 6276, 
6279, getListCellRendererComponent(java.lang.String, freemind.controller.filter.condition.JCondition, javax.swing.JComponent, java.lang.String), 0.0, 6276, 
6280, save(freemind.main.XMLElement, freemind.main.XMLElement), 1.0, 6276, 
6281, load(freemind.controller.filter.condition.Condition, freemind.main.XMLElement, java.util.Vector), 1.0, 6276, 
6287, getListCellRendererComponent(), 0.0, 6285, 
6288, save(freemind.main.XMLElement), 1.0, 6285, 
6290, NoFilteringCondition(), 0.0, 6289, 
6291, toString(), 0.0, 6289, 
6293, getListCellRendererComponent(), 0.0, 6289, 
6294, createCondition(), 0.0, 6289, 
6295, save(freemind.main.XMLElement), 1.0, 6289, 
6298, CompileXsdStart(java.io.InputStream), 1.0, 6297, 
6299, main(String[], de.foltin.CompileXsdStart), 1.0, 6297, 
6300, print(java.lang.String, java.util.Iterator, java.io.FileOutputStream, java.util.HashMap, java.lang.String, java.lang.String, java.io.File, java.util.Iterator), 0.0, 6297, 
6301, generate(javax.xml.parsers.SAXParserFactory, javax.xml.parsers.SAXParser), 0.0, 6297, 
6303, createClass(java.lang.String, java.util.HashMap), 1.0, 6297, 
6305, firstLetterCapitalized(java.lang.String), 1.0, 6297, 
6306, getNameFromXml(java.lang.String, java.lang.String, java.util.StringTokenizer), 1.0, 6297, 
6307, getType(java.lang.String), 1.0, 6297, 
6309, ElementTypes(int), 1.0, 6308, 
6310, getId(), 0.0, 6308, 
6312, XsdHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6311, 
6313, getClassName(), 0.0, 6311, 
6314, getClassMap(java.lang.String), 0.0, 6311, 
6316, addArrayListImport(), 0.0, 6311, 
6317, getExtendsClassName(), 0.0, 6311, 
6320, createElementHandler(), 0.0, 6311, 
6322, startClass(java.lang.String, org.xml.sax.Attributes, java.util.HashMap, java.lang.String), 1.0, 6311, 
6324, ExtensionHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6323, 
6327, SchemaHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6326, 
6329, ChoiceHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6328, 
6330, createElementHandler(), 0.0, 6328, 
6331, isSingleChoice(), 0.0, 6328, 
6335, ChoiceElementHandler(de.foltin.CompileXsdStart.XsdHandler, de.foltin.CompileXsdStart.ChoiceHandler), 1.0, 6334, 
6338, GroupHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6337, 
6341, SequenceHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6340, 
6342, createElementHandler(), 0.0, 6340, 
6344, SequenceElementHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6343, 
6347, ComplexTypeHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6346, 
6351, ComplexContentHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6350, 
6353, AttributeHandler(de.foltin.CompileXsdStart.XsdHandler), 1.0, 6352, 
6359, getControls(freemind.common.TextTranslator), 1.0, 6358, 
6366, checkListen(int), 1.0, 6361, 
6368, checkMulticast(java.net.InetAddress), 1.0, 6361, 
6369, checkSetFactory(), 0.0, 6361, 
6370, checkExec(java.lang.String), 1.0, 6361, 
6371, checkLink(java.lang.String, java.util.HashSet), 1.0, 6361, 
6372, checkDelete(java.lang.String), 1.0, 6361, 
6373, checkRead(java.io.FileDescriptor), 1.0, 6361, 
6375, checkRead(java.lang.String), 1.0, 6361, 
6376, checkWrite(java.io.FileDescriptor), 1.0, 6361, 
6377, checkWrite(java.lang.String), 1.0, 6361, 
6379, checkAccess(java.lang.Thread), 1.0, 6361, 
6380, checkAccess(java.lang.ThreadGroup), 1.0, 6361, 
6381, checkAwtEventQueueAccess(), 0.0, 6361, 
6382, checkCreateClassLoader(), 0.0, 6361, 
6383, checkExit(int), 1.0, 6361, 
6385, checkPackageAccess(java.lang.String), 1.0, 6361, 
6386, checkPackageDefinition(java.lang.String), 1.0, 6361, 
6388, checkPermission(java.security.Permission), 1.0, 6361, 
6389, checkPrintJobAccess(), 0.0, 6361, 
6390, checkPropertiesAccess(), 0.0, 6361, 
6391, checkPropertyAccess(java.lang.String), 1.0, 6361, 
6392, checkSecurityAccess(java.lang.String), 1.0, 6361, 
6393, checkSystemClipboardAccess(), 0.0, 6361, 
6394, checkTopLevelWindow(java.lang.Object), 1.0, 6361, 
6397, register(), 0.0, 6395, 
6398, deRegister(), 0.0, 6395, 
6400, getScriptCookies(), 0.0, 6395, 
6402, ScriptingPluginPropertyContributor(freemind.modes.mindmapmode.MindMapController), 1.0, 6401, 
6403, getControls(freemind.common.TextTranslator, java.util.Vector), 1.0, 6401, 
6405, PatternScriptModel(java.lang.String), 1.0, 6404, 
6407, endDialog(boolean), 1.0, 6404, 
6409, getAmountOfScripts(), 0.0, 6404, 
6410, getScript(int), 1.0, 6404, 
6411, isDirty(), 0.0, 6404, 
6414, getScript(), 0.0, 6404, 
6415, addNewScript(), 0.0, 6404, 
6417, startEditor(plugins.script.ScriptingRegistration.PatternScriptModel, java.lang.String, plugins.script.ScriptEditorPanel), 1.0, 6416, 
6420, gotoLine(int), 1.0, 6419, 
6423, SignedScriptHandler(), 0.0, 6422, 
6424, initializeKeystore(java.io.FileInputStream, char[], java.lang.Exception), 1.0, 6422, 
6428, ScriptContents(), 0.0, 6427, 
6429, ScriptContents(java.lang.String, int, int, java.util.regex.Matcher), 1.0, 6427, 
6430, toString(java.lang.String), 0.0, 6427, 
6432, startupMapHook(freemind.main.Tools.BooleanHolder, freemind.modes.MindMapNode, java.lang.String), 0.0, 6431, 
6438, gotoLine(int), 1.0, 6437, 
6440, gotoLine(int), 1.0, 6439, 
6443, gotoLine(int), 1.0, 6442, 
6450, updateFields(int, plugins.script.ScriptEditorPanel.ScriptHolder), 0.0, 6447, 
6451, select(int), 1.0, 6447, 
6452, storeCurrent(int), 0.0, 6447, 
6453, disposeDialog(boolean, freemind.controller.actions.generated.instance.ScriptEditorWindowConfigurationStorage, int), 1.0, 6447, 
6454, getPrintStream(), 0.0, 6447, 
6455, getErrorHandler(), 0.0, 6447, 
6457, write(int), 1.0, 6456, 
6458, write(byte[]), 1.0, 6456, 
6461, RunAction(java.lang.String), 1.0, 6460, 
6462, actionPerformed(java.awt.event.ActionEvent), 1.0, 6460, 
6464, SignAction(java.lang.String), 1.0, 6463, 
6465, actionPerformed(java.awt.event.ActionEvent, int, java.lang.String, plugins.script.ScriptEditorPanel.ScriptHolder), 1.0, 6463, 
6467, CancelAction(java.lang.String), 1.0, 6466, 
6468, actionPerformed(java.awt.event.ActionEvent), 1.0, 6466, 
6470, ExitAction(java.lang.String), 1.0, 6469, 
6471, actionPerformed(java.awt.event.ActionEvent), 1.0, 6469, 
6473, NewScriptAction(java.lang.String), 1.0, 6472, 
6474, actionPerformed(java.awt.event.ActionEvent, int), 1.0, 6472, 
6477, getScript(), 0.0, 6475, 
6478, getScriptName(), 0.0, 6475, 
6479, setScript(java.lang.String), 1.0, 6475, 
6480, setScriptName(java.lang.String), 1.0, 6475, 
6482, getAmountOfScripts(), 0.0, 6481, 
6483, getScript(int), 1.0, 6481, 
6488, endDialog(boolean), 1.0, 6481, 
6489, isDirty(), 0.0, 6481, 
6490, addNewScript(), 0.0, 6481, 
6492, windowClosing(java.awt.event.WindowEvent), 1.0, 6491, 
6494, actionPerformed(java.awt.event.ActionEvent), 1.0, 6493, 
6496, valueChanged(javax.swing.event.ListSelectionEvent), 1.0, 6495, 
6499, caretUpdate(javax.swing.event.CaretEvent, int, int, javax.swing.text.BadLocationException), 1.0, 6498, 
6502, gotoLine(int, javax.swing.text.Element, javax.swing.text.Element), 1.0, 6501, 
6505, startupMapHook(int, java.util.Vector, plugins.script.ScriptEditor.NodeScriptModel, freemind.modes.attributes.Attribute, freemind.modes.MindMapNode, plugins.script.ScriptEditorPanel), 0.0, 6504, 
6512, getAmountOfScripts(), 0.0, 6508, 
6513, getScript(int, freemind.modes.attributes.Attribute), 1.0, 6508, 
6516, endDialog(boolean, plugins.script.ScriptEditor.AttributeHolder, int, java.util.Iterator, freemind.modes.attributes.Attribute, int), 1.0, 6508, 
6517, isDirty(), 0.0, 6508, 
6518, addNewScript(boolean, int, plugins.script.ScriptEditor.AttributeHolder, java.util.Iterator, int, java.lang.String, int), 0.0, 6508, 
6522, generateHtml(java.util.Iterator, accessories.plugins.util.html.ClickableImageCreator.AreaHolder, java.lang.StringBuffer), 0.0, 6520, 
6523, createArea(), 0.0, 6520, 
6524, createArea(accessories.plugins.util.html.ClickableImageCreator.AreaHolder, freemind.modes.MindMapNode, java.awt.Point, freemind.view.mindmapview.NodeView, javax.swing.JComponent, java.util.Iterator, freemind.modes.MindMapNode), 1.0, 6520, 
6529, SchemeMode(), 0.0, 6528, 
6530, init(freemind.controller.Controller), 1.0, 6528, 
6531, toString(), 0.0, 6528, 
6532, activate(), 0.0, 6528, 
6533, restore(java.lang.String), 1.0, 6528, 
6534, getController(), 0.0, 6528, 
6535, getDefaultModeController(), 0.0, 6528, 
6536, getFrame(), 0.0, 6528, 
6537, createModeController(), 0.0, 6528, 
6542, save(java.io.File, java.io.BufferedWriter, java.lang.Exception), 1.0, 6540, 
6543, load(java.io.File, java.net.URL, java.io.IOException), 1.0, 6540, 
6544, loadMathStyle(freemind.modes.schememode.SchemeNodeModel, freemind.modes.schememode.SchemeNodeModel, java.io.Reader, java.lang.String, java.io.StreamTokenizer), 1.0, 6540, 
6545, getCode(), 0.0, 6540, 
6546, toString(), 0.0, 6540, 
6547, getXml(java.io.Writer), 1.0, 6540, 
6548, getFilteredXml(java.io.Writer), 1.0, 6540, 
6550, SchemeController(freemind.modes.Mode), 1.0, 6549, 
6551, newModel(freemind.modes.ModeController), 1.0, 6549, 
6553, saveAs(javax.swing.JFileChooser, int, java.io.File), 0.0, 6549, 
6554, getPopupMenu(), 0.0, 6549, 
6555, updateMenus(freemind.controller.StructuredMenuHolder), 1.0, 6549, 
6556, getHookFactory(), 0.0, 6549, 
6558, EvaluateAction(), 0.0, 6557, 
6559, actionPerformed(java.lang.String, java.awt.event.ActionEvent, java.util.StringTokenizer, java.lang.String), 1.0, 6557, 
6561, SchemeToolBar(freemind.modes.schememode.SchemeController, javax.swing.JButton), 1.0, 6560, 
6564, toString(java.lang.String), 0.0, 6562, 
6565, getCodeMathStyle(java.lang.String, java.util.ListIterator), 0.0, 6562, 
6566, getCodeClassicStyle(java.lang.String, java.util.ListIterator), 0.0, 6562, 
6567, isWriteable(), 0.0, 6562, 
6569, SchemePopupMenu(freemind.modes.schememode.SchemeController), 1.0, 6568, 
6573, init(java.lang.String, java.awt.CardLayout, com.jgoodies.forms.layout.FormLayout, freemind.common.PropertyControl, com.jgoodies.forms.builder.DefaultFormBuilder, java.util.Iterator, javax.swing.JPanel), 0.0, 6571, 
6574, addListeners(java.util.Iterator, freemind.common.PropertyBean, freemind.common.PropertyControl), 0.0, 6571, 
6575, getControls(java.util.Vector, java.util.Vector, freemind.modes.mindmapmode.MindMapController, freemind.modes.mindmapmode.actions.IconAction, int, freemind.modes.MindIcon, freemind.main.FreeMind, java.util.Enumeration, java.util.Vector, java.util.Vector), 0.0, 6571, 
6576, getPatternNames(java.util.Vector, freemind.controller.actions.generated.instance.Pattern, java.util.Iterator), 0.0, 6571, 
6577, getText(java.lang.String), 1.0, 6571, 
6578, setPattern(freemind.common.ThreeCheckBoxProperty, freemind.controller.actions.generated.instance.Pattern, freemind.main.FreeMind, freemind.modes.MindIcon, java.util.Iterator), 1.0, 6571, 
6581, transformEdgeWidth(java.lang.String, java.util.Iterator, int, java.util.HashMap, java.lang.String, java.lang.Integer), 1.0, 6571, 
6582, transformStringToWidth(java.lang.String, int, java.util.HashMap), 1.0, 6571, 
6583, getEdgeWidthTransformation(java.util.HashMap), 0.0, 6571, 
6584, getResultPattern(freemind.controller.actions.generated.instance.Pattern), 0.0, 6571, 
6585, getResultPattern(freemind.controller.actions.generated.instance.Pattern), 1.0, 6571, 
6588, propertyChange(java.beans.PropertyChangeEvent, freemind.common.PropertyControl, freemind.common.ThreeCheckBoxProperty), 1.0, 6571, 
6589, setPatternList(java.util.List, java.util.Vector), 1.0, 6571, 
6591, StylePatternFrameType(), 0.0, 6590, 
6593, propertyChange(java.beans.PropertyChangeEvent, java.util.Iterator, freemind.common.ThreeCheckBoxProperty), 1.0, 6592, 
6596, transform(java.lang.String), 1.0, 6595, 
6598, transform(java.lang.String), 1.0, 6597, 
6601, transform(java.lang.String), 1.0, 6600, 
6604, transform(java.lang.String), 1.0, 6603, 
6608, ReminderHookBase(), 0.0, 6607, 
6609, loadFrom(java.lang.String, freemind.main.XMLElement, java.util.HashMap), 1.0, 6607, 
6610, save(freemind.main.XMLElement, java.util.HashMap), 1.0, 6607, 
6611, shutdownMapHook(), 0.0, 6607, 
6612, invoke(freemind.modes.MindMapNode), 1.0, 6607, 
6613, scheduleTimer(freemind.modes.MindMapNode), 1.0, 6607, 
6615, getClockIcon(), 0.0, 6607, 
6616, getBellIcon(), 0.0, 6607, 
6617, getFlagIcon(), 0.0, 6607, 
6619, nodeRefresh(freemind.modes.MindMapNode), 1.0, 6607, 
6621, getRemindUserAt(), 0.0, 6607, 
6622, setRemindUserAt(long), 1.0, 6607, 
6623, getStateKey(), 0.0, 6607, 
6625, CheckReminder(), 0.0, 6624, 
6626, run(), 0.0, 6624, 
6628, run(int, java.text.MessageFormat, Object[], java.lang.String), 0.0, 6627, 
6631, TimerBlinkTask(boolean), 1.0, 6630, 
6632, run(), 0.0, 6630, 
6634, run(), 0.0, 6633, 
6639, AttributeView(freemind.view.mindmapview.NodeView), 1.0, 6638, 
6640, getAttributeRegistry(), 0.0, 6638, 
6641, getAttributes(), 0.0, 6638, 
6642, syncronizeAttributeView(), 0.0, 6638, 
6643, provideAttributeTable(), 0.0, 6638, 
6644, addListeners(), 0.0, 6638, 
6645, getModeController(), 0.0, 6638, 
6646, addTableModelListeners(freemind.modes.ModeController), 0.0, 6638, 
6647, removeListeners(), 0.0, 6638, 
6648, update(), 0.0, 6638, 
6649, areAttributesVisible(java.lang.String), 0.0, 6638, 
6650, getExtendedAttributeTableModel(), 0.0, 6638, 
6651, setViewType(javax.swing.table.JTableHeader, java.lang.String), 1.0, 6638, 
6652, getCurrentAttributeTableModel(), 0.0, 6638, 
6653, getNode(), 0.0, 6638, 
6654, stateChanged(javax.swing.event.ChangeEvent), 1.0, 6638, 
6655, getNodeView(), 0.0, 6638, 
6656, getMapView(), 0.0, 6638, 
6657, viewRemoved(), 0.0, 6638, 
6658, ancestorMoved(javax.swing.event.AncestorEvent), 1.0, 6638, 
6659, tableChanged(javax.swing.event.TableModelEvent, freemind.view.mindmapview.MapView), 1.0, 6638, 
6660, getViewType(), 0.0, 6638, 
6661, startEditing(), 0.0, 6638, 
6662, startEditingTable(), 0.0, 6638, 
6663, isPopupShown(), 0.0, 6638, 
6664, stopEditing(java.lang.String), 0.0, 6638, 
6666, run(), 0.0, 6665, 
6670, paint(java.awt.Graphics, java.awt.geom.AffineTransform, java.awt.Graphics2D), 1.0, 6668, 
6671, getHeight(), 0.0, 6668, 
6672, getWidth(), 0.0, 6668, 
6675, AttributeTable(freemind.view.mindmapview.attributeview.AttributeView, freemind.modes.MindMapNode, int, freemind.modes.attributes.AttributeController), 1.0, 6674, 
6679, getPreferredScrollableViewportSize(java.awt.Dimension, float), 0.0, 6674, 
6680, getDefaultComboBoxModel(), 0.0, 6674, 
6682, changeSelectedRowHeight(int, int), 1.0, 6674, 
6683, updateAttributeTable(), 0.0, 6674, 
6684, updateColumnWidths(int, int, float), 0.0, 6674, 
6685, updateRowHeights(int, int, int, float, float, int, float, int), 0.0, 6674, 
6686, getTableHeaderHeight(javax.swing.table.JTableHeader), 0.0, 6674, 
6688, getZoom(), 0.0, 6674, 
6689, tableChanged(javax.swing.event.TableModelEvent, freemind.view.mindmapview.MapView), 1.0, 6674, 
6690, viewRemoved(), 0.0, 6674, 
6691, removeNotify(), 0.0, 6674, 
6692, getFontSize(), 0.0, 6674, 
6693, setModel(javax.swing.table.TableModel), 1.0, 6674, 
6694, removeListenerFromEditor(javax.swing.JComboBox), 0.0, 6674, 
6695, removeEditor(), 0.0, 6674, 
6696, getAttributeTableModel(), 0.0, 6674, 
6697, getAttributeView(), 0.0, 6674, 
6698, setOptimalColumnWidths(int, int, java.awt.Component, int, int), 0.0, 6674, 
6699, insertRow(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 6674, 
6700, removeRow(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 6674, 
6701, moveRowUp(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 6674, 
6702, moveRowDown(int, freemind.view.mindmapview.attributeview.ExtendedAttributeTableModelDecorator), 1.0, 6674, 
6703, columnWidthChanged(freemind.modes.attributes.ColumnWidthChangeEvent, int, freemind.modes.attributes.AttributeTableLayoutModel, float, int), 1.0, 6674, 
6705, isVisible(), 0.0, 6674, 
6707, focusGained(java.awt.event.FocusEvent, java.awt.Component, java.awt.Component), 1.0, 6706, 
6708, focusLost(java.awt.event.FocusEvent, java.awt.Component, java.awt.Component, freemind.view.mindmapview.attributeview.AttributeView, java.lang.String), 1.0, 6706, 
6711, run(freemind.view.mindmapview.NodeView, java.awt.Component), 0.0, 6710, 
6714, mouseReleased(java.awt.event.MouseEvent, float, freemind.modes.attributes.AttributeTableModel, javax.swing.JViewport, int, int, javax.swing.table.JTableHeader, java.awt.Dimension, java.awt.Dimension, int, freemind.view.mindmapview.attributeview.AttributeTable), 1.0, 6713, 
6717, ReducedAttributeTableModelDecorator(freemind.view.mindmapview.attributeview.AttributeView), 1.0, 6716, 
6718, getIndex(), 0.0, 6716, 
6719, getRowCount(), 0.0, 6716, 
6722, calcRow(int), 1.0, 6716, 
6725, addRow(freemind.modes.attributes.Attribute), 1.0, 6716, 
6726, removeRow(int), 1.0, 6716, 
6727, stateChanged(javax.swing.event.ChangeEvent), 1.0, 6716, 
6728, rebuildTableModel(int, java.lang.String), 0.0, 6716, 
6729, tableChanged(javax.swing.event.TableModelEvent), 1.0, 6716, 
6730, areAttributesVisible(), 0.0, 6716, 
6732, AttributeViewScrollPane(freemind.view.mindmapview.attributeview.AttributeTable), 1.0, 6731, 
6733, getPreferredSize(), 0.0, 6731, 
6734, getMaximumSize(), 0.0, 6731, 
6735, isVisible(), 0.0, 6731, 
6737, getOptimalWidth(), 0.0, 6736, 
6738, getInsert(), 0.0, 6736, 
6739, getDelete(), 0.0, 6736, 
6740, getUp(), 0.0, 6736, 
6741, getDown(), 0.0, 6736, 
6742, mouseClicked(java.awt.event.MouseEvent), 1.0, 6736, 
6743, mousePressed(java.awt.event.MouseEvent), 1.0, 6736, 
6744, mouseReleased(java.awt.event.MouseEvent), 1.0, 6736, 
6745, maybeShowPopup(java.awt.event.MouseEvent), 1.0, 6736, 
6746, make(int, java.lang.String, freemind.modes.attributes.AttributeTableModel), 0.0, 6736, 
6748, mouseEntered(java.awt.event.MouseEvent), 1.0, 6736, 
6749, mouseExited(java.awt.event.MouseEvent), 1.0, 6736, 
6750, firePopupMenuWillBecomeInvisible(), 0.0, 6736, 
6751, firePopupMenuWillBecomeVisible(), 0.0, 6736, 
6752, getTable(), 0.0, 6736, 
6755, actionPerformed(java.awt.event.ActionEvent), 1.0, 6754, 
6758, actionPerformed(java.awt.event.ActionEvent), 1.0, 6757, 
6761, actionPerformed(java.awt.event.ActionEvent), 1.0, 6760, 
6764, actionPerformed(java.awt.event.ActionEvent), 1.0, 6763, 
6767, actionPerformed(java.awt.event.ActionEvent), 1.0, 6766, 
6770, run(java.awt.KeyboardFocusManager, java.awt.Component), 0.0, 6769, 
6773, AttributeTableModelDecoratorAdapter(freemind.view.mindmapview.attributeview.AttributeView, freemind.modes.MindMapNode), 1.0, 6772, 
6774, getNode(), 0.0, 6772, 
6775, getColumnCount(), 0.0, 6772, 
6776, getColumnClass(int), 1.0, 6772, 
6777, getColumnName(int), 1.0, 6772, 
6778, getColumnWidth(int), 1.0, 6772, 
6780, addListeners(), 0.0, 6772, 
6781, removeListeners(), 0.0, 6772, 
6782, viewRemoved(), 0.0, 6772, 
6783, tableChanged(javax.swing.event.TableModelEvent), 1.0, 6772, 
6784, editingCanceled(), 0.0, 6772, 
6785, areAttributesVisible(), 0.0, 6772, 
6787, ExtendedAttributeTableModelDecorator(freemind.view.mindmapview.attributeview.AttributeView), 1.0, 6786, 
6788, getRowCount(), 0.0, 6786, 
6790, insertRow(int), 1.0, 6786, 
6792, removeRow(int), 1.0, 6786, 
6794, stateChanged(javax.swing.event.ChangeEvent), 1.0, 6786, 
6795, editingCanceled(int), 0.0, 6786, 
6796, areAttributesVisible(), 0.0, 6786, 
6797, moveRowUp(int, freemind.modes.attributes.Attribute), 1.0, 6786, 
6798, moveRowDown(int, freemind.modes.attributes.Attribute), 1.0, 6786, 
6801, XmlExporter(), 0.0, 6800, 
6807, ExportListener(accessories.plugins.util.xslt.ExportDialog), 1.0, 6806, 
6809, actionPerformed(java.awt.event.ActionEvent), 1.0, 6806, 
6811, FileChooseListener(), 0.0, 6810, 
6813, actionPerformed(freemind.main.ExampleFileFilter, javax.swing.JFileChooser, java.awt.event.ActionEvent, int, java.lang.Object, int, java.lang.StringBuffer, java.lang.Exception), 1.0, 6810, 
6816, CommonToggleChildrenFoldedAction(freemind.modes.viewmodes.ViewControllerAdapter), 1.0, 6815, 
6817, actionPerformed(java.awt.event.ActionEvent, freemind.view.mindmapview.NodeView), 1.0, 6815, 
6819, ViewControllerAdapter(freemind.modes.Mode), 1.0, 6818, 
6820, doubleClick(java.awt.event.MouseEvent), 1.0, 6818, 
6821, plainClick(java.awt.event.MouseEvent), 1.0, 6818, 
6822, extendSelection(boolean, java.lang.String, boolean, boolean, java.awt.event.MouseEvent, boolean, freemind.view.mindmapview.NodeView), 1.0, 6818, 
6824, startupController(), 0.0, 6818, 
6825, shutdownController(), 0.0, 6818, 
6826, setAllActions(boolean), 1.0, 6818, 
6827, createXMLElement(), 0.0, 6818, 
6833, testTagRemoval(java.lang.String), 0.0, 6832, 
6834, testTagRemovalWithNewlines(java.lang.String), 0.0, 6832, 
6835, testTagRemovalOnlyForHtmlText(java.lang.String), 0.0, 6832, 
6836, testFlatNodeTableFilter(javax.swing.table.AbstractTableModel, accessories.plugins.time.FlatNodeTableFilterModel), 0.0, 6832, 
6837, testPositions(freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, freemind.main.HtmlTools.IndexPair, java.util.ArrayList), 0.0, 6832, 
6838, testDirectReplace(), 0.0, 6832, 
6839, testGetPureRegularExpression(), 0.0, 6832, 
6841, testReplaceNodeText(accessories.plugins.time.TimeList.IReplaceInputInformation), 0.0, 6832, 
6843, getRowCount(), 0.0, 6842, 
6844, getColumnCount(), 0.0, 6842, 
6848, getLength(), 0.0, 6846, 
6849, getNodeHolderAt(tests.freemind.findreplace.TestMindMapNode, int), 1.0, 6846, 
6852, getText(), 0.0, 6851, 
6853, setText(java.lang.String), 1.0, 6851, 
6854, getObjectId(freemind.modes.ModeController), 1.0, 6851, 
6855, childrenFolded(), 0.0, 6851, 
6856, childrenUnfolded(), 0.0, 6851, 
6857, hasChildren(), 0.0, 6851, 
6858, getFilterInfo(), 0.0, 6851, 
6859, getChildPosition(freemind.modes.MindMapNode), 1.0, 6851, 
6860, getPreferredChild(), 0.0, 6851, 
6861, setPreferredChild(freemind.modes.MindMapNode), 1.0, 6851, 
6862, getNodeLevel(), 0.0, 6851, 
6863, getLink(), 0.0, 6851, 
6864, getShortText(freemind.modes.ModeController), 1.0, 6851, 
6865, getEdge(), 0.0, 6851, 
6866, getColor(), 0.0, 6851, 
6867, getStyle(), 0.0, 6851, 
6868, setStyle(java.lang.String), 1.0, 6851, 
6869, hasStyle(), 0.0, 6851, 
6870, getParentNode(), 0.0, 6851, 
6871, isBold(), 0.0, 6851, 
6872, isItalic(), 0.0, 6851, 
6873, isUnderlined(), 0.0, 6851, 
6874, getFont(), 0.0, 6851, 
6875, getFontSize(), 0.0, 6851, 
6876, getFontFamilyName(), 0.0, 6851, 
6877, getViewers(), 0.0, 6851, 
6878, addViewer(freemind.view.mindmapview.NodeView), 1.0, 6851, 
6879, getPlainTextContent(), 0.0, 6851, 
6880, getPath(), 0.0, 6851, 
6881, isDescendantOf(freemind.modes.MindMapNode), 1.0, 6851, 
6882, isRoot(), 0.0, 6851, 
6883, isFolded(), 0.0, 6851, 
6884, isLeft(), 0.0, 6851, 
6885, isOnLeftSideOfRoot(), 0.0, 6851, 
6886, setLeft(boolean), 1.0, 6851, 
6887, setFolded(boolean), 1.0, 6851, 
6888, setFont(java.awt.Font), 1.0, 6851, 
6889, setShiftY(int), 1.0, 6851, 
6890, getShiftY(), 0.0, 6851, 
6891, calcShiftY(), 0.0, 6851, 
6892, setVGap(int), 1.0, 6851, 
6893, getVGap(), 0.0, 6851, 
6894, calcVGap(), 0.0, 6851, 
6895, setHGap(int), 1.0, 6851, 
6896, getHGap(), 0.0, 6851, 
6897, setLink(java.lang.String), 1.0, 6851, 
6898, setFontSize(int), 1.0, 6851, 
6899, setColor(java.awt.Color), 1.0, 6851, 
6900, getIcons(), 0.0, 6851, 
6902, removeIcon(int), 1.0, 6851, 
6903, getCloud(), 0.0, 6851, 
6904, setCloud(freemind.modes.MindMapCloud), 1.0, 6851, 
6905, getBackgroundColor(), 0.0, 6851, 
6906, setBackgroundColor(java.awt.Color), 1.0, 6851, 
6907, getHooks(), 0.0, 6851, 
6908, getActivatedHooks(), 0.0, 6851, 
6909, addHook(freemind.extensions.PermanentNodeHook), 1.0, 6851, 
6910, invokeHook(freemind.extensions.NodeHook), 1.0, 6851, 
6911, removeHook(freemind.extensions.PermanentNodeHook), 1.0, 6851, 
6913, getToolTip(), 0.0, 6851, 
6914, setAdditionalInfo(java.lang.String), 1.0, 6851, 
6915, getAdditionalInfo(), 0.0, 6851, 
6916, shallowCopy(), 0.0, 6851, 
6918, getStateIcons(), 0.0, 6851, 
6920, getHistoryInformation(), 0.0, 6851, 
6921, setHistoryInformation(freemind.modes.HistoryInformation), 1.0, 6851, 
6922, isVisible(), 0.0, 6851, 
6923, hasOneVisibleChild(), 0.0, 6851, 
6924, getMap(), 0.0, 6851, 
6925, getAttributes(), 0.0, 6851, 
6926, addTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 6851, 
6927, removeTreeModelListener(javax.swing.event.TreeModelListener), 1.0, 6851, 
6929, remove(int), 1.0, 6851, 
6930, remove(javax.swing.tree.MutableTreeNode), 1.0, 6851, 
6931, setUserObject(java.lang.Object), 1.0, 6851, 
6932, removeFromParent(), 0.0, 6851, 
6933, setParent(javax.swing.tree.MutableTreeNode), 1.0, 6851, 
6934, getChildAt(int), 1.0, 6851, 
6935, getChildCount(), 0.0, 6851, 
6936, getParent(), 0.0, 6851, 
6937, getIndex(javax.swing.tree.TreeNode), 1.0, 6851, 
6938, getAllowsChildren(), 0.0, 6851, 
6939, isLeaf(), 0.0, 6851, 
6940, children(), 0.0, 6851, 
6941, getXmlText(), 0.0, 6851, 
6942, setXmlText(java.lang.String), 1.0, 6851, 
6943, getXmlNoteText(), 0.0, 6851, 
6944, setXmlNoteText(java.lang.String), 1.0, 6851, 
6945, getChildren(), 0.0, 6851, 
6946, getNoteText(), 0.0, 6851, 
6947, setNoteText(java.lang.String), 1.0, 6851, 
6948, getAttribute(int), 1.0, 6851, 
6949, getAttributeKeyList(), 0.0, 6851, 
6950, getAttributePosition(java.lang.String), 1.0, 6851, 
6952, getAttributeTableLength(), 0.0, 6851, 
6953, removeViewer(freemind.view.mindmapview.NodeView), 1.0, 6851, 
6954, acceptViewVisitor(freemind.view.mindmapview.NodeViewVisitor), 1.0, 6851, 
6955, getListeners(), 0.0, 6851, 
6956, isNewChildLeft(), 0.0, 6851, 
6957, createAttributeTableModel(), 0.0, 6851, 
6958, getAttribute(java.lang.String), 1.0, 6851, 
6959, isWriteable(), 0.0, 6851, 
6964, getSession(), 0.0, 6962, 
6966, FreeMindJabberMessageListener(plugins.collaboration.jabber.mindmap.MapSharingController), 1.0, 6965, 
6967, messageReceived(com.echomine.jabber.JabberMessageEvent, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CollaborationAction, com.echomine.jabber.JabberChatMessage, com.echomine.jabber.JabberChatMessage, freemind.controller.actions.generated.instance.CompoundAction, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Exception), 1.0, 6965, 
6968, executeRemoteCommand(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.CompoundAction, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 6965, 
6970, run(java.lang.Exception), 0.0, 6969, 
6974, addListeners(), 0.0, 6972, 
6977, showMapSharingDialogue(), 0.0, 6972, 
6978, stopSharing(), 0.0, 6972, 
6979, setSharingStopped(java.lang.String), 1.0, 6972, 
6980, setState(int), 1.0, 6972, 
6981, getController(), 0.0, 6972, 
6982, setSendingEnabled(boolean), 1.0, 6972, 
6983, isSendingEnabled(), 0.0, 6972, 
6985, mouseClicked(java.awt.event.MouseEvent), 1.0, 6984, 
6986, mouseEntered(java.awt.event.MouseEvent), 1.0, 6984, 
6987, mouseExited(java.awt.event.MouseEvent), 1.0, 6984, 
6988, mousePressed(java.awt.event.MouseEvent), 1.0, 6984, 
6989, mouseReleased(java.awt.event.MouseEvent), 1.0, 6984, 
6992, mouseClicked(java.awt.event.MouseEvent), 1.0, 6991, 
6993, mouseEntered(java.awt.event.MouseEvent), 1.0, 6991, 
6994, mouseExited(java.awt.event.MouseEvent), 1.0, 6991, 
6995, mousePressed(java.awt.event.MouseEvent), 1.0, 6991, 
6996, mouseReleased(java.awt.event.MouseEvent), 1.0, 6991, 
6999, mouseClicked(java.awt.event.MouseEvent), 1.0, 6998, 
7000, mouseEntered(java.awt.event.MouseEvent), 1.0, 6998, 
7001, mouseExited(java.awt.event.MouseEvent), 1.0, 6998, 
7002, mousePressed(java.awt.event.MouseEvent), 1.0, 6998, 
7003, mouseReleased(java.awt.event.MouseEvent), 1.0, 6998, 
7006, mouseClicked(freemind.controller.actions.generated.instance.RevertXmlAction, java.awt.event.MouseEvent, freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 7005, 
7007, mouseEntered(java.awt.event.MouseEvent), 1.0, 7005, 
7008, mouseExited(java.awt.event.MouseEvent), 1.0, 7005, 
7009, mousePressed(java.awt.event.MouseEvent), 1.0, 7005, 
7010, mouseReleased(java.awt.event.MouseEvent), 1.0, 7005, 
7013, mouseClicked(java.awt.event.MouseEvent), 1.0, 7012, 
7014, mouseEntered(java.awt.event.MouseEvent), 1.0, 7012, 
7015, mouseExited(java.awt.event.MouseEvent), 1.0, 7012, 
7016, mousePressed(java.awt.event.MouseEvent), 1.0, 7012, 
7017, mouseReleased(java.awt.event.MouseEvent), 1.0, 7012, 
7022, sendMapSharingStopRequest(freemind.controller.actions.generated.instance.CollaborationAction, java.lang.String, java.lang.Exception), 0.0, 7019, 
7025, marshal(freemind.controller.actions.generated.instance.XmlAction), 1.0, 7019, 
7027, isMapShared(boolean), 1.0, 7019, 
7028, setShareMapUser(java.lang.String), 1.0, 7019, 
7029, filterAction(freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.controller.actions.generated.instance.CompoundAction, com.echomine.common.SendMessageFailedException), 1.0, 7019, 
7032, MindMapNodeMotionListener(freemind.modes.mindmapmode.MindMapController), 1.0, 7031, 
7033, mouseMoved(java.awt.event.MouseEvent), 1.0, 7031, 
7034, mouseDragged(java.awt.Point, java.awt.event.MouseEvent, freemind.view.mindmapview.NodeMotionListenerView, java.awt.Point, freemind.view.mindmapview.NodeView, freemind.view.mindmapview.MapView, freemind.modes.MindMapNode, freemind.modes.MindMapNode), 1.0, 7031, 
7038, mouseClicked(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView, freemind.modes.MindMapNode), 1.0, 7031, 
7039, getNodeView(java.awt.event.MouseEvent), 1.0, 7031, 
7040, mouseEntered(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeMotionListenerView), 1.0, 7031, 
7041, mouseExited(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeMotionListenerView), 1.0, 7031, 
7042, stopDrag(), 0.0, 7031, 
7043, mouseReleased(java.awt.event.MouseEvent, freemind.view.mindmapview.NodeView, int, java.awt.Point, int, freemind.modes.MindMapNode, int, freemind.modes.MindMapNode, freemind.view.mindmapview.NodeMotionListenerView), 1.0, 7031, 
7044, resetPositions(freemind.modes.MindMapNode), 1.0, 7031, 
7045, isActive(), 0.0, 7031, 
7047, getDragStartingPoint(), 0.0, 7031, 
7049, run(java.awt.Rectangle, boolean), 0.0, 7048, 
7052, MindMapMouseMotionManager(freemind.modes.mindmapmode.MindMapController), 1.0, 7051, 
7053, mouseDragged(java.awt.event.MouseEvent, freemind.view.mindmapview.MapView, int, int), 1.0, 7051, 
7054, mousePressed(java.awt.event.MouseEvent), 1.0, 7051, 
7055, mouseReleased(java.awt.event.MouseEvent, java.awt.Point, java.awt.Point), 1.0, 7051, 
7057, MindMapNodeDropListener(freemind.modes.mindmapmode.MindMapController), 1.0, 7056, 
7058, isDragAcceptable(java.awt.dnd.DropTargetDragEvent), 1.0, 7056, 
7059, isDropAcceptable(java.awt.dnd.DropTargetDropEvent, freemind.modes.MindMapNode, freemind.modes.MindMapNode), 1.0, 7056, 
7060, drop(java.awt.dnd.DropTargetDropEvent, freemind.modes.mindmapmode.MindMapMapModel, java.util.List, java.lang.String, freemind.view.mindmapview.MainView, java.util.ListIterator, boolean, int, freemind.modes.MindMapNode, java.awt.datatransfer.Transferable, freemind.modes.mindmapmode.MindMapNodeModel, int, java.awt.datatransfer.Transferable, freemind.modes.MindMapNode, freemind.view.mindmapview.NodeView, freemind.modes.mindmapmode.MindMapNodeModel, java.lang.String, java.lang.Exception), 1.0, 7056, 
7061, dragEnter(java.awt.dnd.DropTargetDragEvent), 1.0, 7056, 
7062, dragOver(boolean, java.awt.dnd.DropTargetDragEvent, int, freemind.view.mindmapview.MainView, int), 1.0, 7056, 
7063, dragExit(java.awt.dnd.DropTargetEvent, freemind.view.mindmapview.MainView), 1.0, 7056, 
7064, dragScroll(java.awt.dnd.DropTargetDragEvent), 1.0, 7056, 
7065, dropActionChanged(java.awt.dnd.DropTargetDragEvent), 1.0, 7056, 
7069, actionPerformed(java.awt.event.ActionEvent), 1.0, 7067, 
7073, paint(java.awt.Graphics, java.awt.print.PageFormat, java.awt.Graphics2D), 1.0, 7070, 
7074, getPageHeight(java.awt.print.PageFormat), 1.0, 7070, 
7075, getPageWidth(java.awt.print.PageFormat), 1.0, 7070, 
7076, moveIndex(int, int), 1.0, 7070, 
7077, changeZoom(double), 1.0, 7070, 
7078, resize(int), 0.0, 7070, 
7079, getPageFormat(), 0.0, 7070, 
7080, getMinimumSize(), 0.0, 7070, 
7081, getPageIndex(), 0.0, 7070, 
7084, getButton(java.lang.String), 1.0, 7082, 
7087, actionPerformed(java.awt.event.ActionEvent), 1.0, 7082, 
7090, actionPerformed(java.awt.event.ActionEvent), 1.0, 7088, 
7091, paintPageIndex(), 0.0, 7088, 
7092, getPageIndexText(), 0.0, 7088, 
7094, run(), 0.0, 7093, 
7098, startupMapHook(plugins.collaboration.jabber.mindmap.MapSharingController), 0.0, 7097, 
7101, filterAction(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 7100, 
7104, executeAction(freemind.controller.actions.generated.instance.XmlAction), 1.0, 7103, 
7105, startTransaction(java.lang.String), 1.0, 7103, 
7106, endTransaction(java.lang.String), 1.0, 7103, 
7108, act(freemind.controller.actions.generated.instance.XmlAction), 1.0, 7107, 
7109, getDoActionClass(), 0.0, 7107, 
7111, AbstractActorXml(freemind.modes.mindmapmode.MindMapController), 1.0, 7110, 
7112, getNode(java.lang.String), 1.0, 7110, 
7113, getNodeID(freemind.modes.MindMapNode), 1.0, 7110, 
7114, getAttributeController(), 0.0, 7110, 
7115, getAttributeRegistry(), 0.0, 7110, 
7116, createCompoundAction(), 0.0, 7110, 
7119, actionPerformed(java.awt.event.ActionEvent), 1.0, 7117, 
7120, xmlActionPerformed(java.awt.event.ActionEvent), 1.0, 7117, 
7121, getActionFactory(), 0.0, 7117, 
7122, getMindMapController(), 0.0, 7117, 
7123, addActor(freemind.modes.mindmapmode.actions.xml.ActorXml), 1.0, 7117, 
7124, getActor(), 0.0, 7117, 
7126, PrintActionHandler(freemind.modes.mindmapmode.MindMapController), 1.0, 7125, 
7127, startTransaction(java.lang.String), 1.0, 7125, 
7128, endTransaction(java.lang.String), 1.0, 7125, 
7129, executeAction(freemind.controller.actions.generated.instance.XmlAction, java.lang.String), 1.0, 7125, 
7132, getDoAction(), 0.0, 7130, 
7133, getUndoAction(), 0.0, 7130, 
7134, reverse(), 0.0, 7130, 
7136, ActionFactory(freemind.controller.Controller), 1.0, 7135, 
7137, registerHandler(freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 7135, 
7138, deregisterHandler(freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 7135, 
7139, registerFilter(freemind.modes.mindmapmode.actions.xml.ActionFilter), 1.0, 7135, 
7140, deregisterFilter(freemind.modes.mindmapmode.actions.xml.ActionFilter), 1.0, 7135, 
7141, startTransaction(java.lang.String, java.util.Iterator, freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 7135, 
7142, endTransaction(java.lang.String, java.util.Iterator, freemind.modes.mindmapmode.actions.xml.ActionHandler), 1.0, 7135, 
7143, executeAction(freemind.modes.mindmapmode.actions.xml.ActionPair, freemind.modes.mindmapmode.actions.xml.ActionFilter, java.util.Iterator, Object[], boolean, freemind.modes.mindmapmode.actions.xml.ActionHandler, freemind.modes.mindmapmode.actions.xml.ActionPair, java.lang.Exception), 1.0, 7135, 
7144, getController(), 0.0, 7135, 
7146, deregisterActor(java.lang.Class), 1.0, 7135, 
7147, getActor(freemind.controller.actions.generated.instance.XmlAction, java.util.Iterator, java.lang.Class), 1.0, 7135, 
7148, registerUndoHandler(freemind.modes.mindmapmode.actions.xml.UndoActionHandler), 1.0, 7135, 
7151, executeAction(freemind.modes.mindmapmode.actions.xml.ActionPair), 1.0, 7149, 
7152, startTransaction(java.lang.String), 1.0, 7149, 
7153, endTransaction(java.lang.String), 1.0, 7149, 
7155, getController(), 0.0, 7154, 
7156, NodeHookUndoableContentActor(freemind.modes.mindmapmode.MindMapController), 1.0, 7154, 
7162, act(freemind.controller.actions.generated.instance.XmlAction, freemind.controller.actions.generated.instance.HookContentNodeAction, freemind.modes.MindMapNode), 1.0, 7154, 
7163, getDoActionClass(), 0.0, 7154, 
7167, keyTyped(java.awt.event.KeyEvent), 1.0, 7165, 
7168, keyPressed(boolean, java.awt.event.KeyEvent), 1.0, 7165, 
7169, keyReleased(java.awt.event.KeyEvent), 1.0, 7165, 
7173, CommonToggleFoldedAction(freemind.modes.ControllerAdapter), 1.0, 7172, 
7174, actionPerformed(java.awt.event.ActionEvent), 1.0, 7172, 
7175, toggleFolded(), 0.0, 7172, 
7176, toggleFolded(java.util.ListIterator, java.util.Iterator, boolean, freemind.modes.MindMapNode), 1.0, 7172, 
7177, reset(java.util.ListIterator), 1.0, 7172, 
7178, getFoldingState(boolean, boolean, freemind.main.Tools.BooleanHolder, java.util.ListIterator, freemind.modes.MindMapNode, java.util.ListIterator), 1.0, 7172, 
7181, actionPerformed(java.awt.event.ActionEvent), 1.0, 7179, 
7184, MapSharingWizardView(), 0.0, 7183, 
7185, addCloseButtonMouseListener(java.awt.event.MouseListener), 1.0, 7183, 
7186, addNextButtonMouseListener(java.awt.event.MouseListener), 1.0, 7183, 
7187, addBackButtonMouseListener(java.awt.event.MouseListener), 1.0, 7183, 
7188, addAcceptButtonMouseListener(java.awt.event.MouseListener), 1.0, 7183, 
7189, addDeclineButtonMouseListener(java.awt.event.MouseListener), 1.0, 7183, 
7190, buildShareMapSelectionGui(javax.swing.ButtonGroup, javax.swing.JPanel, javax.swing.SpringLayout), 0.0, 7183, 
7191, buildConnectToServerGui(javax.swing.JPanel, javax.swing.JLabel, javax.swing.JLabel, javax.swing.JLabel, javax.swing.SpringLayout), 0.0, 7183, 
7192, buildSelectUserGui(javax.swing.JPanel, javax.swing.SpringLayout), 0.0, 7183, 
7194, buildMapShareAcceptDeclineGui(java.lang.String, javax.swing.SpringLayout), 1.0, 7183, 
7196, addCloseButton(javax.swing.JPanel), 1.0, 7183, 
7197, addAcceptDeclineButtons(javax.swing.JPanel), 1.0, 7183, 
7198, removeUIs(), 0.0, 7183, 
7199, showMapSharingSelectionDialog(), 0.0, 7183, 
7200, showConnectToServerDialog(), 0.0, 7183, 
7201, showSelectUserDialog(), 0.0, 7183, 
7202, showAwaitMapSharingMessage(), 0.0, 7183, 
7203, showSharingAcceptedMessage(java.lang.String, java.lang.String), 1.0, 7183, 
7204, showSharingDeclinedMessage(java.lang.String, java.lang.String), 1.0, 7183, 
7205, showSharingStoppedMessage(java.lang.String, java.lang.String), 1.0, 7183, 
7206, showMapShareAcceptDeclineMessage(java.lang.String, java.lang.String), 1.0, 7183, 
7207, isShareMapSelected(), 0.0, 7183, 
7208, isWaitForMapSharingSelected(), 0.0, 7183, 
7209, getServername(), 0.0, 7183, 
7210, getUsername(), 0.0, 7183, 
7211, getPassword(), 0.0, 7183, 
7212, getMapShareUserName(), 0.0, 7183, 
7214, printSizes(java.awt.Component), 1.0, 7213, 
7221, toString(), 0.0, 7219, 
7222, rename(), 0.0, 7219, 
7223, getModel(), 0.0, 7219, 
7224, getView(), 0.0, 7219, 
7225, getMode(), 0.0, 7219, 
7226, setName(java.lang.String), 1.0, 7219, 
7227, getModeController(), 0.0, 7219, 
7228, getName(), 0.0, 7219, 
7229, getDisplayName(), 0.0, 7219, 
7230, setDisplayName(java.lang.String), 1.0, 7219, 
